"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var antd_1 = require("antd");
var zxcvbn_1 = __importDefault(require("zxcvbn"));
var PasswordInput = /** @class */ (function (_super) {
    __extends(PasswordInput, _super);
    function PasswordInput() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            level: -1
        };
        _this.onChange = function (e) {
            var value = e.target.value;
            var score = value.length == 0 ? -1 : zxcvbn_1.default(value).score;
            _this.setState({ level: score });
            if (_this.props.onChange) {
                _this.props.onChange(e);
            }
        };
        return _this;
    }
    PasswordInput.prototype.render = function () {
        var _a = this.props, settings = _a.settings, inputProps = _a.inputProps, rest = __rest(_a, ["settings", "inputProps"]);
        return (react_1.default.createElement("div", null,
            react_1.default.createElement(antd_1.Input.Password, __assign({}, inputProps, rest, { onChange: this.onChange })),
            react_1.default.createElement(exports.PasswordStrengthIndicator, { level: this.state.level, settings: settings })));
    };
    PasswordInput.defaultProps = {
        settings: {
            colorScheme: {
                levels: ["#ff4033", "#fe940d", "#ffd908", "#cbe11d", "#6ecc3a"],
                noLevel: "lightgrey"
            },
            height: 3,
            alwaysVisible: false
        }
    };
    return PasswordInput;
}(react_1.default.Component));
exports.PasswordInput = PasswordInput;
exports.PasswordStrengthIndicator = function (_a) {
    var level = _a.level, settings = _a.settings;
    if (!settings.alwaysVisible && level < 0) {
        return null;
    }
    var indicators = [];
    for (var i = 0; i < 5; i++) {
        var color = i <= level
            ? settings.colorScheme.levels[level]
            : settings.colorScheme.noLevel;
        indicators.push(react_1.default.createElement("div", { key: "indicator-" + i, style: getIndicatorStyle(color, settings.height) }));
    }
    return react_1.default.createElement("div", { style: getWrapperStyle(settings.height) }, indicators);
};
function getWrapperStyle(height) {
    return {
        lineHeight: height + "px"
    };
}
function getIndicatorStyle(color, height) {
    return {
        display: "inline-block",
        width: "20%",
        backgroundColor: color,
        height: height + "px",
        borderRadius: "2px"
    };
}
