{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/user/addcourse/Form/StudentInput.js\";\nimport React, { useState } from \"react\";\nimport { Input, Row, Upload, Button, Col, Space, Tag } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport API from \"../../../../api/API\";\nimport \"../addcourse.css\";\nconst {\n  TextArea\n} = Input;\n/**\n * @MatthewSclar\n * This is the component that handles all functionality regarding adding students\n * to the course that is currently being created, by the instructor.\n *\n */\n\nconst StudentInput = ({\n  course_id,\n  addedStudents,\n  hideModal\n}) => {\n  const [students, setStudents] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [text, setText] = useState(hideModal ? \"Cancel\" : \"Skip for now\");\n  const [disabled, setDisabled] = useState(true);\n\n  function validateEmail(email) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  const onConfirm = async () => {\n    hideModal && hideModal();\n    var emails = {\n      emails: tags\n    };\n    console.log(\"Inviting Emails\", tags);\n\n    try {\n      const response = await API.inviteEmails(course_id, emails);\n      console.log(response);\n      addedStudents && addedStudents();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const onChange = ({\n    target: {\n      value\n    }\n  }) => {\n    setDisabled(false);\n    setStudents(value);\n  };\n\n  const removeTag = removedtag => {\n    const newtags = tags.filter(tag => tag !== removedtag);\n    setTags(newtags);\n  };\n\n  const onAddTags = () => {\n    var temp = students.split(\";\");\n    setText(\"Confirm\");\n\n    if (students !== \"\") {\n      var count = 0;\n      temp.forEach(email => {\n        var newtags = tags;\n\n        if (!newtags.includes(email) && validateEmail(email)) {\n          count = count + 1;\n          newtags.push(email);\n          setTags(newtags);\n        } else {\n          setError(\"Only nonduplicate and valid emails will be accepted.\");\n          setMessage(\"\");\n        }\n      });\n    }\n\n    if (count > 0) {\n      setMessage(`Added ${count} students.`);\n    }\n\n    setStudents(\"\");\n  };\n\n  const beforeUpload = file => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      setStudents(e.target.result);\n    };\n\n    reader.readAsText(file);\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-course-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"center\",\n    gutter: [0, 10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \" Add Students to Your Course\")), /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 10],\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      paddingBottom: \"5px\",\n      maxHeight: \"250px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, tags.map(email => {\n    return /*#__PURE__*/React.createElement(Tag, {\n      closable: true,\n      onClose: () => removeTag(email),\n      key: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \" \", email, \" \");\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 10],\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    value: students,\n    onChange: onChange,\n    placeholder: \"Input Student emails, semicolon delimited. For example: mss91@duke.edu;jrr59@duke.edu;ttl45@duke.edu...\",\n    autoSize: {\n      minRows: 3,\n      maxRows: 5\n    },\n    mode: \"tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    align: \"center\",\n    gutter: [0, 10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    size: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#ff4d4f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, error), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, message))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 4,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onAddTags,\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Add Students\")), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-add-students\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Upload, {\n    accept: \".csv\",\n    style: {\n      width: \"100%\"\n    },\n    beforeUpload: beforeUpload,\n    showUploadList: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UploadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }), \" Upload from csv\"))))), /*#__PURE__*/React.createElement(Row, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    style: {\n      width: \"100%\"\n    },\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Teaching assistants need to be added as students and promoted in course settings\"), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    type: \"success\",\n    onClick: onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, text)))));\n};\n\nexport default StudentInput;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/user/addcourse/Form/StudentInput.js"],"names":["React","useState","Input","Row","Upload","Button","Col","Space","Tag","UploadOutlined","API","TextArea","StudentInput","course_id","addedStudents","hideModal","students","setStudents","tags","setTags","error","setError","message","setMessage","text","setText","disabled","setDisabled","validateEmail","email","re","test","onConfirm","emails","console","log","response","inviteEmails","e","onChange","target","value","removeTag","removedtag","newtags","filter","tag","onAddTags","temp","split","count","forEach","includes","push","beforeUpload","file","reader","FileReader","onload","result","readAsText","width","paddingBottom","maxHeight","overflowY","map","minRows","maxRows","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Input, Row, Upload, Button, Col, Space, Tag } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport API from \"../../../../api/API\";\nimport \"../addcourse.css\";\nconst { TextArea } = Input;\n\n/**\n * @MatthewSclar\n * This is the component that handles all functionality regarding adding students\n * to the course that is currently being created, by the instructor.\n *\n */\n\nconst StudentInput = ({ course_id, addedStudents, hideModal }) => {\n  const [students, setStudents] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [text, setText] = useState(hideModal ? \"Cancel\" : \"Skip for now\");\n  const [disabled, setDisabled] = useState(true);\n\n  function validateEmail(email) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  const onConfirm = async () => {\n    hideModal && hideModal();\n    var emails = {\n      emails: tags,\n    };\n    console.log(\"Inviting Emails\", tags);\n    try {\n      const response = await API.inviteEmails(course_id, emails);\n      console.log(response);\n      addedStudents && addedStudents();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const onChange = ({ target: { value } }) => {\n    setDisabled(false);\n    setStudents(value);\n  };\n\n  const removeTag = (removedtag) => {\n    const newtags = tags.filter((tag) => tag !== removedtag);\n    setTags(newtags);\n  };\n\n  const onAddTags = () => {\n    var temp = students.split(\";\");\n    setText(\"Confirm\");\n\n    if (students !== \"\") {\n      var count = 0;\n      temp.forEach((email) => {\n        var newtags = tags;\n        if (!newtags.includes(email) && validateEmail(email)) {\n          count = count + 1;\n          newtags.push(email);\n          setTags(newtags);\n        } else {\n          setError(\"Only nonduplicate and valid emails will be accepted.\");\n          setMessage(\"\");\n        }\n      });\n    }\n    if (count > 0) {\n      setMessage(`Added ${count} students.`);\n    }\n    setStudents(\"\");\n  };\n\n  const beforeUpload = (file) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      setStudents(e.target.result);\n    };\n    reader.readAsText(file);\n    return false;\n  };\n\n  return (\n    <div className=\"add-course-container\">\n      <Row align=\"center\" gutter={[0, 10]}>\n        <h2> Add Students to Your Course</h2>\n      </Row>\n\n      <Row gutter={[0, 10]} align=\"center\">\n        <Col span={24} align=\"center\">\n          <div\n            style={{\n              width: \"100%\",\n              paddingBottom: \"5px\",\n              maxHeight: \"250px\",\n              overflowY: \"auto\",\n            }}\n          >\n            {tags.map((email) => {\n              return (\n                <Tag closable onClose={() => removeTag(email)} key={email}>\n                  {\" \"}\n                  {email}{\" \"}\n                </Tag>\n              );\n            })}\n          </div>\n        </Col>\n      </Row>\n      <Row gutter={[0, 10]} align=\"center\">\n        <Col span={24} align=\"center\">\n          <TextArea\n            value={students}\n            onChange={onChange}\n            placeholder=\"Input Student emails, semicolon delimited. For example: mss91@duke.edu;jrr59@duke.edu;ttl45@duke.edu...\"\n            autoSize={{ minRows: 3, maxRows: 5 }}\n            mode=\"tag\"\n          />\n        </Col>\n      </Row>\n      <Row align=\"center\" gutter={[0, 10]}>\n        <Space size={2}>\n          <p style={{ color: \"#ff4d4f\" }}>{error}</p>\n\n          <p>{message}</p>\n        </Space>\n      </Row>\n      <Row gutter={4} align=\"center\">\n        <Col span={12}>\n          <Button\n            onClick={onAddTags}\n            type=\"primary\"\n            htmlType=\"submit\"\n            block\n            disabled={disabled}\n          >\n            Add Students\n          </Button>\n        </Col>\n        <Col span={12}>\n          <div className=\"upload-add-students\">\n            {\" \"}\n            <Upload\n              accept=\".csv\"\n              style={{ width: \"100%\" }}\n              beforeUpload={beforeUpload}\n              showUploadList={false}\n            >\n              <Button block>\n                <UploadOutlined /> Upload from csv\n              </Button>\n            </Upload>\n          </div>\n        </Col>\n      </Row>\n      <Row align=\"center\">\n        <Col span={24}>\n          <Space direction=\"vertical\" style={{ width: \"100%\" }} size=\"large\">\n            <h3>\n              Teaching assistants need to be added as students and promoted in\n              course settings\n            </h3>\n            <Button block type=\"success\" onClick={onConfirm}>\n              {text}\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default StudentInput;\n"]},"metadata":{},"sourceType":"module"}