{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/analytics/tables/questionTable/SearchTable.js\";\nimport React, { useState } from \"react\";\nimport { Table, Space, Input, Button } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { createColumns } from \"./createColumns\";\nimport CollabEmptyState from \"./CollabEmptyState\";\nimport HelpEmptyState from \"./HelpEmptyState\";\nimport { separateFields } from \"./expandRow\";\nimport \"./collabtable.css\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../../redux/selectors\";\nimport { joinDiscussion } from \"../../../../redux/courses/actions/wotos\";\nimport { helpStudent } from \"../../../../redux/courses/actions/ta\";\n/**\n * Create a table using createColumns and add the ability to search and expand\n * @param {Array} colParams the parameters to add to createColumns\n * @param {Array} data source of rows\n * @param {Boolean} help whether or not table is being used to help students\n */\n\nconst SearchTable = props => {\n  const {\n    expand,\n    inTable\n  } = separateFields(props.questionTemplate); // Code copied from antd docs\n\n  var searchInput;\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      ref: node => {\n        searchInput = node;\n      },\n      placeholder: `Search ${dataIndex}`,\n      value: selectedKeys[0],\n      onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n      onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n      style: {\n        width: 188,\n        marginBottom: 8,\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Space, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n      icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => handleReset(clearFilters),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Reset\"))),\n    filterIcon: filtered => /*#__PURE__*/React.createElement(SearchOutlined, {\n      style: {\n        color: filtered ? \"#1890ff\" : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }),\n    onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.select());\n      }\n    },\n    render: text => searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: \"#ffc069\",\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text ? text.toString() : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }) : text\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchedColumn(dataIndex);\n    setSearchText(selectedKeys[0]);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText(\"\");\n  }; // End of search\n\n\n  const columns = createColumns(props.activeDiscussion, props.activeQuestion, props.userID, inTable, getColumnSearchProps, props.joinDiscussion, props.helpStudent, props.help);\n  return /*#__PURE__*/React.createElement(Table, {\n    className: \"collab-table\",\n    loading: props.loading,\n    locale: {\n      emptyText: props.data.length === 0 && (props.help ? /*#__PURE__*/React.createElement(HelpEmptyState, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(CollabEmptyState, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 46\n        }\n      }))\n    },\n    expandable: expand,\n    columns: columns,\n    dataSource: props.data,\n    scroll: {\n      x: 650\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = (state, pastProps) => {\n  return { ...pastProps,\n    questionTemplate: selectors.getQuestionTemplate(state),\n    activeDiscussion: selectors.getActiveDiscussion(state),\n    activeQuestion: selectors.getActiveQuestion(state),\n    loading: selectors.getLoading(state),\n    userID: selectors.getUserID(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  joinDiscussion,\n  helpStudent\n})(SearchTable);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/analytics/tables/questionTable/SearchTable.js"],"names":["React","useState","Table","Space","Input","Button","Highlighter","SearchOutlined","createColumns","CollabEmptyState","HelpEmptyState","separateFields","connect","selectors","joinDiscussion","helpStudent","SearchTable","props","expand","inTable","questionTemplate","searchInput","searchText","setSearchText","searchedColumn","setSearchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","e","target","value","handleSearch","width","marginBottom","display","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","columns","activeDiscussion","activeQuestion","userID","help","loading","emptyText","data","length","x","mapStateToProps","state","pastProps","getQuestionTemplate","getActiveDiscussion","getActiveQuestion","getLoading","getUserID"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table, Space, Input, Button } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\n\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { createColumns } from \"./createColumns\";\nimport CollabEmptyState from \"./CollabEmptyState\";\nimport HelpEmptyState from \"./HelpEmptyState\";\n\nimport { separateFields } from \"./expandRow\";\n\nimport \"./collabtable.css\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../../redux/selectors\";\nimport { joinDiscussion } from \"../../../../redux/courses/actions/wotos\";\nimport { helpStudent } from \"../../../../redux/courses/actions/ta\";\n\n/**\n * Create a table using createColumns and add the ability to search and expand\n * @param {Array} colParams the parameters to add to createColumns\n * @param {Array} data source of rows\n * @param {Boolean} help whether or not table is being used to help students\n */\nconst SearchTable = (props) => {\n  const { expand, inTable } = separateFields(props.questionTemplate);\n\n  // Code copied from antd docs\n  var searchInput;\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select());\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchedColumn(dataIndex);\n    setSearchText(selectedKeys[0]);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n  // End of search\n  const columns = createColumns(\n    props.activeDiscussion,\n    props.activeQuestion,\n    props.userID,\n    inTable,\n    getColumnSearchProps,\n    props.joinDiscussion,\n    props.helpStudent,\n    props.help\n  );\n\n  return (\n    <Table\n      className=\"collab-table\"\n      loading={props.loading}\n      locale={{\n        emptyText:\n          props.data.length === 0 &&\n          (props.help ? <HelpEmptyState /> : <CollabEmptyState />),\n      }}\n      expandable={expand}\n      columns={columns}\n      dataSource={props.data}\n      scroll={{ x: 650 }}\n    />\n  );\n};\n\nconst mapStateToProps = (state, pastProps) => {\n  return {\n    ...pastProps,\n    questionTemplate: selectors.getQuestionTemplate(state),\n    activeDiscussion: selectors.getActiveDiscussion(state),\n    activeQuestion: selectors.getActiveQuestion(state),\n    loading: selectors.getLoading(state),\n    userID: selectors.getUserID(state),\n  };\n};\n\nexport default connect(mapStateToProps, { joinDiscussion, helpStudent })(\n  SearchTable\n);\n"]},"metadata":{},"sourceType":"module"}