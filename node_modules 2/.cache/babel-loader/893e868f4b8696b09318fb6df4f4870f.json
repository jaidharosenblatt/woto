{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/user/signin/SignInForm.js\";\nimport React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport UserTypeSegControl from \"../../form/UserTypeSegControl\";\nimport { login } from \"../../../redux/auth/actionCreators\";\nimport { loadCourses } from \"../../../redux/courses/actions/student\";\nimport selectors from \"../../../redux/selectors\";\nimport ErrorSuccess from \"../../util-components/error-success/ErrorSuccess\";\n/**\n * Login form for users\n * @param {Boolean} loading global loading state\n * @param {Boolean} error error from server\n * @param {Boolean} isAuthenticated whether login was successful\n * @param {Function} login actionCreator for logging in\n * @param {Function} loadCourses actionCreator for loading courses\n * @param {Function} setError actionCreator for setting error\n */\n\nconst SignInForm = props => {\n  const onFinish = async values => {\n    const user = {\n      email: values.email.toLowerCase(),\n      password: values.password\n    }; //instructor or assistant/student\n\n    const type = values.userType;\n    await props.login(user, type);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    initialValues: {\n      userType: \"student\"\n    },\n    onFinish: onFinish,\n    hideRequiredMark: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserTypeSegControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      required: true,\n      message: \"Please input your email\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: \"Please input your password\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ErrorSuccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: props.loading,\n    type: \"primary\",\n    block: true,\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Sign In\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: selectors.getLoading(state),\n    isAuthenticated: selectors.getAuthenticationStatus(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  loadCourses\n})(SignInForm);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/user/signin/SignInForm.js"],"names":["React","Form","Input","Button","connect","UserTypeSegControl","login","loadCourses","selectors","ErrorSuccess","SignInForm","props","onFinish","values","user","email","toLowerCase","password","type","userType","required","message","margin","loading","mapStateToProps","state","getLoading","isAuthenticated","getAuthenticationStatus"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport UserTypeSegControl from \"../../form/UserTypeSegControl\";\nimport { login } from \"../../../redux/auth/actionCreators\";\nimport { loadCourses } from \"../../../redux/courses/actions/student\";\n\nimport selectors from \"../../../redux/selectors\";\nimport ErrorSuccess from \"../../util-components/error-success/ErrorSuccess\";\n\n/**\n * Login form for users\n * @param {Boolean} loading global loading state\n * @param {Boolean} error error from server\n * @param {Boolean} isAuthenticated whether login was successful\n * @param {Function} login actionCreator for logging in\n * @param {Function} loadCourses actionCreator for loading courses\n * @param {Function} setError actionCreator for setting error\n */\nconst SignInForm = (props) => {\n  const onFinish = async (values) => {\n    const user = {\n      email: values.email.toLowerCase(),\n      password: values.password,\n    };\n\n    //instructor or assistant/student\n    const type = values.userType;\n    await props.login(user, type);\n  };\n\n  return (\n    <Form\n      layout=\"vertical\"\n      initialValues={{ userType: \"student\" }}\n      onFinish={onFinish}\n      hideRequiredMark\n    >\n      <UserTypeSegControl />\n      <Form.Item\n        name=\"email\"\n        label=\"Email\"\n        rules={[{ required: true, message: \"Please input your email\" }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[{ required: true, message: \"Please input your password\" }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <ErrorSuccess />\n\n      <Form.Item style={{ margin: 0 }}>\n        <Button loading={props.loading} type=\"primary\" block htmlType=\"submit\">\n          Sign In\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: selectors.getLoading(state),\n    isAuthenticated: selectors.getAuthenticationStatus(state),\n  };\n};\n\nexport default connect(mapStateToProps, { login, loadCourses })(SignInForm);\n"]},"metadata":{},"sourceType":"module"}