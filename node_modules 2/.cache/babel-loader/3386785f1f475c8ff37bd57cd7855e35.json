{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/instructor/roster/StudentTARoster.js\";\nimport React from \"react\";\nimport { Table, Space } from \"antd\";\nimport { createRosterColumns } from \"../../analytics/tables/admin-roster/createRosterColumns\";\nimport LeftRightRow from \"../../util-components/leftrightrow/LeftRightRow\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\nimport DukeStudentInput from \"../../user/addcourse/Form/DukeStudentInput\";\nimport CSVDownloadButton from \"./csv/CSVDownloadButton\";\nimport CSVUploadButtonText from \"./csv/CSVUploadButtonText\";\nimport { removeStudent } from \"../../../redux/courses/actions/roster\";\n/**\n *\n * @param {Boolean} loading from redux\n * @param {String} title for header\n * @param {Boolean} isStudent whether or not it is being used for students\n */\n\nconst StudentTARoster = props => {\n  const tableData = props.isStudent ? props.studentRoster : props.taRoster;\n  const empty = !tableData || (tableData === null || tableData === void 0 ? void 0 : tableData.length) === 0 || props.loading;\n  const pluralUsers = props.isStudent ? \"students\" : \"teaching assistants\"; // Since Ant form adds a bottom margin for displaying errors\n  // we manually add margin to center text\n\n  const titleStyle = empty ? {} : {\n    marginBottom: 24\n  }; // add role to remove action\n\n  const handleRemove = async studentId => await props.removeStudent(studentId, props.isStudent);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LeftRightRow, {\n    left: /*#__PURE__*/React.createElement(\"h2\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, props.title),\n    right: /*#__PURE__*/React.createElement(Space, {\n      align: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, !empty && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DukeStudentInput, {\n      isStudent: props.isStudent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CSVDownloadButton, {\n      isStudent: props.isStudent,\n      data: tableData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), empty ? /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    size: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"No \", pluralUsers, \" yet. You can add \", pluralUsers, \" one at a time below\"), /*#__PURE__*/React.createElement(CSVUploadButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DukeStudentInput, {\n    isStudent: props.isStudent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Table, {\n    loading: props.loading,\n    columns: createRosterColumns(handleRemove),\n    dataSource: tableData,\n    pagination: {\n      pageSize: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  loading: selectors.getLoading(state),\n  taRoster: selectors.getTARoster(state),\n  studentRoster: selectors.getStudentRoster(state)\n});\n\nexport default connect(mapStateToProps, {\n  removeStudent\n})(StudentTARoster);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/instructor/roster/StudentTARoster.js"],"names":["React","Table","Space","createRosterColumns","LeftRightRow","connect","selectors","DukeStudentInput","CSVDownloadButton","CSVUploadButtonText","removeStudent","StudentTARoster","props","tableData","isStudent","studentRoster","taRoster","empty","length","loading","pluralUsers","titleStyle","marginBottom","handleRemove","studentId","title","width","pageSize","mapStateToProps","state","getLoading","getTARoster","getStudentRoster"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,MAA7B;AACA,SAASC,mBAAT,QAAoC,yDAApC;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,SAASC,aAAT,QAA8B,uCAA9B;AAEA;;;;;;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,SAAS,GAAGD,KAAK,CAACE,SAAN,GAAkBF,KAAK,CAACG,aAAxB,GAAwCH,KAAK,CAACI,QAAhE;AACA,QAAMC,KAAK,GAAG,CAACJ,SAAD,IAAc,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEK,MAAX,MAAsB,CAApC,IAAyCN,KAAK,CAACO,OAA7D;AAEA,QAAMC,WAAW,GAAGR,KAAK,CAACE,SAAN,GAAkB,UAAlB,GAA+B,qBAAnD,CAJiC,CAKjC;AACA;;AACA,QAAMO,UAAU,GAAGJ,KAAK,GAAG,EAAH,GAAQ;AAAEK,IAAAA,YAAY,EAAE;AAAhB,GAAhC,CAPiC,CASjC;;AACA,QAAMC,YAAY,GAAG,MAAOC,SAAP,IACnB,MAAMZ,KAAK,CAACF,aAAN,CAAoBc,SAApB,EAA+BZ,KAAK,CAACE,SAArC,CADR;;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,IAAI,eAAE;AAAI,MAAA,KAAK,EAAEO,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBT,KAAK,CAACa,KAA9B,CADR;AAEE,IAAA,KAAK,eACH,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACR,KAAD,iBACC,uDACE,oBAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEL,KAAK,CAACE,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,iBAAD;AACE,MAAA,SAAS,EAAEF,KAAK,CAACE,SADnB;AAEE,MAAA,IAAI,EAAED,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFJ,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAkBGI,KAAK,gBACJ,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMN,WADN,wBACqCA,WADrC,yBADF,eAKE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,eASE,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAER,KAAK,CAACE,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADI,gBAaJ,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEF,KAAK,CAACO,OADjB;AAEE,IAAA,OAAO,EAAEhB,mBAAmB,CAACoB,YAAD,CAF9B;AAGE,IAAA,UAAU,EAAEV,SAHd;AAIE,IAAA,UAAU,EAAE;AAAEc,MAAAA,QAAQ,EAAE;AAAZ,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CADF;AAyCD,CAtDD;;AAwDA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,OAAO,EAAEb,SAAS,CAACwB,UAAV,CAAqBD,KAArB,CADyB;AAElCb,EAAAA,QAAQ,EAAEV,SAAS,CAACyB,WAAV,CAAsBF,KAAtB,CAFwB;AAGlCd,EAAAA,aAAa,EAAET,SAAS,CAAC0B,gBAAV,CAA2BH,KAA3B;AAHmB,CAAZ,CAAxB;;AAMA,eAAexB,OAAO,CAACuB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,eAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { Table, Space } from \"antd\";\nimport { createRosterColumns } from \"../../analytics/tables/admin-roster/createRosterColumns\";\nimport LeftRightRow from \"../../util-components/leftrightrow/LeftRightRow\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\nimport DukeStudentInput from \"../../user/addcourse/Form/DukeStudentInput\";\nimport CSVDownloadButton from \"./csv/CSVDownloadButton\";\nimport CSVUploadButtonText from \"./csv/CSVUploadButtonText\";\nimport { removeStudent } from \"../../../redux/courses/actions/roster\";\n\n/**\n *\n * @param {Boolean} loading from redux\n * @param {String} title for header\n * @param {Boolean} isStudent whether or not it is being used for students\n */\nconst StudentTARoster = (props) => {\n  const tableData = props.isStudent ? props.studentRoster : props.taRoster;\n  const empty = !tableData || tableData?.length === 0 || props.loading;\n\n  const pluralUsers = props.isStudent ? \"students\" : \"teaching assistants\";\n  // Since Ant form adds a bottom margin for displaying errors\n  // we manually add margin to center text\n  const titleStyle = empty ? {} : { marginBottom: 24 };\n\n  // add role to remove action\n  const handleRemove = async (studentId) =>\n    await props.removeStudent(studentId, props.isStudent);\n\n  return (\n    <div>\n      <LeftRightRow\n        left={<h2 style={titleStyle}>{props.title}</h2>}\n        right={\n          <Space align=\"top\">\n            {!empty && (\n              <>\n                <DukeStudentInput isStudent={props.isStudent} />\n                <CSVDownloadButton\n                  isStudent={props.isStudent}\n                  data={tableData}\n                />\n              </>\n            )}\n          </Space>\n        }\n      />\n\n      {empty ? (\n        <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n          <Space size={4}>\n            <p>\n              No {pluralUsers} yet. You can add {pluralUsers} one at a time\n              below\n            </p>\n            <CSVUploadButtonText />\n          </Space>\n\n          <DukeStudentInput isStudent={props.isStudent} />\n        </Space>\n      ) : (\n        <Table\n          loading={props.loading}\n          columns={createRosterColumns(handleRemove)}\n          dataSource={tableData}\n          pagination={{ pageSize: 10 }}\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: selectors.getLoading(state),\n  taRoster: selectors.getTARoster(state),\n  studentRoster: selectors.getStudentRoster(state),\n});\n\nexport default connect(mapStateToProps, { removeStudent })(StudentTARoster);\n"]},"metadata":{},"sourceType":"module"}