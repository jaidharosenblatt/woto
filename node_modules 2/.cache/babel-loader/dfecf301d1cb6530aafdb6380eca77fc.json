{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/layout/navbar/SideNavBar.js\";\nimport React from \"react\";\nimport { Menu } from \"antd\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Logo } from \"../../../static/LoadedImages\";\nimport pageMapStudent from \"../signed-in-content/pageMapStudent\";\nimport pageMapInstructors from \"../signed-in-content/pageMapInstructors\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\nimport { changeCourse } from \"../../../redux/current-course/actionCreators\";\nimport { mapCoursesToMenuItems } from \"../signed-in-content/mapPages\";\n/**\n * Dynamically render a navbar from an array of courses by mapping\n * each course to page from pageMapInstructors or pageMapStudent\n * @param courses array of courses to render in\n */\n\nconst SideNavBar = props => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleTitleClick = async id => {\n    await props.changeCourse(id);\n    history.push(`/courses/${id}/session`);\n  };\n\n  const studentMenu = mapCoursesToMenuItems(pageMapStudent, props.courses, handleTitleClick);\n  const instructorMenu = mapCoursesToMenuItems(pageMapInstructors, props.courses, handleTitleClick);\n  return /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      overflow: \"scroll\",\n      height: \"100vh\"\n    },\n    mode: \"inline\",\n    openKeys: [props.courseID],\n    selectedKeys: [location.pathname],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"WotoLogo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))), props.userIsInstructor ? instructorMenu : studentMenu, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"addcourse\",\n    title: \"Add Course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/addcourse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, props.userIsInstructor ? \"Create\" : \"Join\", \" a New Course\")));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: selectors.getSortedCourses(state),\n    courseID: selectors.getCourseID(state),\n    userIsInstructor: selectors.userIsInstructor(state)\n  };\n}\n\nexport default connect(mapStateToProps, {\n  changeCourse\n})(SideNavBar);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/layout/navbar/SideNavBar.js"],"names":["React","Menu","Link","useHistory","useLocation","Logo","pageMapStudent","pageMapInstructors","connect","selectors","changeCourse","mapCoursesToMenuItems","SideNavBar","props","history","location","handleTitleClick","id","push","studentMenu","courses","instructorMenu","overflow","height","courseID","pathname","userIsInstructor","mapStateToProps","state","getSortedCourses","getCourseID"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,SAASC,IAAT,QAAqB,8BAArB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,YAAT,QAA6B,8CAA7B;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA;;;;;;AAKA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,gBAAgB,GAAG,MAAOC,EAAP,IAAc;AACrC,UAAMJ,KAAK,CAACH,YAAN,CAAmBO,EAAnB,CAAN;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAc,YAAWD,EAAG,UAA5B;AACD,GAHD;;AAKA,QAAME,WAAW,GAAGR,qBAAqB,CAACL,cAAD,EAAiBO,KAAK,CAACO,OAAvB,EAAgCJ,gBAAhC,CAAzC;AACA,QAAMK,cAAc,GAAGV,qBAAqB,CAACJ,kBAAD,EAAqBM,KAAK,CAACO,OAA3B,EAAoCJ,gBAApC,CAA5C;AAEA,sBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,MAAM,EAAE;AAA9B,KADT;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAE,CAACV,KAAK,CAACW,QAAP,CAHZ;AAIE,IAAA,YAAY,EAAE,CAACT,QAAQ,CAACU,QAAV,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CANF,EAWGZ,KAAK,CAACa,gBAAN,GAAyBL,cAAzB,GAA0CF,WAX7C,eAaE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBN,KAAK,CAACa,gBAAN,GAAyB,QAAzB,GAAoC,MAA3D,kBADF,CAbF,CADF;AAmBD,CA/BD;;AAiCA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLR,IAAAA,OAAO,EAAEX,SAAS,CAACoB,gBAAV,CAA2BD,KAA3B,CADJ;AAELJ,IAAAA,QAAQ,EAAEf,SAAS,CAACqB,WAAV,CAAsBF,KAAtB,CAFL;AAGLF,IAAAA,gBAAgB,EAAEjB,SAAS,CAACiB,gBAAV,CAA2BE,KAA3B;AAHb,GAAP;AAKD;;AAED,eAAepB,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport { Menu } from \"antd\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n\nimport { Logo } from \"../../../static/LoadedImages\";\nimport pageMapStudent from \"../signed-in-content/pageMapStudent\";\nimport pageMapInstructors from \"../signed-in-content/pageMapInstructors\";\n\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\nimport { changeCourse } from \"../../../redux/current-course/actionCreators\";\nimport { mapCoursesToMenuItems } from \"../signed-in-content/mapPages\";\n\n/**\n * Dynamically render a navbar from an array of courses by mapping\n * each course to page from pageMapInstructors or pageMapStudent\n * @param courses array of courses to render in\n */\nconst SideNavBar = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleTitleClick = async (id) => {\n    await props.changeCourse(id);\n    history.push(`/courses/${id}/session`);\n  };\n\n  const studentMenu = mapCoursesToMenuItems(pageMapStudent, props.courses, handleTitleClick);\n  const instructorMenu = mapCoursesToMenuItems(pageMapInstructors, props.courses, handleTitleClick);\n\n  return (\n    <Menu\n      style={{ overflow: \"scroll\", height: \"100vh\" }}\n      mode=\"inline\"\n      openKeys={[props.courseID]}\n      selectedKeys={[location.pathname]}\n    >\n      <div>\n        <Link to=\"/\">\n          <Logo className=\"WotoLogo\" />\n        </Link>\n      </div>\n      {props.userIsInstructor ? instructorMenu : studentMenu}\n\n      <Menu.Item key=\"addcourse\" title=\"Add Course\">\n        <Link to=\"/addcourse\">{props.userIsInstructor ? \"Create\" : \"Join\"} a New Course</Link>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: selectors.getSortedCourses(state),\n    courseID: selectors.getCourseID(state),\n    userIsInstructor: selectors.userIsInstructor(state),\n  };\n}\n\nexport default connect(mapStateToProps, { changeCourse })(SideNavBar);\n"]},"metadata":{},"sourceType":"module"}