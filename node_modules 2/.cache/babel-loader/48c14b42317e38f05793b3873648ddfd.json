{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/user/verify/VerifyAccount.js\";\nimport React, { useEffect } from \"react\";\nimport { Col } from \"antd\";\nimport { BugImage } from \"../../../static/LoadedImages\";\nimport \"./verify.css\";\nimport ReverifyAccountForm from \"./ReverifyAccountForm\";\nimport NavBarFooterCentered from \"../../util-components/centeredpage/NavBarFooterCentered\";\nimport selectors from \"../../../redux/selectors\";\nimport { verifyUser } from \"../../../redux/auth/actionCreators\";\nimport { connect } from \"react-redux\";\n/**\n * Try to verify an account and show error message on fail\n * Example url -> \"/verify/student/#key=084758yhroufgbk48y\"\n */\n\nconst VerifyAccount = props => {\n  const {\n    isAuthenticated,\n    isVerified,\n    loading,\n    error\n  } = props;\n  const _verifyUser = props.verifyUser;\n  useEffect(() => {\n    const url = window.location.href; //url of the current page\n\n    const userType = url.split(\"/verify/\")[1].split(\"/\")[0];\n    const split = url.split(\"=\"); //this creates an array with key ([0] element) and value ([1] element)\n\n    const verificationKey = split[1];\n\n    async function verify() {\n      await _verifyUser(verificationKey, userType);\n    }\n\n    const userNotVerified = !isAuthenticated || !isVerified;\n\n    if (userNotVerified && verificationKey && userType && !error) {\n      verify();\n    }\n  }, [isAuthenticated, isVerified, loading, error, _verifyUser]);\n  return /*#__PURE__*/React.createElement(NavBarFooterCentered, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BugImage, {\n    className: \"small-hero-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    align: \"left\",\n    style: {\n      maxWidth: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"verify-failed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Sorry, we were unable to verify your account\"), /*#__PURE__*/React.createElement(ReverifyAccountForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: selectors.getAuthenticationStatus(state),\n    isVerified: selectors.getVerificationStatus(state),\n    loading: selectors.getPageLoading(state),\n    error: selectors.getError(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  verifyUser\n})(VerifyAccount);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/user/verify/VerifyAccount.js"],"names":["React","useEffect","Col","BugImage","ReverifyAccountForm","NavBarFooterCentered","selectors","verifyUser","connect","VerifyAccount","props","isAuthenticated","isVerified","loading","error","_verifyUser","url","window","location","href","userType","split","verificationKey","verify","userNotVerified","maxWidth","mapStateToProps","state","getAuthenticationStatus","getVerificationStatus","getPageLoading","getError"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Col } from \"antd\";\nimport { BugImage } from \"../../../static/LoadedImages\";\nimport \"./verify.css\";\nimport ReverifyAccountForm from \"./ReverifyAccountForm\";\nimport NavBarFooterCentered from \"../../util-components/centeredpage/NavBarFooterCentered\";\nimport selectors from \"../../../redux/selectors\";\nimport { verifyUser } from \"../../../redux/auth/actionCreators\";\n\nimport { connect } from \"react-redux\";\n\n/**\n * Try to verify an account and show error message on fail\n * Example url -> \"/verify/student/#key=084758yhroufgbk48y\"\n */\nconst VerifyAccount = (props) => {\n  const { isAuthenticated, isVerified, loading, error } = props;\n  const _verifyUser = props.verifyUser;\n  useEffect(() => {\n    const url = window.location.href; //url of the current page\n    const userType = url.split(\"/verify/\")[1].split(\"/\")[0];\n    const split = url.split(\"=\"); //this creates an array with key ([0] element) and value ([1] element)\n    const verificationKey = split[1];\n\n    async function verify() {\n      await _verifyUser(verificationKey, userType);\n    }\n    const userNotVerified = !isAuthenticated || !isVerified;\n    if (userNotVerified && verificationKey && userType && !error) {\n      verify();\n    }\n  }, [isAuthenticated, isVerified, loading, error, _verifyUser]);\n\n  return (\n    <NavBarFooterCentered>\n      <Col span={24} align=\"center\">\n        <Col span={24} align=\"center\">\n          <BugImage className=\"small-hero-image\" />\n        </Col>\n\n        <Col align=\"left\" style={{ maxWidth: 400 }}>\n          <h2 className=\"verify-failed\">Sorry, we were unable to verify your account</h2>\n          <ReverifyAccountForm />\n        </Col>\n      </Col>\n    </NavBarFooterCentered>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: selectors.getAuthenticationStatus(state),\n    isVerified: selectors.getVerificationStatus(state),\n    loading: selectors.getPageLoading(state),\n    error: selectors.getError(state),\n  };\n};\n\nexport default connect(mapStateToProps, { verifyUser })(VerifyAccount);\n"]},"metadata":{},"sourceType":"module"}