{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/layout/SignedInRoutes.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport selectors from \"../../redux/selectors\";\nimport AccountSettings from \"../user/accountsettings/AccountSettings\";\nimport AddCourse from \"../user/addcourse/AddCourse\";\nimport PageNotFound from \"../util-components/errors/PageNotFound\";\nimport VerifiedSuccess from \"../user/verify/VerifiedSuccess\";\nimport EmailAddCourse from \"../user/addcourse/EmailAddCourse\";\nimport pageMapInstructors from \"./signed-in-content/pageMapInstructors\";\nimport pageMapStudent from \"./signed-in-content/pageMapStudent\";\nimport { mapCoursesToPages } from \"./signed-in-content/mapPages\";\n/**\n * Routes to pages wrapped in a navbar.\n * Redirects \"/\" to the first course in courses array\n */\n\nconst SignedInRoutes = props => {\n  const instructorPages = mapCoursesToPages(pageMapInstructors, props.courses);\n  const studentPages = mapCoursesToPages(pageMapStudent, props.courses);\n  const pages = props.userIsInstructor ? instructorPages : studentPages;\n\n  const redirect = () => {\n    const coursesFromUser = props.user.courses;\n\n    if (coursesFromUser.length > 0) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/courses/${coursesFromUser[0].course}/session`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/addcourse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/verify\",\n    component: VerifiedSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), pages, /*#__PURE__*/React.createElement(Route, {\n    path: [\"/\", \"/signin\", \"/signup\"],\n    exact: true,\n    component: redirect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/oauth\",\n    component: redirect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/accountsettings\",\n    component: AccountSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/addcourse\",\n    exact: true,\n    component: AddCourse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/enroll\",\n    component: EmailAddCourse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: PageNotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    courses: selectors.getSortedCourses(state),\n    user: selectors.getUser(state),\n    userIsInstructor: selectors.userIsInstructor(state)\n  };\n};\n\nexport default connect(mapStateToProps)(SignedInRoutes);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/layout/SignedInRoutes.js"],"names":["React","connect","Route","Switch","Redirect","selectors","AccountSettings","AddCourse","PageNotFound","VerifiedSuccess","EmailAddCourse","pageMapInstructors","pageMapStudent","mapCoursesToPages","SignedInRoutes","props","instructorPages","courses","studentPages","pages","userIsInstructor","redirect","coursesFromUser","user","length","course","mapStateToProps","state","getSortedCourses","getUser"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport selectors from \"../../redux/selectors\";\n\nimport AccountSettings from \"../user/accountsettings/AccountSettings\";\nimport AddCourse from \"../user/addcourse/AddCourse\";\nimport PageNotFound from \"../util-components/errors/PageNotFound\";\nimport VerifiedSuccess from \"../user/verify/VerifiedSuccess\";\nimport EmailAddCourse from \"../user/addcourse/EmailAddCourse\";\nimport pageMapInstructors from \"./signed-in-content/pageMapInstructors\";\nimport pageMapStudent from \"./signed-in-content/pageMapStudent\";\nimport { mapCoursesToPages } from \"./signed-in-content/mapPages\";\n\n/**\n * Routes to pages wrapped in a navbar.\n * Redirects \"/\" to the first course in courses array\n */\nconst SignedInRoutes = (props) => {\n  const instructorPages = mapCoursesToPages(pageMapInstructors, props.courses);\n  const studentPages = mapCoursesToPages(pageMapStudent, props.courses);\n  const pages = props.userIsInstructor ? instructorPages : studentPages;\n\n  const redirect = () => {\n    const coursesFromUser = props.user.courses;\n    if (coursesFromUser.length > 0) {\n      return <Redirect to={`/courses/${coursesFromUser[0].course}/session`} />;\n    }\n\n    return <Redirect to=\"/addcourse\" />;\n  };\n\n  return (\n    <Switch>\n      <Route path=\"/verify\" component={VerifiedSuccess} />\n      {pages}\n\n      <Route path={[\"/\", \"/signin\", \"/signup\"]} exact component={redirect} />\n      <Route path=\"/oauth\" component={redirect} />\n      <Route path=\"/accountsettings\" component={AccountSettings} />\n      <Route path=\"/addcourse\" exact component={AddCourse} />\n      <Route path=\"/enroll\" component={EmailAddCourse} />\n      <Route component={PageNotFound} />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    courses: selectors.getSortedCourses(state),\n    user: selectors.getUser(state),\n    userIsInstructor: selectors.userIsInstructor(state),\n  };\n};\n\nexport default connect(mapStateToProps)(SignedInRoutes);\n"]},"metadata":{},"sourceType":"module"}