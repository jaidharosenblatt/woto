{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/instructor/roster/csv/CSVRosterStatus.js\";\nimport React from \"react\";\nimport { Collapse } from \"antd\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../../redux/selectors\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\n\nconst CSVRosterStatus = props => {\n  const {\n    failures,\n    successes\n  } = props;\n\n  if (!failures || !successes) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Collapse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Collapse.Panel, {\n    header: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }), \" \", `Added ${successes.length} students/TAs`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, successes.map((student, i) => /*#__PURE__*/React.createElement(\"p\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, student.message))), /*#__PURE__*/React.createElement(Collapse.Panel, {\n    header: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), \" \", failures.length === 0 ? \"No errors\" : `Unable to enroll ${failures.length} students/TAs`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, failures.map((student, i) => /*#__PURE__*/React.createElement(\"p\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, student.message))));\n};\n\nconst mapStateToProps = state => {\n  const status = selectors.getRosterStatus(state);\n  return {\n    failures: status === null || status === void 0 ? void 0 : status.failures,\n    successes: status === null || status === void 0 ? void 0 : status.successes\n  };\n};\n\nexport default connect(mapStateToProps)(CSVRosterStatus);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/instructor/roster/csv/CSVRosterStatus.js"],"names":["React","Collapse","connect","selectors","CheckCircleOutlined","CloseCircleOutlined","CSVRosterStatus","props","failures","successes","length","map","student","i","message","mapStateToProps","state","status","getRosterStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,mBAAzD;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BF,KAAhC;;AAEA,MAAI,CAACC,QAAD,IAAa,CAACC,SAAlB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,KAAV;AACE,IAAA,MAAM,eACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OAC4B,SAAQA,SAAS,CAACC,MAAO,eADrD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,SAAS,CAACE,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACb;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,OAAO,CAACE,OAApB,CADD,CAPH,CADF,eAYE,oBAAC,QAAD,CAAU,KAAV;AACE,IAAA,MAAM,eACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAC0B,GAD1B,EAEGN,QAAQ,CAACE,MAAT,KAAoB,CAApB,GACG,WADH,GAEI,oBAAmBF,QAAQ,CAACE,MAAO,eAJ1C,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGF,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,OAAO,CAACE,OAApB,CADD,CAVH,CAZF,CADF;AA6BD,CAnCD;;AAqCA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,MAAM,GAAGd,SAAS,CAACe,eAAV,CAA0BF,KAA1B,CAAf;AACA,SAAO;AACLR,IAAAA,QAAQ,EAAES,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAET,QADb;AAELC,IAAAA,SAAS,EAAEQ,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAER;AAFd,GAAP;AAID,CAND;;AAOA,eAAeP,OAAO,CAACa,eAAD,CAAP,CAAyBT,eAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Collapse } from \"antd\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../../redux/selectors\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\n\nconst CSVRosterStatus = (props) => {\n  const { failures, successes } = props;\n\n  if (!failures || !successes) {\n    return null;\n  }\n  return (\n    <Collapse>\n      <Collapse.Panel\n        header={\n          <p>\n            <CheckCircleOutlined /> {`Added ${successes.length} students/TAs`}\n          </p>\n        }\n      >\n        {successes.map((student, i) => (\n          <p key={i}>{student.message}</p>\n        ))}\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <p>\n            <CloseCircleOutlined />{\" \"}\n            {failures.length === 0\n              ? \"No errors\"\n              : `Unable to enroll ${failures.length} students/TAs`}\n          </p>\n        }\n      >\n        {failures.map((student, i) => (\n          <p key={i}>{student.message}</p>\n        ))}\n      </Collapse.Panel>\n    </Collapse>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const status = selectors.getRosterStatus(state);\n  return {\n    failures: status?.failures,\n    successes: status?.successes,\n  };\n};\nexport default connect(mapStateToProps)(CSVRosterStatus);\n"]},"metadata":{},"sourceType":"module"}