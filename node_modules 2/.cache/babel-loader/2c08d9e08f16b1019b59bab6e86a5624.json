{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/user/oauth/OauthRedirect.js\";\nimport React, { useEffect } from \"react\";\nimport qs from \"qs\";\nimport { connect } from \"react-redux\";\nimport { authenticateWithOauth } from \"../../../redux/auth/actionCreators\";\nimport LoadingScreen from \"../../util-components/spinner/LoadingScreen\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport selectors from \"../../../redux/selectors\";\n\nconst OauthRedirect = props => {\n  const location = useLocation();\n  const {\n    code\n  } = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  });\n  const authenticate = props.authenticateWithOauth;\n  const userType = location.pathname.split(\"/\").pop();\n  useEffect(() => {\n    async function auth() {\n      await authenticate(code, userType);\n    }\n\n    auth();\n  }, [authenticate, code, userType]); // Send user back to home\n\n  if (props.error) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(LoadingScreen, {\n    loading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: selectors.getError(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authenticateWithOauth\n})(OauthRedirect);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/user/oauth/OauthRedirect.js"],"names":["React","useEffect","qs","connect","authenticateWithOauth","LoadingScreen","Redirect","useLocation","selectors","OauthRedirect","props","location","code","parse","search","ignoreQueryPrefix","authenticate","userType","pathname","split","pop","auth","error","mapStateToProps","state","getError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,oCAAtC;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWV,EAAE,CAACW,KAAH,CAASF,QAAQ,CAACG,MAAlB,EAA0B;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAA1B,CAAjB;AACA,QAAMC,YAAY,GAAGN,KAAK,CAACN,qBAA3B;AACA,QAAMa,QAAQ,GAAGN,QAAQ,CAACO,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,EAAjB;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeoB,IAAf,GAAsB;AACpB,YAAML,YAAY,CAACJ,IAAD,EAAOK,QAAP,CAAlB;AACD;;AACDI,IAAAA,IAAI;AACL,GALQ,EAKN,CAACL,YAAD,EAAeJ,IAAf,EAAqBK,QAArB,CALM,CAAT,CAL+B,CAY/B;;AACA,MAAIP,KAAK,CAACY,KAAV,EAAiB;AACf,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBAAO,oBAAC,aAAD;AAAe,IAAA,OAAO,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAlBD;;AAoBA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,KAAK,EAAEd,SAAS,CAACiB,QAAV,CAAmBD,KAAnB;AADF,GAAP;AAGD,CAJD;;AAKA,eAAerB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CACbK,aADa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport qs from \"qs\";\nimport { connect } from \"react-redux\";\nimport { authenticateWithOauth } from \"../../../redux/auth/actionCreators\";\nimport LoadingScreen from \"../../util-components/spinner/LoadingScreen\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport selectors from \"../../../redux/selectors\";\n\nconst OauthRedirect = (props) => {\n  const location = useLocation();\n  const { code } = qs.parse(location.search, { ignoreQueryPrefix: true });\n  const authenticate = props.authenticateWithOauth;\n  const userType = location.pathname.split(\"/\").pop();\n  useEffect(() => {\n    async function auth() {\n      await authenticate(code, userType);\n    }\n    auth();\n  }, [authenticate, code, userType]);\n\n  // Send user back to home\n  if (props.error) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return <LoadingScreen loading />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    error: selectors.getError(state),\n  };\n};\nexport default connect(mapStateToProps, { authenticateWithOauth })(\n  OauthRedirect\n);\n"]},"metadata":{},"sourceType":"module"}