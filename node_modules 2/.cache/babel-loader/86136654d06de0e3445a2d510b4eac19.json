{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/course/announcement/Announcement.js\";\nimport React, { useState } from \"react\";\nimport \"./announcement.css\";\nimport { Row, Col, Tooltip, Space, Button } from \"antd\";\nimport { NotificationOutlined, CloseCircleOutlined, PushpinOutlined, PushpinFilled, VideoCameraFilled } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\n/**\n * @jaidharosenblatt Display an announcement with a alert icon in blue div\n * Able to be closed by clicking on X\n * @param message to display\n * @param announcement display a yellow alert instead of announcement\n * @param handleClose callback that handles closing an announcement permanently\n * @param handlePin callback that handles when an instructor pins annoucement to course attributes\n */\n\nconst Announcement = props => {\n  const [visible, setVisible] = useState(true);\n  const {\n    userIsInstructor,\n    announcement,\n    handleClose,\n    handlePin,\n    userID\n  } = props;\n  const isOwner = userID === (announcement === null || announcement === void 0 ? void 0 : announcement.ownerId);\n  const name = isOwner ? \"Your\" : `${announcement === null || announcement === void 0 ? void 0 : announcement.ownerName.split(\" \")[0]}'s`;\n\n  const handleHideClose = () => {\n    if (userIsInstructor) {\n      handleClose(announcement);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  const iconStyle = announcement.meetingURL ? {\n    fontSize: 24\n  } : {};\n\n  if (visible) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"announcement-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NotificationOutlined, {\n      style: iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      direction: \"vertical\",\n      size: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      size: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, name, \" Announcement:\", announcement === null || announcement === void 0 ? void 0 : announcement.announcement), announcement.meetingURL && /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      href: announcement === null || announcement === void 0 ? void 0 : announcement.meetingURL,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(VideoCameraFilled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }), \" Join \", name, \" Video Room\"))), /*#__PURE__*/React.createElement(Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, userIsInstructor && /*#__PURE__*/React.createElement(Tooltip, {\n      placement: \"left\",\n      title: \"Pin announcement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, announcement.pinned ? /*#__PURE__*/React.createElement(PushpinFilled, {\n      style: iconStyle,\n      onClick: () => handlePin(announcement),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(PushpinOutlined, {\n      style: iconStyle,\n      onClick: () => handlePin(announcement),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Tooltip, {\n      placement: \"left\",\n      title: userIsInstructor ? `Delete ${name.toLowerCase()} announcement` : \"Hide announcement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n      style: iconStyle,\n      onClick: handleHideClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }))))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nconst mapStateToProps = (state, pastProps) => {\n  return { ...pastProps,\n    userIsInstructor: selectors.userIsInstructor(state),\n    userID: selectors.getUserID(state)\n  };\n};\n\nexport default connect(mapStateToProps)(Announcement);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/course/announcement/Announcement.js"],"names":["React","useState","Row","Col","Tooltip","Space","Button","NotificationOutlined","CloseCircleOutlined","PushpinOutlined","PushpinFilled","VideoCameraFilled","connect","selectors","Announcement","props","visible","setVisible","userIsInstructor","announcement","handleClose","handlePin","userID","isOwner","ownerId","name","ownerName","split","handleHideClose","iconStyle","meetingURL","fontSize","pinned","toLowerCase","mapStateToProps","state","pastProps","getUserID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,EAA4BC,KAA5B,EAAmCC,MAAnC,QAAiD,MAAjD;AACA,SACEC,oBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,aAJF,EAKEC,iBALF,QAMO,mBANP;AAOA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA;;;;;;;;;AAQA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AACJiB,IAAAA,gBADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA;AALI,MAMFP,KANJ;AAQA,QAAMQ,OAAO,GAAGD,MAAM,MAAKH,YAAL,aAAKA,YAAL,uBAAKA,YAAY,CAAEK,OAAnB,CAAtB;AACA,QAAMC,IAAI,GAAGF,OAAO,GAAG,MAAH,GAAa,GAAEJ,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEO,SAAd,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAsC,IAAzE;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIV,gBAAJ,EAAsB;AACpBE,MAAAA,WAAW,CAACD,YAAD,CAAX;AACD,KAFD,MAEO;AACLF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAND;;AAQA,QAAMY,SAAS,GAAGV,YAAY,CAACW,UAAb,GAA0B;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAA1B,GAA6C,EAA/D;;AAEA,MAAIf,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,oBAAD;AAAsB,MAAA,KAAK,EAAEa,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,IADH,oBAEGN,YAFH,aAEGA,YAFH,uBAEGA,YAAY,CAAEA,YAFjB,CADF,EAMGA,YAAY,CAACW,UAAb,iBACC,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAEX,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEW,UAFtB;AAGE,MAAA,MAAM,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,YAK8BL,IAL9B,gBAPJ,CADF,CAJF,eAsBE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,gBAAgB,iBACf,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,MAAnB;AAA0B,MAAA,KAAK,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,YAAY,CAACa,MAAb,gBACC,oBAAC,aAAD;AACE,MAAA,KAAK,EAAEH,SADT;AAEE,MAAA,OAAO,EAAE,MAAMR,SAAS,CAACF,YAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAMC,oBAAC,eAAD;AACE,MAAA,KAAK,EAAEU,SADT;AAEE,MAAA,OAAO,EAAE,MAAMR,SAAS,CAACF,YAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAFJ,eAgBE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EACHD,gBAAgB,GACX,UAASO,IAAI,CAACQ,WAAL,EAAmB,eADjB,GAEZ,mBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,mBAAD;AACE,MAAA,KAAK,EAAEJ,SADT;AAEE,MAAA,OAAO,EAAED,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAhBF,CADF,CAtBF,CADF,CADF;AA2DD,GA5DD,MA4DO;AACL,wBAAO,yCAAP;AACD;AACF,CAvFD;;AAyFA,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC5C,SAAO,EACL,GAAGA,SADE;AAELlB,IAAAA,gBAAgB,EAAEL,SAAS,CAACK,gBAAV,CAA2BiB,KAA3B,CAFb;AAGLb,IAAAA,MAAM,EAAET,SAAS,CAACwB,SAAV,CAAoBF,KAApB;AAHH,GAAP;AAKD,CAND;;AAQA,eAAevB,OAAO,CAACsB,eAAD,CAAP,CAAyBpB,YAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./announcement.css\";\nimport { Row, Col, Tooltip, Space, Button } from \"antd\";\nimport {\n  NotificationOutlined,\n  CloseCircleOutlined,\n  PushpinOutlined,\n  PushpinFilled,\n  VideoCameraFilled,\n} from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\n\n/**\n * @jaidharosenblatt Display an announcement with a alert icon in blue div\n * Able to be closed by clicking on X\n * @param message to display\n * @param announcement display a yellow alert instead of announcement\n * @param handleClose callback that handles closing an announcement permanently\n * @param handlePin callback that handles when an instructor pins annoucement to course attributes\n */\nconst Announcement = (props) => {\n  const [visible, setVisible] = useState(true);\n\n  const {\n    userIsInstructor,\n    announcement,\n    handleClose,\n    handlePin,\n    userID,\n  } = props;\n\n  const isOwner = userID === announcement?.ownerId;\n  const name = isOwner ? \"Your\" : `${announcement?.ownerName.split(\" \")[0]}'s`;\n\n  const handleHideClose = () => {\n    if (userIsInstructor) {\n      handleClose(announcement);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  const iconStyle = announcement.meetingURL ? { fontSize: 24 } : {};\n\n  if (visible) {\n    return (\n      <div className=\"announcement-container\">\n        <Row align=\"middle\">\n          <Col span={2}>\n            <NotificationOutlined style={iconStyle} />\n          </Col>\n          <Col span={20}>\n            <Space direction=\"vertical\" size={0}>\n              <Space size={4}>\n                {name} Announcement:\n                {announcement?.announcement}\n              </Space>\n\n              {announcement.meetingURL && (\n                <Button\n                  type=\"primary\"\n                  href={announcement?.meetingURL}\n                  target=\"_blank\"\n                >\n                  <VideoCameraFilled /> Join {name} Video Room\n                </Button>\n              )}\n            </Space>\n          </Col>\n          <Col span={2}>\n            <Space>\n              {userIsInstructor && (\n                <Tooltip placement=\"left\" title=\"Pin announcement\">\n                  {announcement.pinned ? (\n                    <PushpinFilled\n                      style={iconStyle}\n                      onClick={() => handlePin(announcement)}\n                    />\n                  ) : (\n                    <PushpinOutlined\n                      style={iconStyle}\n                      onClick={() => handlePin(announcement)}\n                    />\n                  )}\n                </Tooltip>\n              )}\n              <Tooltip\n                placement=\"left\"\n                title={\n                  userIsInstructor\n                    ? `Delete ${name.toLowerCase()} announcement`\n                    : \"Hide announcement\"\n                }\n              >\n                <CloseCircleOutlined\n                  style={iconStyle}\n                  onClick={handleHideClose}\n                />\n              </Tooltip>\n            </Space>\n          </Col>\n        </Row>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst mapStateToProps = (state, pastProps) => {\n  return {\n    ...pastProps,\n    userIsInstructor: selectors.userIsInstructor(state),\n    userID: selectors.getUserID(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Announcement);\n"]},"metadata":{},"sourceType":"module"}