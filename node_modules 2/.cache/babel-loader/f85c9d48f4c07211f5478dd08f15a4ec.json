{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/instructor/adminCourseSettings/form/CustomizeQuestion.js\";\nimport React, { useState } from \"react\";\nimport { Row, Col, Button, Space, Popconfirm } from \"antd\";\nimport AdjustableQuestion from \"../../../course/helpform/AdjustableQuestion\";\nimport { defaultFields } from \"../../../course/helpform/defaultFields\";\nimport CustomizeField from \"./CustomizeField\";\nimport \"./customform.css\";\nimport NavBarCentered from \"../../../util-components/centeredpage/NavBarCentered\";\nimport VerticalSpace from \"../../../util-components/vertical-space/VerticalSpace\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../../redux/selectors\";\nimport { editCourse } from \"../../../../redux/sorted-courses/actionCreators\";\n\nconst CustomizeQuestion = props => {\n  const {\n    questionTemplate\n  } = props.course;\n  const [editingField, setEditingField] = useState();\n  const [questionForm, setQuestionForm] = useState(questionTemplate);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const onFinish = async () => {\n    await props.editCourse({\n      questionTemplate: questionForm\n    });\n    setSubmitDisabled(true);\n  };\n\n  const updateForm = (values, index) => {\n    const {\n      checkboxes,\n      ...field\n    } = values;\n    const required = checkboxes.includes(\"required\");\n    const showInTable = checkboxes.includes(\"showInTable\");\n\n    if (index !== undefined) {\n      var temp = questionForm;\n      values.options = values.options || [];\n      temp[index] = { ...field,\n        required,\n        showInTable\n      };\n      setQuestionForm([...temp]);\n      setEditingField();\n      setSubmitDisabled(false);\n    }\n  };\n\n  function openEditWindow(item) {\n    setEditingField(item);\n  }\n\n  const onAddField = () => {\n    const field = {\n      type: \"input\",\n      label: \"New Field\",\n      options: []\n    };\n    setQuestionForm([...questionForm, field]);\n    setEditingField(field);\n  };\n\n  const deleteField = value => {\n    setQuestionForm(questionForm.filter(field => field._id !== value._id));\n    setEditingField();\n    setSubmitDisabled(false);\n  };\n\n  const resetForm = () => {\n    setQuestionForm([...defaultFields]);\n    setEditingField();\n    setSubmitDisabled(false);\n  };\n\n  return /*#__PURE__*/React.createElement(NavBarCentered, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VerticalSpace, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Customize Student Question Form\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Enter in the fields you want students to fill out when joining office hours and preview what the form will look like\")), /*#__PURE__*/React.createElement(Row, {\n    gutter: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(AdjustableQuestion, {\n    editingTemplate: questionForm,\n    openEditWindow: openEditWindow,\n    edit: true,\n    hideSubmitButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    onClick: onAddField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Add Field\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: submitDisabled,\n    block: true,\n    type: \"primary\",\n    onClick: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Finalize Form Edits\"), /*#__PURE__*/React.createElement(Popconfirm, {\n    title: \"This will erase your existing form\",\n    onConfirm: resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Reset Form to Default\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomizeField, {\n    passedForm: questionForm,\n    updateForm: updateForm,\n    fielder: editingField,\n    deleteField: deleteField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  course: selectors.getCourse(state)\n});\n\nexport default connect(mapStateToProps, {\n  editCourse\n})(CustomizeQuestion);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/instructor/adminCourseSettings/form/CustomizeQuestion.js"],"names":["React","useState","Row","Col","Button","Space","Popconfirm","AdjustableQuestion","defaultFields","CustomizeField","NavBarCentered","VerticalSpace","connect","selectors","editCourse","CustomizeQuestion","props","questionTemplate","course","editingField","setEditingField","questionForm","setQuestionForm","submitDisabled","setSubmitDisabled","onFinish","updateForm","values","index","checkboxes","field","required","includes","showInTable","undefined","temp","options","openEditWindow","item","onAddField","type","label","deleteField","value","filter","_id","resetForm","width","mapStateToProps","state","getCourse"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Button, Space, Popconfirm } from \"antd\";\nimport AdjustableQuestion from \"../../../course/helpform/AdjustableQuestion\";\nimport { defaultFields } from \"../../../course/helpform/defaultFields\";\n\nimport CustomizeField from \"./CustomizeField\";\nimport \"./customform.css\";\nimport NavBarCentered from \"../../../util-components/centeredpage/NavBarCentered\";\nimport VerticalSpace from \"../../../util-components/vertical-space/VerticalSpace\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../../redux/selectors\";\nimport { editCourse } from \"../../../../redux/sorted-courses/actionCreators\";\n\nconst CustomizeQuestion = (props) => {\n  const { questionTemplate } = props.course;\n  const [editingField, setEditingField] = useState();\n  const [questionForm, setQuestionForm] = useState(questionTemplate);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const onFinish = async () => {\n    await props.editCourse({ questionTemplate: questionForm });\n    setSubmitDisabled(true);\n  };\n\n  const updateForm = (values, index) => {\n    const { checkboxes, ...field } = values;\n    const required = checkboxes.includes(\"required\");\n    const showInTable = checkboxes.includes(\"showInTable\");\n\n    if (index !== undefined) {\n      var temp = questionForm;\n      values.options = values.options || [];\n      temp[index] = { ...field, required, showInTable };\n\n      setQuestionForm([...temp]);\n      setEditingField();\n      setSubmitDisabled(false);\n    }\n  };\n\n  function openEditWindow(item) {\n    setEditingField(item);\n  }\n\n  const onAddField = () => {\n    const field = {\n      type: \"input\",\n      label: \"New Field\",\n      options: [],\n    };\n    setQuestionForm([...questionForm, field]);\n    setEditingField(field);\n  };\n\n  const deleteField = (value) => {\n    setQuestionForm(questionForm.filter((field) => field._id !== value._id));\n    setEditingField();\n    setSubmitDisabled(false);\n  };\n\n  const resetForm = () => {\n    setQuestionForm([...defaultFields]);\n    setEditingField();\n    setSubmitDisabled(false);\n  };\n\n  return (\n    <NavBarCentered>\n      <VerticalSpace>\n        <div>\n          <h1>Customize Student Question Form</h1>\n          <p>\n            Enter in the fields you want students to fill out when joining\n            office hours and preview what the form will look like\n          </p>\n        </div>\n\n        <Row gutter={12}>\n          <Col xs={24} lg={12}>\n            <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n              <h3>Preview</h3>\n              <AdjustableQuestion\n                editingTemplate={questionForm}\n                openEditWindow={openEditWindow}\n                edit={true}\n                hideSubmitButton\n              />\n              <Button block onClick={onAddField}>\n                Add Field\n              </Button>\n              <Button\n                disabled={submitDisabled}\n                block\n                type=\"primary\"\n                onClick={onFinish}\n              >\n                Finalize Form Edits\n              </Button>\n\n              <Popconfirm\n                title=\"This will erase your existing form\"\n                onConfirm={resetForm}\n              >\n                <Button danger block>\n                  Reset Form to Default\n                </Button>\n              </Popconfirm>\n            </Space>\n          </Col>\n          <Col xs={24} lg={12}>\n            <CustomizeField\n              passedForm={questionForm}\n              updateForm={updateForm}\n              fielder={editingField}\n              deleteField={deleteField}\n            />\n          </Col>\n        </Row>\n      </VerticalSpace>\n    </NavBarCentered>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  course: selectors.getCourse(state),\n});\nexport default connect(mapStateToProps, { editCourse })(CustomizeQuestion);\n"]},"metadata":{},"sourceType":"module"}