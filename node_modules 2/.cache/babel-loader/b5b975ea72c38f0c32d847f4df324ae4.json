{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getTimeParts_1 = __importDefault(require(\"../helpers/getTimeParts\"));\n\nvar now_1 = __importDefault(require(\"../helpers/now\"));\n\nvar TimerState_1 = __importDefault(require(\"./TimerState\"));\n\nvar TimerModel =\n/** @class */\nfunction () {\n  function TimerModel(_a) {\n    var initialTime = _a.initialTime,\n        direction = _a.direction,\n        timeToUpdate = _a.timeToUpdate,\n        lastUnit = _a.lastUnit,\n        checkpoints = _a.checkpoints,\n        onChange = _a.onChange;\n    this.internalTime = now_1.default();\n    this.initialTime = initialTime;\n    this.time = initialTime;\n    this.direction = direction;\n    this.timeToUpdate = timeToUpdate;\n    this.lastUnit = lastUnit;\n    this.checkpoints = checkpoints;\n    this.innerState = new TimerState_1.default(onChange);\n    this.onChange = onChange;\n    this.timerId = null;\n  }\n\n  Object.defineProperty(TimerModel.prototype, \"state\", {\n    get: function () {\n      return this.innerState.getState();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimerModel.prototype, \"timeParts\", {\n    get: function () {\n      return this.getTimeParts(this.computeTime());\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TimerModel.prototype.getTimeParts = function (time) {\n    return getTimeParts_1.default(time, this.lastUnit);\n  };\n\n  TimerModel.prototype.setTime = function (time) {\n    this.internalTime = now_1.default();\n    this.initialTime = time;\n    this.time = this.initialTime;\n    this.onChange(this.getTimeParts(this.time));\n  };\n\n  TimerModel.prototype.getTime = function () {\n    return this.time;\n  };\n\n  TimerModel.prototype.setLastUnit = function (lastUnit) {\n    if (this.innerState.isPlaying()) {\n      this.pause();\n      this.lastUnit = lastUnit;\n      this.resume(true);\n    } else {\n      this.lastUnit = lastUnit;\n    }\n  };\n\n  TimerModel.prototype.setTimeToUpdate = function (interval) {\n    if (this.innerState.isPlaying()) {\n      this.pause();\n      this.timeToUpdate = interval;\n      this.resume();\n    } else {\n      this.timeToUpdate = interval;\n    }\n  };\n\n  TimerModel.prototype.setDirection = function (direction) {\n    this.direction = direction;\n  };\n\n  TimerModel.prototype.setCheckpoints = function (checkpoints) {\n    this.checkpoints = checkpoints;\n  };\n\n  TimerModel.prototype.start = function () {\n    if (this.innerState.setPlaying()) {\n      this.setTimerInterval(true);\n    }\n  };\n\n  TimerModel.prototype.resume = function (callImmediately) {\n    if (callImmediately === void 0) {\n      callImmediately = false;\n    }\n\n    if (!this.innerState.isStopped() && this.innerState.setPlaying()) {\n      this.setTimerInterval(callImmediately);\n    }\n  };\n\n  TimerModel.prototype.pause = function () {\n    if (this.innerState.setPaused()) {\n      clearInterval(this.timerId);\n    }\n  };\n\n  TimerModel.prototype.stop = function () {\n    if (this.innerState.setStopped()) {\n      clearInterval(this.timerId);\n    }\n  };\n\n  TimerModel.prototype.reset = function () {\n    this.time = this.initialTime;\n    this.onChange(this.getTimeParts(this.time));\n  };\n\n  TimerModel.prototype.setTimerInterval = function (callImmediately) {\n    var _this = this;\n\n    if (callImmediately === void 0) {\n      callImmediately = false;\n    }\n\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n\n    this.internalTime = now_1.default();\n\n    var repeatedFunc = function () {\n      var oldTime = _this.time;\n\n      var updatedTime = _this.computeTime();\n\n      _this.onChange(_this.getTimeParts(updatedTime));\n\n      _this.checkpoints.map(function (_a) {\n        var time = _a.time,\n            callback = _a.callback;\n        var checkForForward = time > oldTime && time <= updatedTime;\n        var checkForBackward = time < oldTime && time >= updatedTime;\n        var checkIntersection = _this.direction === 'backward' ? checkForBackward : checkForForward;\n\n        if (checkIntersection) {\n          callback();\n        }\n      });\n    };\n\n    callImmediately && this.onChange(this.getTimeParts(this.time));\n    this.timerId = window.setInterval(repeatedFunc, this.timeToUpdate);\n  };\n\n  TimerModel.prototype.computeTime = function () {\n    if (this.innerState.isPlaying()) {\n      var currentInternalTime = now_1.default();\n      var delta = Math.abs(currentInternalTime - this.internalTime);\n\n      switch (this.direction) {\n        case 'forward':\n          this.time = this.time + delta;\n          this.internalTime = currentInternalTime;\n          return this.time;\n\n        case 'backward':\n          {\n            this.time = this.time - delta;\n            this.internalTime = currentInternalTime;\n\n            if (this.time < 0) {\n              this.stop();\n              return 0;\n            }\n\n            return this.time;\n          }\n\n        default:\n          return this.time;\n      }\n    }\n\n    return this.time;\n  };\n\n  return TimerModel;\n}();\n\nexports.TimerModel = TimerModel;","map":{"version":3,"sources":["../../../src/lib/models/TimerModel.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar getTimeParts_1 = __importDefault(require(\"../helpers/getTimeParts\"));\nvar now_1 = __importDefault(require(\"../helpers/now\"));\nvar TimerState_1 = __importDefault(require(\"./TimerState\"));\nvar TimerModel = /** @class */ (function () {\n    function TimerModel(_a) {\n        var initialTime = _a.initialTime, direction = _a.direction, timeToUpdate = _a.timeToUpdate, lastUnit = _a.lastUnit, checkpoints = _a.checkpoints, onChange = _a.onChange;\n        this.internalTime = now_1.default();\n        this.initialTime = initialTime;\n        this.time = initialTime;\n        this.direction = direction;\n        this.timeToUpdate = timeToUpdate;\n        this.lastUnit = lastUnit;\n        this.checkpoints = checkpoints;\n        this.innerState = new TimerState_1.default(onChange);\n        this.onChange = onChange;\n        this.timerId = null;\n    }\n    Object.defineProperty(TimerModel.prototype, \"state\", {\n        get: function () {\n            return this.innerState.getState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimerModel.prototype, \"timeParts\", {\n        get: function () {\n            return this.getTimeParts(this.computeTime());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimerModel.prototype.getTimeParts = function (time) {\n        return getTimeParts_1.default(time, this.lastUnit);\n    };\n    TimerModel.prototype.setTime = function (time) {\n        this.internalTime = now_1.default();\n        this.initialTime = time;\n        this.time = this.initialTime;\n        this.onChange(this.getTimeParts(this.time));\n    };\n    TimerModel.prototype.getTime = function () {\n        return this.time;\n    };\n    TimerModel.prototype.setLastUnit = function (lastUnit) {\n        if (this.innerState.isPlaying()) {\n            this.pause();\n            this.lastUnit = lastUnit;\n            this.resume(true);\n        }\n        else {\n            this.lastUnit = lastUnit;\n        }\n    };\n    TimerModel.prototype.setTimeToUpdate = function (interval) {\n        if (this.innerState.isPlaying()) {\n            this.pause();\n            this.timeToUpdate = interval;\n            this.resume();\n        }\n        else {\n            this.timeToUpdate = interval;\n        }\n    };\n    TimerModel.prototype.setDirection = function (direction) {\n        this.direction = direction;\n    };\n    TimerModel.prototype.setCheckpoints = function (checkpoints) {\n        this.checkpoints = checkpoints;\n    };\n    TimerModel.prototype.start = function () {\n        if (this.innerState.setPlaying()) {\n            this.setTimerInterval(true);\n        }\n    };\n    TimerModel.prototype.resume = function (callImmediately) {\n        if (callImmediately === void 0) { callImmediately = false; }\n        if (!this.innerState.isStopped() && this.innerState.setPlaying()) {\n            this.setTimerInterval(callImmediately);\n        }\n    };\n    TimerModel.prototype.pause = function () {\n        if (this.innerState.setPaused()) {\n            clearInterval(this.timerId);\n        }\n    };\n    TimerModel.prototype.stop = function () {\n        if (this.innerState.setStopped()) {\n            clearInterval(this.timerId);\n        }\n    };\n    TimerModel.prototype.reset = function () {\n        this.time = this.initialTime;\n        this.onChange(this.getTimeParts(this.time));\n    };\n    TimerModel.prototype.setTimerInterval = function (callImmediately) {\n        var _this = this;\n        if (callImmediately === void 0) { callImmediately = false; }\n        if (this.timerId) {\n            clearInterval(this.timerId);\n        }\n        this.internalTime = now_1.default();\n        var repeatedFunc = function () {\n            var oldTime = _this.time;\n            var updatedTime = _this.computeTime();\n            _this.onChange(_this.getTimeParts(updatedTime));\n            _this.checkpoints.map(function (_a) {\n                var time = _a.time, callback = _a.callback;\n                var checkForForward = time > oldTime && time <= updatedTime;\n                var checkForBackward = time < oldTime && time >= updatedTime;\n                var checkIntersection = _this.direction === 'backward' ?\n                    checkForBackward :\n                    checkForForward;\n                if (checkIntersection) {\n                    callback();\n                }\n            });\n        };\n        callImmediately && this.onChange(this.getTimeParts(this.time));\n        this.timerId = window.setInterval(repeatedFunc, this.timeToUpdate);\n    };\n    TimerModel.prototype.computeTime = function () {\n        if (this.innerState.isPlaying()) {\n            var currentInternalTime = now_1.default();\n            var delta = Math.abs(currentInternalTime - this.internalTime);\n            switch (this.direction) {\n                case 'forward':\n                    this.time = this.time + delta;\n                    this.internalTime = currentInternalTime;\n                    return this.time;\n                case 'backward': {\n                    this.time = this.time - delta;\n                    this.internalTime = currentInternalTime;\n                    if (this.time < 0) {\n                        this.stop();\n                        return 0;\n                    }\n                    return this.time;\n                }\n                default:\n                    return this.time;\n            }\n        }\n        return this.time;\n    };\n    return TimerModel;\n}());\nexports.TimerModel = TimerModel;\n//# sourceMappingURL=TimerModel.js.map"]},"metadata":{},"sourceType":"script"}