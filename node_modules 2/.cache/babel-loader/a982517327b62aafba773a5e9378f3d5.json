{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/ta/openjoin/OpenSessionForm.js\";\nimport React from \"react\";\nimport { Form, Button, Input, Tooltip } from \"antd\";\nimport { EnvironmentOutlined, VideoCameraOutlined, QuestionCircleOutlined } from \"@ant-design/icons\";\nimport TimeSelector from \"./TimeSelector\";\nimport { connect } from \"react-redux\";\nimport { editSession } from \"../../../redux/courses/actions/ta\";\nimport selectors from \"../../../redux/selectors\";\nimport ErrorSuccess from \"../../util-components/error-success/ErrorSuccess\";\n/**\n * @MatthewSclar @jaidharosenblatt create a new session\n * @param {props} onSubmit callback to open session\n * @param {props} CTA call to action for button (optional)\n * @param {Boolean} showSuccess to show success message from redux\n */\n\nconst OpenSessionForm = props => {\n  const {\n    CTA,\n    maxWidth\n  } = props;\n  const {\n    session\n  } = props;\n\n  const onSubmit = async values => {\n    const {\n      meetingURL,\n      ...changes\n    } = values;\n    await props.editSession(changes, meetingURL);\n\n    if (props.hideModal) {\n      props.hideModal();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    style: {\n      maxWidth: maxWidth,\n      margin: 8\n    },\n    onFinish: CTA ? onSubmit : props.onSubmit,\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TimeSelector, {\n    startTime: session === null || session === void 0 ? void 0 : session.startTime,\n    endTime: session === null || session === void 0 ? void 0 : session.endTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-textbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EnvironmentOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"location\",\n    initialValue: (session === null || session === void 0 ? void 0 : session.location) || \"Virtual\",\n    colon: false,\n    rules: [{\n      required: true,\n      message: \"Enter a location to enter a session.\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-textbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VideoCameraOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      width: \"100%\"\n    },\n    name: \"meetingURL\",\n    colon: false,\n    initialValue: props.meetingURL,\n    rules: [{\n      required: true,\n      message: \"Enter a Zoom Link to enter a session.\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Meeting Room URL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Please input a valid link to the virtual meeting room where you will be meeting with students\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n    style: {\n      paddingLeft: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ErrorSuccess, {\n    showSuccess: props.showSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: props.loading,\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, CTA || `Open Session As \n          ${props.userIsInstructor ? \"an Instructor\" : \"a TA\"}`)));\n};\n\nconst mapStateToProps = (state, prevProps) => {\n  return { ...prevProps,\n    course: selectors.getCourse(state),\n    loading: selectors.getLoading(state),\n    session: selectors.getSession(state),\n    userIsInstructor: selectors.userIsInstructor(state),\n    meetingURL: selectors.getUserMeetingURL(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editSession\n})(OpenSessionForm);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/ta/openjoin/OpenSessionForm.js"],"names":["React","Form","Button","Input","Tooltip","EnvironmentOutlined","VideoCameraOutlined","QuestionCircleOutlined","TimeSelector","connect","editSession","selectors","ErrorSuccess","OpenSessionForm","props","CTA","maxWidth","session","onSubmit","values","meetingURL","changes","hideModal","margin","startTime","endTime","location","required","message","width","paddingLeft","showSuccess","loading","userIsInstructor","mapStateToProps","state","prevProps","course","getCourse","getLoading","getSession","getUserMeetingURL"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button, Input, Tooltip } from \"antd\";\nimport {\n  EnvironmentOutlined,\n  VideoCameraOutlined,\n  QuestionCircleOutlined,\n} from \"@ant-design/icons\";\nimport TimeSelector from \"./TimeSelector\";\nimport { connect } from \"react-redux\";\nimport { editSession } from \"../../../redux/courses/actions/ta\";\nimport selectors from \"../../../redux/selectors\";\nimport ErrorSuccess from \"../../util-components/error-success/ErrorSuccess\";\n\n/**\n * @MatthewSclar @jaidharosenblatt create a new session\n * @param {props} onSubmit callback to open session\n * @param {props} CTA call to action for button (optional)\n * @param {Boolean} showSuccess to show success message from redux\n */\nconst OpenSessionForm = (props) => {\n  const { CTA, maxWidth } = props;\n  const { session } = props;\n\n  const onSubmit = async (values) => {\n    const { meetingURL, ...changes } = values;\n\n    await props.editSession(changes, meetingURL);\n    if (props.hideModal) {\n      props.hideModal();\n    }\n  };\n\n  return (\n    <Form\n      style={{ maxWidth: maxWidth, margin: 8 }}\n      onFinish={CTA ? onSubmit : props.onSubmit}\n      layout=\"vertical\"\n    >\n      <TimeSelector startTime={session?.startTime} endTime={session?.endTime} />\n\n      <div className=\"icon-textbox\">\n        <EnvironmentOutlined />\n        <Form.Item\n          name=\"location\"\n          initialValue={session?.location || \"Virtual\"}\n          colon={false}\n          rules={[\n            {\n              required: true,\n              message: \"Enter a location to enter a session.\",\n            },\n          ]}\n        >\n          <Input placeholder=\"Location\" />\n        </Form.Item>\n      </div>\n\n      <div className=\"icon-textbox\">\n        <VideoCameraOutlined />\n        <Form.Item\n          style={{ width: \"100%\" }}\n          name=\"meetingURL\"\n          colon={false}\n          initialValue={props.meetingURL}\n          rules={[\n            {\n              required: true,\n              message: \"Enter a Zoom Link to enter a session.\",\n            },\n          ]}\n        >\n          <Input placeholder=\"Meeting Room URL\" />\n        </Form.Item>\n        <Tooltip title=\"Please input a valid link to the virtual meeting room where you will be meeting with students\">\n          <QuestionCircleOutlined style={{ paddingLeft: \"5px\" }} />\n        </Tooltip>\n      </div>\n      <ErrorSuccess showSuccess={props.showSuccess} />\n      <Form.Item>\n        <Button loading={props.loading} type=\"primary\" htmlType=\"submit\" block>\n          {CTA ||\n            `Open Session As \n          ${props.userIsInstructor ? \"an Instructor\" : \"a TA\"}`}\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst mapStateToProps = (state, prevProps) => {\n  return {\n    ...prevProps,\n    course: selectors.getCourse(state),\n    loading: selectors.getLoading(state),\n\n    session: selectors.getSession(state),\n    userIsInstructor: selectors.userIsInstructor(state),\n    meetingURL: selectors.getUserMeetingURL(state),\n  };\n};\n\nexport default connect(mapStateToProps, { editSession })(OpenSessionForm);\n"]},"metadata":{},"sourceType":"module"}