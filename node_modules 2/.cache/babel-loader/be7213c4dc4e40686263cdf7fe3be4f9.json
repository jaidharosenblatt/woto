{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/form/VideoRoomUrl.js\";\nimport React from \"react\";\nimport { Form, Input, Tooltip } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../redux/selectors\";\n\nconst VideoRoomUrl = ({\n  meetingURL,\n  required,\n  noDefault\n}) => {\n  // function addhttp(url) {\n  //   if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n  //     url = \"http://\" + url;\n  //   }\n  //   return url;\n  // }\n  // const checkValue = ({ target: { value } }) => {\n  //   setIValue(addhttp(value));\n  //   console.log(ivalue);\n  // };\n  return /*#__PURE__*/React.createElement(Form.Item, {\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Video Room URL\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Please input a valid link to the virtual meeting room where you would like to meet with others\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }))),\n    name: \"meetingURL\",\n    colon: false,\n    initialValue: !noDefault ? meetingURL : undefined // onChange={checkValue}\n    ,\n    rules: [{\n      required: required,\n      message: \"Please include a meeting URL\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"url\",\n    placeholder: meetingURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = (state, prevProps) => {\n  return { ...prevProps,\n    meetingURL: selectors.getUserMeetingURL(state)\n  };\n};\n\nexport default connect(mapStateToProps)(VideoRoomUrl);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/form/VideoRoomUrl.js"],"names":["React","Form","Input","Tooltip","QuestionCircleOutlined","connect","selectors","VideoRoomUrl","meetingURL","required","noDefault","undefined","message","mapStateToProps","state","prevProps","getUserMeetingURL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,QAAqC,MAArC;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA;AAAxB,CAAD,KAAyC;AAC5D;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,gGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFJ;AASE,IAAA,IAAI,EAAC,YATP;AAUE,IAAA,KAAK,EAAE,KAVT;AAWE,IAAA,YAAY,EAAE,CAACA,SAAD,GAAaF,UAAb,GAA0BG,SAX1C,CAYE;AAZF;AAaE,IAAA,KAAK,EAAE,CAAC;AAAEF,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBG,MAAAA,OAAO,EAAE;AAA/B,KAAD,CAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAeE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,WAAW,EAAEJ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD,CAhCD;;AAiCA,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC5C,SAAO,EACL,GAAGA,SADE;AAELP,IAAAA,UAAU,EAAEF,SAAS,CAACU,iBAAV,CAA4BF,KAA5B;AAFP,GAAP;AAID,CALD;;AAMA,eAAeT,OAAO,CAACQ,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Form, Input, Tooltip } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../redux/selectors\";\n\nconst VideoRoomUrl = ({ meetingURL, required, noDefault }) => {\n  // function addhttp(url) {\n  //   if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n  //     url = \"http://\" + url;\n  //   }\n  //   return url;\n  // }\n\n  // const checkValue = ({ target: { value } }) => {\n  //   setIValue(addhttp(value));\n  //   console.log(ivalue);\n  // };\n\n  return (\n    <Form.Item\n      label={\n        <span>\n          Video Room URL&nbsp;\n          <Tooltip title=\"Please input a valid link to the virtual meeting room where you would like to meet with others\">\n            <QuestionCircleOutlined />\n          </Tooltip>\n        </span>\n      }\n      name=\"meetingURL\"\n      colon={false}\n      initialValue={!noDefault ? meetingURL : undefined}\n      // onChange={checkValue}\n      rules={[{ required: required, message: \"Please include a meeting URL\" }]}\n    >\n      <Input type=\"url\" placeholder={meetingURL} />\n    </Form.Item>\n  );\n};\nconst mapStateToProps = (state, prevProps) => {\n  return {\n    ...prevProps,\n    meetingURL: selectors.getUserMeetingURL(state),\n  };\n};\nexport default connect(mapStateToProps)(VideoRoomUrl);\n"]},"metadata":{},"sourceType":"module"}