{"ast":null,"code":"// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n;\n\n(function (root, factory) {\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory(); // Support NodeJS & Component, which allow module.exports to be a function\n\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    } // Support CommonJS 1.1.1 spec\n\n\n    exports.randomColor = randomColor; // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory); // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n})(this, function () {\n  // Seed to get repeatable colors\n  var seed = null; // Shared color dictionary\n\n  var colorDictionary = {}; // Populate the color dictionary\n\n  loadColorBounds(); // check if a range is taken\n\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n    options = options || {}; // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed; // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed); // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string'); // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H, S, B; // Check if we need to generate multiple colors\n\n    if (options.count !== null && options.count !== undefined) {\n      var totalColors = options.count,\n          colors = []; // Value false at index i means the range i is not taken yet.\n\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false);\n      }\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n      return colors;\n    } // First we pick a hue (H)\n\n\n    H = pickHue(options); // Then use H to determine saturation (S)\n\n    S = pickSaturation(H, options); // Then use S and H to determine brightness (B).\n\n    B = pickBrightness(H, S, options); // Then we return the HSB color in the desired format\n\n    return setFormat([H, S, B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue);\n      var hue = randomWithin(hueRange); //Each of colorRanges.length ranges has a length equal approximatelly one step\n\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length;\n      var j = parseInt((hue - hueRange[0]) / step); //Check if the range j is taken\n\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length;\n      } else {\n        colorRanges[j] = true;\n      }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n      hueRange = [min, max];\n      hue = randomWithin(hueRange);\n\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    } else {\n      var hueRange = getHueRange(options.hue);\n      hue = randomWithin(hueRange); // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation(hue, options) {\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0, 100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n    }\n\n    return randomWithin([sMin, sMax]);\n  }\n\n  function pickBrightness(H, S, options) {\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin) / 2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat(hsv, options) {\n    switch (options.format) {\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n  }\n\n  function getMinimumBrightness(H, S) {\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n      var s2 = lowerBounds[i + 1][0],\n          v2 = lowerBounds[i + 1][1];\n\n      if (S >= s1 && S <= s2) {\n        var m = (v2 - v1) / (s2 - s1),\n            b = v1 - m * s1;\n        return m * S + b;\n      }\n    }\n\n    return 0;\n  }\n\n  function getHueRange(colorInput) {\n    if (typeof parseInt(colorInput) === 'number') {\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n    }\n\n    if (typeof colorInput === 'string') {\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [hue, hue];\n      }\n    }\n\n    return [0, 360];\n  }\n\n  function getSaturationRange(hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo(hue) {\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue -= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n      var color = colorDictionary[colorName];\n\n      if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n        return colorDictionary[colorName];\n      }\n    }\n\n    return 'Color not found';\n  }\n\n  function randomWithin(range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895;\n      var r = Math.random();\n      r += golden_ratio;\n      r %= 1;\n      return Math.floor(range[0] + r * (range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex(hsv) {\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n    return hex;\n  }\n\n  function defineColor(name, hueRange, lowerBounds) {\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n  }\n\n  function loadColorBounds() {\n    defineColor('monochrome', null, [[0, 0], [100, 0]]);\n    defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\n    defineColor('orange', [19, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\n    defineColor('yellow', [47, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\n    defineColor('green', [63, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\n    defineColor('blue', [179, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\n    defineColor('purple', [258, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\n    defineColor('pink', [283, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\n  }\n\n  function HSVtoRGB(hsv) {\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n\n    if (h === 0) {\n      h = 1;\n    }\n\n    if (h === 360) {\n      h = 359;\n    } // Rebase the h,s,v values\n\n\n    h = h / 360;\n    var s = hsv[1] / 100,\n        v = hsv[2] / 100;\n    var h_i = Math.floor(h * 6),\n        f = h * 6 - h_i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        r = 256,\n        g = 256,\n        b = 256;\n\n    switch (h_i) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n\n    var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n    return result;\n  }\n\n  function HexToHSB(hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n        green = parseInt(hex.substr(2, 2), 16) / 255,\n        blue = parseInt(hex.substr(4, 2), 16) / 255;\n    var cMax = Math.max(red, green, blue),\n        delta = cMax - Math.min(red, green, blue),\n        saturation = cMax ? delta / cMax : 0;\n\n    switch (cMax) {\n      case red:\n        return [60 * ((green - blue) / delta % 6) || 0, saturation, cMax];\n\n      case green:\n        return [60 * ((blue - red) / delta + 2) || 0, saturation, cMax];\n\n      case blue:\n        return [60 * ((red - green) / delta + 4) || 0, saturation, cMax];\n    }\n  }\n\n  function HSVtoHSL(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        k = (2 - s) * v;\n    return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\n  }\n\n  function stringToInteger(string) {\n    var total = 0;\n\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i);\n    }\n\n    return total;\n  } // get The range of given hue when options.count!=0\n\n\n  function getRealHueRange(colorHue) {\n    if (!isNaN(colorHue)) {\n      var number = parseInt(colorHue);\n\n      if (number < 360 && number > 0) {\n        return getColorInfo(colorHue).hueRange;\n      }\n    } else if (typeof colorHue === 'string') {\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0];\n        return getColorInfo(hue).hueRange;\n      }\n    }\n\n    return [0, 360];\n  }\n\n  return randomColor;\n});","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/node_modules/randomcolor/randomColor.js"],"names":["root","factory","exports","randomColor","module","define","amd","seed","colorDictionary","loadColorBounds","colorRanges","options","undefined","parseInt","stringToInteger","TypeError","H","S","B","count","totalColors","colors","i","push","length","pickHue","pickSaturation","pickBrightness","setFormat","hueRange","getRealHueRange","hue","randomWithin","step","j","min","max","getHueRange","luminosity","saturationRange","getSaturationRange","sMin","sMax","bMin","getMinimumBrightness","bMax","hsv","format","HSVtoHSL","hsl","hslColor","alpha","Math","random","HSVtoRGB","rgb","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","m","b","colorInput","number","color","match","HexToHSB","colorName","range","golden_ratio","r","floor","rnd","componentToHex","c","hex","toString","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","g","result","replace","red","substr","green","blue","cMax","delta","saturation","k","round","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","colorHue","isNaN"],"mappings":"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","sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false)\n        }\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue)\n\n      var hue = randomWithin(hueRange)\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length\n\n      var j = parseInt((hue - hueRange[0]) / step)\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length\n      }\n      else {\n        colorRanges[j] = true\n           }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n\n      hueRange = [min, max]\n\n      hue = randomWithin(hueRange)\n\n      if (hue < 0) {hue = 360 + hue;}\n      return hue\n    }\n    else {\n      var hueRange = getHueRange(options.hue)\n\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895\n      var r=Math.random()\n      r += golden_ratio\n      r %= 1\n      return Math.floor(range[0] + r*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n}\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue)\n  { if (!isNaN(colorHue)) {\n    var number = parseInt(colorHue);\n\n    if (number < 360 && number > 0) {\n      return getColorInfo(colorHue).hueRange\n    }\n  }\n    else if (typeof colorHue === 'string') {\n\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange\n       }\n    } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0]\n        return getColorInfo(hue).hueRange\n    }\n  }\n\n    return [0,360]\n}\n  return randomColor;\n}));\n"]},"metadata":{},"sourceType":"script"}