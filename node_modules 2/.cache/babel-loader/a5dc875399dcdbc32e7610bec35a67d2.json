{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/user/signup/SignUpForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Form, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignUp.css\";\nimport PasswordWithConfirm from \"../../form/PasswordWithConfirm\";\nimport EduEmail from \"../../form/EduEmail\";\nimport TextInputReq from \"../../form/TextInputReq\";\nimport SchoolSelect from \"../../form/SchoolSelect\";\nimport API from \"../../../api/API\";\nimport UserTypeSegControl from \"../../form/UserTypeSegControl\";\nimport GraduationYearInput from \"../../form/GraduationYearInput\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../../redux/auth/actionCreators\";\nimport selectors from \"../../../redux/selectors\";\nimport ErrorSuccess from \"../../util-components/error-success/ErrorSuccess\";\n/**\n * Create profile for a user\n * @param {Boolean} loading global loading state\n * @param {Boolean} error error from server\n * @param {Function} register actionCreator for creating profile\n */\n\nconst SignUpForm = props => {\n  const [schools, setSchools] = useState([]);\n  const [userType, setUserType] = useState(\"student\");\n  const [selectedSchool, setSelectedSchool] = useState(); //Store list of schools in schools state\n\n  useEffect(() => {\n    async function getSchools() {\n      const res = await API.getInstitutions();\n      setSchools({\n        schools: res\n      });\n    }\n\n    getSchools();\n  }, []);\n  const path = window.location.pathname; //url of the current page\n\n  const split = path.split(\"=\"); //this creates an array with key ([0] element) and value ([1] element)\n\n  const key = split[1];\n\n  const getSchoolFromId = id => {\n    return schools.schools.find(school => school[\"_id\"] === id);\n  };\n\n  const onFinish = async values => {\n    const user = {\n      name: values.name,\n      email: values.email.toLowerCase(),\n      password: values.password,\n      institution: values.institution,\n      graduationYear: values.graduationYear\n    };\n    props.register(user, userType);\n  };\n\n  return /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, key && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"If you were invited to join a course, you will automatically join the course once you sign up\"), /*#__PURE__*/React.createElement(Form, {\n    onFinish: onFinish,\n    initialValues: {\n      userType: userType\n    },\n    hideRequiredMark: true,\n    layout: \"vertical\",\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserTypeSegControl, {\n    handleChange: event => {\n      setUserType(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextInputReq, {\n    label: \"Name\",\n    name: \"name\",\n    placeholder: \"Kyle Sobel\",\n    message: \"Please input your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SchoolSelect, {\n    schools: schools.schools,\n    onChange: value => {\n      setSelectedSchool(getSchoolFromId(value).domain);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EduEmail, {\n    required: true,\n    error: props.error,\n    school: selectedSchool,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), userType !== \"instructor\" && /*#__PURE__*/React.createElement(GraduationYearInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(PasswordWithConfirm, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ErrorSuccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: props.loading,\n    type: \"primary\",\n    block: true,\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Get Started\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Already have an account?\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \" Sign in \"), \"here\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: selectors.getLoading(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  register\n})(SignUpForm);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/user/signup/SignUpForm.js"],"names":["React","useState","useEffect","Col","Form","Button","Link","PasswordWithConfirm","EduEmail","TextInputReq","SchoolSelect","API","UserTypeSegControl","GraduationYearInput","connect","register","selectors","ErrorSuccess","SignUpForm","props","schools","setSchools","userType","setUserType","selectedSchool","setSelectedSchool","getSchools","res","getInstitutions","path","window","location","pathname","split","key","getSchoolFromId","id","find","school","onFinish","values","user","name","email","toLowerCase","password","institution","graduationYear","event","target","value","domain","error","loading","mapStateToProps","state","getLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Col, Form, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignUp.css\";\nimport PasswordWithConfirm from \"../../form/PasswordWithConfirm\";\nimport EduEmail from \"../../form/EduEmail\";\nimport TextInputReq from \"../../form/TextInputReq\";\nimport SchoolSelect from \"../../form/SchoolSelect\";\nimport API from \"../../../api/API\";\nimport UserTypeSegControl from \"../../form/UserTypeSegControl\";\nimport GraduationYearInput from \"../../form/GraduationYearInput\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../../redux/auth/actionCreators\";\nimport selectors from \"../../../redux/selectors\";\nimport ErrorSuccess from \"../../util-components/error-success/ErrorSuccess\";\n\n/**\n * Create profile for a user\n * @param {Boolean} loading global loading state\n * @param {Boolean} error error from server\n * @param {Function} register actionCreator for creating profile\n */\nconst SignUpForm = (props) => {\n  const [schools, setSchools] = useState([]);\n  const [userType, setUserType] = useState(\"student\");\n  const [selectedSchool, setSelectedSchool] = useState();\n\n  //Store list of schools in schools state\n  useEffect(() => {\n    async function getSchools() {\n      const res = await API.getInstitutions();\n      setSchools({ schools: res });\n    }\n    getSchools();\n  }, []);\n\n  const path = window.location.pathname; //url of the current page\n  const split = path.split(\"=\"); //this creates an array with key ([0] element) and value ([1] element)\n  const key = split[1];\n\n  const getSchoolFromId = (id) => {\n    return schools.schools.find((school) => school[\"_id\"] === id);\n  };\n\n  const onFinish = async (values) => {\n    const user = {\n      name: values.name,\n      email: values.email.toLowerCase(),\n      password: values.password,\n      institution: values.institution,\n      graduationYear: values.graduationYear,\n    };\n    props.register(user, userType);\n  };\n\n  return (\n    <Col span={24}>\n      {key && (\n        <p>\n          If you were invited to join a course, you will automatically join the course once you sign\n          up\n        </p>\n      )}\n\n      <Form\n        onFinish={onFinish}\n        initialValues={{\n          userType: userType,\n        }}\n        hideRequiredMark\n        layout=\"vertical\"\n        className=\"sign-up\"\n      >\n        <UserTypeSegControl\n          handleChange={(event) => {\n            setUserType(event.target.value);\n          }}\n        />\n\n        <TextInputReq\n          label=\"Name\"\n          name=\"name\"\n          placeholder=\"Kyle Sobel\"\n          message=\"Please input your name\"\n        />\n\n        <SchoolSelect\n          schools={schools.schools}\n          onChange={(value) => {\n            setSelectedSchool(getSchoolFromId(value).domain);\n          }}\n        />\n        <EduEmail required error={props.error} school={selectedSchool} />\n        {userType !== \"instructor\" && <GraduationYearInput />}\n        <PasswordWithConfirm required />\n        <ErrorSuccess />\n        <Form.Item>\n          <Button loading={props.loading} type=\"primary\" block htmlType=\"submit\">\n            Get Started\n          </Button>\n          <p>\n            Already have an account?\n            <Link to=\"/signin\"> Sign in </Link>\n            here\n          </p>\n        </Form.Item>\n      </Form>\n    </Col>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: selectors.getLoading(state),\n  };\n};\nexport default connect(mapStateToProps, { register })(SignUpForm);\n"]},"metadata":{},"sourceType":"module"}