{"ast":null,"code":"import actionTypes from \"../actionsTypes\";\n/**\n * Create a dispatch to set course details in redux\n * @param {String} courseID\n * @param {Object} course\n * @returns {Object} function to dispatch\n */\n\nexport function setCourse(courseID, course) {\n  return {\n    type: actionTypes.SET_COURSE,\n    courseID,\n    payload: course\n  };\n}\n/**\n * Create a dispatch to set a session for a given course in redux\n * @param {String} courseID\n * @param {Object} session\n * @returns {Object} function to dispatch\n */\n\nexport function setSession(courseID, session) {\n  return {\n    type: actionTypes.SET_SESSION,\n    courseID,\n    payload: session\n  };\n}\n/**\n * Create a dispatch to set discussions for a given course in redux\n * @param {String} courseID\n * @param {Array} discussions\n * @returns {Object} function to dispatch\n */\n\nexport function setDiscussions(courseID, discussions) {\n  return {\n    type: actionTypes.SET_DISCUSSIONS,\n    courseID,\n    payload: discussions\n  };\n}\n/**\n * Create a dispatch to set a discussions for a given course in redux\n * @param {String} courseID\n * @param {Object} discussion\n * @returns {Object} function to dispatch\n */\n\nexport function setActiveDiscussion(courseID, discussion) {\n  return {\n    type: actionTypes.SET_ACTIVE_DISCUSSION,\n    courseID,\n    payload: discussion\n  };\n}\n/**\n * Create a dispatch to set questions for a given course in redux\n * @param {String} courseID\n * @param {Array} questions\n * @returns {Object} function to dispatch\n */\n\nexport function setQuestions(courseID, questions) {\n  return {\n    type: actionTypes.SET_QUESTIONS,\n    courseID,\n    payload: questions\n  };\n}\n/**\n * Create a dispatch to set an active question for a given course in redux\n * @param {String} courseID\n * @param {Object} question\n * @returns {Object} function to dispatch\n */\n\nexport function setActiveQuestion(courseID, question) {\n  return {\n    type: actionTypes.SET_ACTIVE_QUESTION,\n    courseID,\n    payload: question\n  };\n}\n/**\n * Create a dispatch to setup statistics for a given course in redux\n * @param {String} courseID\n * @param {Object} stats\n * @returns {Object} function to dispatch\n */\n\nexport function setStats(courseID, stats) {\n  return {\n    type: actionTypes.SET_STATS,\n    courseID,\n    payload: stats\n  };\n}\n/**\n * Create a dispatch to setup statistics for a given course in redux\n * @param {String} courseID\n * @returns {Object} function to dispatch\n */\n\nexport function clearSession(courseID) {\n  return {\n    type: actionTypes.SET_SESSION,\n    courseID,\n    payload: undefined\n  };\n}\n/**\n * Reset the courses state in redux\n * @returns {Object} to dispatch to redux\n */\n\nexport function resetCourses() {\n  return {\n    type: actionTypes.RESET\n  };\n}","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/redux/courses/actions/actionCreators.js"],"names":["actionTypes","setCourse","courseID","course","type","SET_COURSE","payload","setSession","session","SET_SESSION","setDiscussions","discussions","SET_DISCUSSIONS","setActiveDiscussion","discussion","SET_ACTIVE_DISCUSSION","setQuestions","questions","SET_QUESTIONS","setActiveQuestion","question","SET_ACTIVE_QUESTION","setStats","stats","SET_STATS","clearSession","undefined","resetCourses","RESET"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iBAAxB;AAEA;;;;;;;AAMA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,MAA7B,EAAqC;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,UADb;AAELH,IAAAA,QAFK;AAGLI,IAAAA,OAAO,EAAEH;AAHJ,GAAP;AAKD;AAED;;;;;;;AAMA,OAAO,SAASI,UAAT,CAAoBL,QAApB,EAA8BM,OAA9B,EAAuC;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAEJ,WAAW,CAACS,WADb;AAELP,IAAAA,QAFK;AAGLI,IAAAA,OAAO,EAAEE;AAHJ,GAAP;AAKD;AAED;;;;;;;AAMA,OAAO,SAASE,cAAT,CAAwBR,QAAxB,EAAkCS,WAAlC,EAA+C;AACpD,SAAO;AACLP,IAAAA,IAAI,EAAEJ,WAAW,CAACY,eADb;AAELV,IAAAA,QAFK;AAGLI,IAAAA,OAAO,EAAEK;AAHJ,GAAP;AAKD;AAED;;;;;;;AAMA,OAAO,SAASE,mBAAT,CAA6BX,QAA7B,EAAuCY,UAAvC,EAAmD;AACxD,SAAO;AACLV,IAAAA,IAAI,EAAEJ,WAAW,CAACe,qBADb;AAELb,IAAAA,QAFK;AAGLI,IAAAA,OAAO,EAAEQ;AAHJ,GAAP;AAKD;AAED;;;;;;;AAMA,OAAO,SAASE,YAAT,CAAsBd,QAAtB,EAAgCe,SAAhC,EAA2C;AAChD,SAAO;AACLb,IAAAA,IAAI,EAAEJ,WAAW,CAACkB,aADb;AAELhB,IAAAA,QAFK;AAGLI,IAAAA,OAAO,EAAEW;AAHJ,GAAP;AAKD;AAED;;;;;;;AAMA,OAAO,SAASE,iBAAT,CAA2BjB,QAA3B,EAAqCkB,QAArC,EAA+C;AACpD,SAAO;AACLhB,IAAAA,IAAI,EAAEJ,WAAW,CAACqB,mBADb;AAELnB,IAAAA,QAFK;AAGLI,IAAAA,OAAO,EAAEc;AAHJ,GAAP;AAKD;AAED;;;;;;;AAMA,OAAO,SAASE,QAAT,CAAkBpB,QAAlB,EAA4BqB,KAA5B,EAAmC;AACxC,SAAO;AACLnB,IAAAA,IAAI,EAAEJ,WAAW,CAACwB,SADb;AAELtB,IAAAA,QAFK;AAGLI,IAAAA,OAAO,EAAEiB;AAHJ,GAAP;AAKD;AAED;;;;;;AAKA,OAAO,SAASE,YAAT,CAAsBvB,QAAtB,EAAgC;AACrC,SAAO;AACLE,IAAAA,IAAI,EAAEJ,WAAW,CAACS,WADb;AAELP,IAAAA,QAFK;AAGLI,IAAAA,OAAO,EAAEoB;AAHJ,GAAP;AAKD;AAED;;;;;AAIA,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO;AACLvB,IAAAA,IAAI,EAAEJ,WAAW,CAAC4B;AADb,GAAP;AAGD","sourcesContent":["import actionTypes from \"../actionsTypes\";\n\n/**\n * Create a dispatch to set course details in redux\n * @param {String} courseID\n * @param {Object} course\n * @returns {Object} function to dispatch\n */\nexport function setCourse(courseID, course) {\n  return {\n    type: actionTypes.SET_COURSE,\n    courseID,\n    payload: course,\n  };\n}\n\n/**\n * Create a dispatch to set a session for a given course in redux\n * @param {String} courseID\n * @param {Object} session\n * @returns {Object} function to dispatch\n */\nexport function setSession(courseID, session) {\n  return {\n    type: actionTypes.SET_SESSION,\n    courseID,\n    payload: session,\n  };\n}\n\n/**\n * Create a dispatch to set discussions for a given course in redux\n * @param {String} courseID\n * @param {Array} discussions\n * @returns {Object} function to dispatch\n */\nexport function setDiscussions(courseID, discussions) {\n  return {\n    type: actionTypes.SET_DISCUSSIONS,\n    courseID,\n    payload: discussions,\n  };\n}\n\n/**\n * Create a dispatch to set a discussions for a given course in redux\n * @param {String} courseID\n * @param {Object} discussion\n * @returns {Object} function to dispatch\n */\nexport function setActiveDiscussion(courseID, discussion) {\n  return {\n    type: actionTypes.SET_ACTIVE_DISCUSSION,\n    courseID,\n    payload: discussion,\n  };\n}\n\n/**\n * Create a dispatch to set questions for a given course in redux\n * @param {String} courseID\n * @param {Array} questions\n * @returns {Object} function to dispatch\n */\nexport function setQuestions(courseID, questions) {\n  return {\n    type: actionTypes.SET_QUESTIONS,\n    courseID,\n    payload: questions,\n  };\n}\n\n/**\n * Create a dispatch to set an active question for a given course in redux\n * @param {String} courseID\n * @param {Object} question\n * @returns {Object} function to dispatch\n */\nexport function setActiveQuestion(courseID, question) {\n  return {\n    type: actionTypes.SET_ACTIVE_QUESTION,\n    courseID,\n    payload: question,\n  };\n}\n\n/**\n * Create a dispatch to setup statistics for a given course in redux\n * @param {String} courseID\n * @param {Object} stats\n * @returns {Object} function to dispatch\n */\nexport function setStats(courseID, stats) {\n  return {\n    type: actionTypes.SET_STATS,\n    courseID,\n    payload: stats,\n  };\n}\n\n/**\n * Create a dispatch to setup statistics for a given course in redux\n * @param {String} courseID\n * @returns {Object} function to dispatch\n */\nexport function clearSession(courseID) {\n  return {\n    type: actionTypes.SET_SESSION,\n    courseID,\n    payload: undefined,\n  };\n}\n\n/**\n * Reset the courses state in redux\n * @returns {Object} to dispatch to redux\n */\nexport function resetCourses() {\n  return {\n    type: actionTypes.RESET,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}