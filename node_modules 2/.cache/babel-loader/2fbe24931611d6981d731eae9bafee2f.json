{"ast":null,"code":"import TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nTimeAgo.addLocale(en);\nconst timeAgo = new TimeAgo(\"en-US\");\n\nfunction convertTimeAgo(date) {\n  if (!date) {\n    return date;\n  }\n\n  const currentTime = new Date();\n\n  if (date > currentTime) {\n    return timeAgo.format(currentTime);\n  }\n\n  return timeAgo.format(date);\n} //Convert from UTC to ms int\n\n\nfunction convertUTC(date) {\n  return new Date(date).getTime();\n} //Convert from UTC to AM/PM hour min time\n\n\nfunction convertCreatedAt(date) {\n  const time = date.toLocaleString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true\n  });\n  return time;\n} // Convert string to enUS time if a UTC date otherwise return original date\n\n\nfunction convertTimeString(date) {\n  if (!Date.parse(date)) {\n    return date;\n  }\n\n  const time = new Date(date);\n  return convertCreatedAt(time);\n} // Convert string to enUS time if a UTC date otherwise return original date\n\n\nfunction convertTimeAgoString(date) {\n  if (!Date.parse(date)) {\n    return date;\n  }\n\n  const time = new Date(date);\n  return convertTimeAgo(time);\n} // Convert string to enUS time if a UTC date otherwise return original date\n\n\nfunction convertDateString(date) {\n  if (!Date.parse(date)) {\n    return date;\n  }\n\n  const time = new Date(date);\n  return `${time.getMonth()}/${time.getDate()}/${time.getFullYear()}`;\n}\n\nexport default {\n  convertCreatedAt,\n  convertDateString,\n  convertTimeAgoString,\n  convertTimeString,\n  convertTimeAgo,\n  convertUTC\n};","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/util/time.js"],"names":["TimeAgo","en","addLocale","timeAgo","convertTimeAgo","date","currentTime","Date","format","convertUTC","getTime","convertCreatedAt","time","toLocaleString","hour","minute","hour12","convertTimeString","parse","convertTimeAgoString","convertDateString","getMonth","getDate","getFullYear"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,EAAP,MAAe,+BAAf;AACAD,OAAO,CAACE,SAAR,CAAkBD,EAAlB;AACA,MAAME,OAAO,GAAG,IAAIH,OAAJ,CAAY,OAAZ,CAAhB;;AAEA,SAASI,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAI,CAACA,IAAL,EAAW;AACT,WAAOA,IAAP;AACD;;AAED,QAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;;AACA,MAAIF,IAAI,GAAGC,WAAX,EAAwB;AACtB,WAAOH,OAAO,CAACK,MAAR,CAAeF,WAAf,CAAP;AACD;;AACD,SAAOH,OAAO,CAACK,MAAR,CAAeH,IAAf,CAAP;AACD,C,CAED;;;AACA,SAASI,UAAT,CAAoBJ,IAApB,EAA0B;AACxB,SAAO,IAAIE,IAAJ,CAASF,IAAT,EAAeK,OAAf,EAAP;AACD,C,CAED;;;AACA,SAASC,gBAAT,CAA0BN,IAA1B,EAAgC;AAC9B,QAAMO,IAAI,GAAGP,IAAI,CAACQ,cAAL,CAAoB,OAApB,EAA6B;AACxCC,IAAAA,IAAI,EAAE,SADkC;AAExCC,IAAAA,MAAM,EAAE,SAFgC;AAGxCC,IAAAA,MAAM,EAAE;AAHgC,GAA7B,CAAb;AAKA,SAAOJ,IAAP;AACD,C,CAED;;;AACA,SAASK,iBAAT,CAA2BZ,IAA3B,EAAiC;AAC/B,MAAI,CAACE,IAAI,CAACW,KAAL,CAAWb,IAAX,CAAL,EAAuB;AACrB,WAAOA,IAAP;AACD;;AACD,QAAMO,IAAI,GAAG,IAAIL,IAAJ,CAASF,IAAT,CAAb;AACA,SAAOM,gBAAgB,CAACC,IAAD,CAAvB;AACD,C,CAED;;;AACA,SAASO,oBAAT,CAA8Bd,IAA9B,EAAoC;AAClC,MAAI,CAACE,IAAI,CAACW,KAAL,CAAWb,IAAX,CAAL,EAAuB;AACrB,WAAOA,IAAP;AACD;;AACD,QAAMO,IAAI,GAAG,IAAIL,IAAJ,CAASF,IAAT,CAAb;AACA,SAAOD,cAAc,CAACQ,IAAD,CAArB;AACD,C,CAED;;;AACA,SAASQ,iBAAT,CAA2Bf,IAA3B,EAAiC;AAC/B,MAAI,CAACE,IAAI,CAACW,KAAL,CAAWb,IAAX,CAAL,EAAuB;AACrB,WAAOA,IAAP;AACD;;AACD,QAAMO,IAAI,GAAG,IAAIL,IAAJ,CAASF,IAAT,CAAb;AACA,SAAQ,GAAEO,IAAI,CAACS,QAAL,EAAgB,IAAGT,IAAI,CAACU,OAAL,EAAe,IAAGV,IAAI,CAACW,WAAL,EAAmB,EAAlE;AACD;;AAED,eAAe;AACbZ,EAAAA,gBADa;AAEbS,EAAAA,iBAFa;AAGbD,EAAAA,oBAHa;AAIbF,EAAAA,iBAJa;AAKbb,EAAAA,cALa;AAMbK,EAAAA;AANa,CAAf","sourcesContent":["import TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nTimeAgo.addLocale(en);\nconst timeAgo = new TimeAgo(\"en-US\");\n\nfunction convertTimeAgo(date) {\n  if (!date) {\n    return date;\n  }\n\n  const currentTime = new Date();\n  if (date > currentTime) {\n    return timeAgo.format(currentTime);\n  }\n  return timeAgo.format(date);\n}\n\n//Convert from UTC to ms int\nfunction convertUTC(date) {\n  return new Date(date).getTime();\n}\n\n//Convert from UTC to AM/PM hour min time\nfunction convertCreatedAt(date) {\n  const time = date.toLocaleString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true,\n  });\n  return time;\n}\n\n// Convert string to enUS time if a UTC date otherwise return original date\nfunction convertTimeString(date) {\n  if (!Date.parse(date)) {\n    return date;\n  }\n  const time = new Date(date);\n  return convertCreatedAt(time);\n}\n\n// Convert string to enUS time if a UTC date otherwise return original date\nfunction convertTimeAgoString(date) {\n  if (!Date.parse(date)) {\n    return date;\n  }\n  const time = new Date(date);\n  return convertTimeAgo(time);\n}\n\n// Convert string to enUS time if a UTC date otherwise return original date\nfunction convertDateString(date) {\n  if (!Date.parse(date)) {\n    return date;\n  }\n  const time = new Date(date);\n  return `${time.getMonth()}/${time.getDate()}/${time.getFullYear()}`;\n}\n\nexport default {\n  convertCreatedAt,\n  convertDateString,\n  convertTimeAgoString,\n  convertTimeString,\n  convertTimeAgo,\n  convertUTC,\n};\n"]},"metadata":{},"sourceType":"module"}