{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/layout/navbar/AvatarDropdown.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Space, Dropdown, Avatar } from \"antd\";\nimport ProfileDropdown from \"./ProfileDropdown\";\nimport { DefaultProfile } from \"../../../static/Images\";\nimport \"./NavBar.css\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\n/**\n * @jaidharosenblatt @kadenrosenblatt Display an avatar\n * and name (optional) with a dropdown for user settings\n *\n * For some reason ant design makes you choose between toggling visibility on click\n * inside menu and outside menu so I used a solution from SO to track clicks outside\n * https://stackoverflow.com/questions/54391682/detect-click-outside-component-react-hooks\n * @param showName whether or not to show the users name\n * @param {User} user\n */\n\nconst AvatarDropdown = ({\n  showName,\n  user\n}) => {\n  var _user$name;\n\n  const [visible, setVisible] = useState(false);\n  const wrapperRef = useRef(null);\n  const firstName = (_user$name = user.name) === null || _user$name === void 0 ? void 0 : _user$name.split(\" \")[0]; //Hide dropdown on scroll\n\n  window.onscroll = () => {\n    setVisible(false);\n  }; // Track clicks\n\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleClickOutside = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      setVisible(false);\n    }\n  };\n\n  const hide = () => setVisible(!visible);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-dropdown\",\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    visible: visible,\n    overlay: /*#__PURE__*/React.createElement(ProfileDropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    href: \"https://airtable.com/shrXsmGLQq88F3tzT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Need Help?\"), showName && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#595959\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, firstName)), /*#__PURE__*/React.createElement(Avatar, {\n    onClick: hide,\n    src: user.avatar || DefaultProfile,\n    alt: \"profile pic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = (state, prevProps) => {\n  return { ...prevProps,\n    user: selectors.getUser(state)\n  };\n};\n\nexport default connect(mapStateToProps)(AvatarDropdown);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/layout/navbar/AvatarDropdown.js"],"names":["React","useState","useRef","useEffect","Space","Dropdown","Avatar","ProfileDropdown","DefaultProfile","connect","selectors","AvatarDropdown","showName","user","visible","setVisible","wrapperRef","firstName","name","split","window","onscroll","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","hide","cursor","color","avatar","mapStateToProps","state","prevProps","getUser"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Space, Dropdown, Avatar } from \"antd\";\n\nimport ProfileDropdown from \"./ProfileDropdown\";\nimport { DefaultProfile } from \"../../../static/Images\";\nimport \"./NavBar.css\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\n/**\n * @jaidharosenblatt @kadenrosenblatt Display an avatar\n * and name (optional) with a dropdown for user settings\n *\n * For some reason ant design makes you choose between toggling visibility on click\n * inside menu and outside menu so I used a solution from SO to track clicks outside\n * https://stackoverflow.com/questions/54391682/detect-click-outside-component-react-hooks\n * @param showName whether or not to show the users name\n * @param {User} user\n */\nconst AvatarDropdown = ({ showName, user }) => {\n  const [visible, setVisible] = useState(false);\n  const wrapperRef = useRef(null);\n  const firstName = user.name?.split(\" \")[0];\n\n  //Hide dropdown on scroll\n  window.onscroll = () => {\n    setVisible(false);\n  };\n\n  // Track clicks\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      setVisible(false);\n    }\n  };\n\n  const hide = () => setVisible(!visible);\n\n  return (\n    <div className=\"avatar-dropdown\" ref={wrapperRef}>\n      <Dropdown visible={visible} overlay={<ProfileDropdown />}>\n        <Space style={{ cursor: \"pointer\" }}>\n          <a\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            href=\"https://airtable.com/shrXsmGLQq88F3tzT\"\n          >\n            Need Help?\n          </a>\n          {showName && (\n            <div onClick={hide}>\n              <p style={{ color: \"#595959\" }}>{firstName}</p>\n            </div>\n          )}\n          <Avatar\n            onClick={hide}\n            src={user.avatar || DefaultProfile}\n            alt=\"profile pic\"\n          />\n        </Space>\n      </Dropdown>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, prevProps) => {\n  return {\n    ...prevProps,\n    user: selectors.getUser(state),\n  };\n};\n\nexport default connect(mapStateToProps)(AvatarDropdown);\n"]},"metadata":{},"sourceType":"module"}