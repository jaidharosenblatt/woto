{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/user/forgotpassword/NewPasswordForm.js\";\nimport React, { useState } from \"react\";\nimport { Space, Form, Button } from \"antd\";\nimport PasswordWithConfirm from \"../../form/PasswordWithConfirm\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../../api/API\"; // Update message and use trello pattern\n\nconst NewPasswordForm = () => {\n  const [status, setStatus] = useState();\n  const path = window.location.pathname; //url of the current page\n\n  const split = path.split(\"/\"); //this creates an array with key ([0] element) and value ([1] element)\n\n  const userType = split[2];\n  const key = split[3].split(\"=\")[1];\n  console.log(key); //Send post request to login based on userType\n\n  const onFinish = async values => {\n    try {\n      await API.resetPassword({\n        token: key,\n        newPassword: values.password\n      }, userType);\n      setStatus(\"success\");\n    } catch (e) {\n      setStatus(\"error\");\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    name: \"forgot\",\n    layout: \"vertical\",\n    hideRequiredMark: true,\n    initialValues: {\n      userType: \"student\"\n    },\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    size: 16,\n    style: {\n      width: \"100%\"\n    },\n    align: \"center\",\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, !status && \"Please enter a new password\", status === \"success\" && \"Password successfully changed\", status === \"error\" && \"Unable to update password. Please try again\"))), !status && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PasswordWithConfirm, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    block: true,\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Reset Password\"))), status === \"success\" && /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Sign in\")), status === \"error\" && /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Reset Password\"))));\n};\n\nexport default NewPasswordForm;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/user/forgotpassword/NewPasswordForm.js"],"names":["React","useState","Space","Form","Button","PasswordWithConfirm","Link","API","NewPasswordForm","status","setStatus","path","window","location","pathname","split","userType","key","console","log","onFinish","values","resetPassword","token","newPassword","password","e","width","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CAEA;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AAEA,QAAMU,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA7B,CAH4B,CAGW;;AACvC,QAAMC,KAAK,GAAGJ,IAAI,CAACI,KAAL,CAAW,GAAX,CAAd,CAJ4B,CAIG;;AAC/B,QAAMC,QAAQ,GAAGD,KAAK,CAAC,CAAD,CAAtB;AACA,QAAME,GAAG,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAZ;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAR4B,CAU5B;;AACA,QAAMG,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACjC,QAAI;AACF,YAAMd,GAAG,CAACe,aAAJ,CACJ;AACEC,QAAAA,KAAK,EAAEN,GADT;AAEEO,QAAAA,WAAW,EAAEH,MAAM,CAACI;AAFtB,OADI,EAKJT,QALI,CAAN;AAOAN,MAAAA,SAAS,CAAC,SAAD,CAAT;AACD,KATD,CASE,OAAOgB,CAAP,EAAU;AACVhB,MAAAA,SAAS,CAAC,OAAD,CAAT;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACD;AACF,GAdD;;AAgBA,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,MAAM,EAAC,UAFT;AAGE,IAAA,gBAAgB,MAHlB;AAIE,IAAA,aAAa,EAAE;AAAEV,MAAAA,QAAQ,EAAE;AAAZ,KAJjB;AAKE,IAAA,QAAQ,EAAEI,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,SAAS,EAAC,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAClB,MAAD,IAAW,6BADd,EAEGA,MAAM,KAAK,SAAX,IAAwB,+BAF3B,EAGGA,MAAM,KAAK,OAAX,IACC,6CAJJ,CAPF,CADF,CAPF,EAwBG,CAACA,MAAD,iBACC,uDACE,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEmB,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,MAA5B;AAA6B,IAAA,QAAQ,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAFF,CAzBJ,EAkCGnB,MAAM,KAAK,SAAX,iBACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAnCJ,EAyCGA,MAAM,KAAK,OAAX,iBACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CA1CJ,CADF,CADF;AAqDD,CAhFD;;AAkFA,eAAeD,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Space, Form, Button } from \"antd\";\nimport PasswordWithConfirm from \"../../form/PasswordWithConfirm\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../../api/API\";\n\n// Update message and use trello pattern\nconst NewPasswordForm = () => {\n  const [status, setStatus] = useState();\n\n  const path = window.location.pathname; //url of the current page\n  const split = path.split(\"/\"); //this creates an array with key ([0] element) and value ([1] element)\n  const userType = split[2];\n  const key = split[3].split(\"=\")[1];\n\n  console.log(key);\n\n  //Send post request to login based on userType\n  const onFinish = async (values) => {\n    try {\n      await API.resetPassword(\n        {\n          token: key,\n          newPassword: values.password,\n        },\n        userType\n      );\n      setStatus(\"success\");\n    } catch (e) {\n      setStatus(\"error\");\n      console.log(e);\n    }\n  };\n\n  return (\n    <Space direction=\"vertical\">\n      <Form\n        name=\"forgot\"\n        layout=\"vertical\"\n        hideRequiredMark\n        initialValues={{ userType: \"student\" }}\n        onFinish={onFinish}\n      >\n        <Form.Item>\n          <Space\n            size={16}\n            style={{ width: \"100%\" }}\n            align=\"center\"\n            direction=\"vertical\"\n          >\n            <h2>Reset Password</h2>\n            <p>\n              {!status && \"Please enter a new password\"}\n              {status === \"success\" && \"Password successfully changed\"}\n              {status === \"error\" &&\n                \"Unable to update password. Please try again\"}\n            </p>\n          </Space>\n        </Form.Item>\n\n        {!status && (\n          <>\n            <PasswordWithConfirm required />\n            <Form.Item style={{ margin: 0 }}>\n              <Button type=\"primary\" block htmlType=\"submit\">\n                Reset Password\n              </Button>\n            </Form.Item>\n          </>\n        )}\n        {status === \"success\" && (\n          <Link to=\"/signin\">\n            <Button type=\"primary\" block>\n              Sign in\n            </Button>\n          </Link>\n        )}\n        {status === \"error\" && (\n          <Link to=\"/forgot\">\n            <Button type=\"primary\" block>\n              Reset Password\n            </Button>\n          </Link>\n        )}\n      </Form>\n    </Space>\n  );\n};\n\nexport default NewPasswordForm;\n"]},"metadata":{},"sourceType":"module"}