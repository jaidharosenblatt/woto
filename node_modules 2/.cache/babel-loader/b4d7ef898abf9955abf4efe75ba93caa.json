{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/course/calendar/Schedule.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\nimport TitleHeader from \"../header/TitleHeader\";\nimport NavBarCentered from \"../../util-components/centeredpage/NavBarCentered\";\nimport ActiveSessionAlert from \"../announcement/ActiveSessionAlert\";\nimport EventCard from \"./EventCard\";\n/**\n * Schedule for displaying upcoming office hours\n * @param {Object} course active course from redux state\n */\n\nconst Schedule = props => {\n  const {\n    course\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBarCentered, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(EventCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    course: selectors.getCourse(state)\n  };\n};\n\nconst events = [{\n  startTime: \"3:30PM\",\n  endTime: \"4:30PM\",\n  dayOfWeek: \"Mondays\",\n  assistants: [\"Jaidha\"]\n}, {\n  startTime: \"5:00PM\",\n  endTime: \"6:30PM\",\n  dayOfWeek: \"Tuesdays\",\n  assistants: [\"Matthew\", \"Tommy\"]\n}, {\n  startTime: \"5:30PM\",\n  endTime: \"6:30PM\",\n  dayOfWeek: \"Wednesdays\",\n  assistants: [\"Jaidha\", \"Matthew\"]\n}, {\n  startTime: \"9:30PM\",\n  endTime: \"10:30PM\",\n  dayOfWeek: \"Thursdays\",\n  assistants: [\"Matthew\"]\n}, {\n  startTime: \"3:30PM\",\n  endTime: \"4:30PM\",\n  dayOfWeek: \"Fridays\",\n  assistants: [\"Jaidha\", \"Noah\"]\n}];\nexport default connect(mapStateToProps)(Schedule);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/course/calendar/Schedule.js"],"names":["React","connect","selectors","TitleHeader","NavBarCentered","ActiveSessionAlert","EventCard","Schedule","props","course","mapStateToProps","state","getCourse","events","startTime","endTime","dayOfWeek","assistants"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;;;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,eAYA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,CADF;AAiBD,CApBD;;AAsBA,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,MAAM,EAAEP,SAAS,CAACU,SAAV,CAAoBD,KAApB;AADH,GAAP;AAGD,CAJD;;AAMA,MAAME,MAAM,GAAG,CACb;AACEC,EAAAA,SAAS,EAAE,QADb;AAEEC,EAAAA,OAAO,EAAE,QAFX;AAGEC,EAAAA,SAAS,EAAE,SAHb;AAIEC,EAAAA,UAAU,EAAE,CAAC,QAAD;AAJd,CADa,EAOb;AACEH,EAAAA,SAAS,EAAE,QADb;AAEEC,EAAAA,OAAO,EAAE,QAFX;AAGEC,EAAAA,SAAS,EAAE,UAHb;AAIEC,EAAAA,UAAU,EAAE,CAAC,SAAD,EAAY,OAAZ;AAJd,CAPa,EAab;AACEH,EAAAA,SAAS,EAAE,QADb;AAEEC,EAAAA,OAAO,EAAE,QAFX;AAGEC,EAAAA,SAAS,EAAE,YAHb;AAIEC,EAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,SAAX;AAJd,CAba,EAmBb;AACEH,EAAAA,SAAS,EAAE,QADb;AAEEC,EAAAA,OAAO,EAAE,SAFX;AAGEC,EAAAA,SAAS,EAAE,WAHb;AAIEC,EAAAA,UAAU,EAAE,CAAC,SAAD;AAJd,CAnBa,EA0Bb;AACEH,EAAAA,SAAS,EAAE,QADb;AAEEC,EAAAA,OAAO,EAAE,QAFX;AAGEC,EAAAA,SAAS,EAAE,SAHb;AAIEC,EAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,MAAX;AAJd,CA1Ba,CAAf;AAkCA,eAAehB,OAAO,CAACS,eAAD,CAAP,CAAyBH,QAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\nimport TitleHeader from \"../header/TitleHeader\";\nimport NavBarCentered from \"../../util-components/centeredpage/NavBarCentered\";\nimport ActiveSessionAlert from \"../announcement/ActiveSessionAlert\";\nimport EventCard from \"./EventCard\";\n\n/**\n * Schedule for displaying upcoming office hours\n * @param {Object} course active course from redux state\n */\nconst Schedule = (props) => {\n  const { course } = props;\n\n  return (\n    <div>\n <NavBarCentered>\n      {/* <ActiveSessionAlert />\n      <TitleHeader\n        title={`${course.code}'s Schedule`}\n        details=\"View upcoming office hour sessions (currently static data)\"\n      />\n      {events.map((evt, i) => {\n        return <EventCard key={i} evt={evt} />;\n      })} */}\n      \n    </NavBarCentered>\n    <EventCard/>\n    </div>\n   \n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    course: selectors.getCourse(state),\n  };\n};\n\nconst events = [\n  {\n    startTime: \"3:30PM\",\n    endTime: \"4:30PM\",\n    dayOfWeek: \"Mondays\",\n    assistants: [\"Jaidha\"],\n  },\n  {\n    startTime: \"5:00PM\",\n    endTime: \"6:30PM\",\n    dayOfWeek: \"Tuesdays\",\n    assistants: [\"Matthew\", \"Tommy\"],\n  },\n  {\n    startTime: \"5:30PM\",\n    endTime: \"6:30PM\",\n    dayOfWeek: \"Wednesdays\",\n    assistants: [\"Jaidha\", \"Matthew\"],\n  },\n  {\n    startTime: \"9:30PM\",\n    endTime: \"10:30PM\",\n    dayOfWeek: \"Thursdays\",\n    assistants: [\"Matthew\"],\n  },\n\n  {\n    startTime: \"3:30PM\",\n    endTime: \"4:30PM\",\n    dayOfWeek: \"Fridays\",\n    assistants: [\"Jaidha\", \"Noah\"],\n  },\n];\n\nexport default connect(mapStateToProps)(Schedule);\n"]},"metadata":{},"sourceType":"module"}