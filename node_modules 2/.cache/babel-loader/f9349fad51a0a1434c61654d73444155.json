{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport MultipleSelector from './MultipleSelector';\nimport SingleSelector from './SingleSelector';\nimport useLock from '../hooks/useLock';\n\nvar Selector = function Selector(props, ref) {\n  var inputRef = React.useRef(null);\n  var compositionStatusRef = React.useRef(false);\n  var prefixCls = props.prefixCls,\n      multiple = props.multiple,\n      open = props.open,\n      mode = props.mode,\n      showSearch = props.showSearch,\n      onSearch = props.onSearch,\n      onToggleOpen = props.onToggleOpen,\n      onInputKeyDown = props.onInputKeyDown,\n      domRef = props.domRef; // ======================= Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  }); // ====================== Input ======================\n\n  var _useLock = useLock(0),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getInputMouseDown = _useLock2[0],\n      setInputMouseDown = _useLock2[1];\n\n  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n    var which = event.which;\n\n    if (which === KeyCode.UP || which === KeyCode.DOWN) {\n      event.preventDefault();\n    }\n\n    if (onInputKeyDown) {\n      onInputKeyDown(event);\n    }\n\n    if (![KeyCode.SHIFT, KeyCode.TAB, KeyCode.BACKSPACE, KeyCode.ESC].includes(which)) {\n      onToggleOpen(true);\n    }\n  };\n  /**\n   * We can not use `findDOMNode` sine it will get warning,\n   * have to use timer to check if is input element.\n   */\n\n\n  var onInternalInputMouseDown = function onInternalInputMouseDown() {\n    setInputMouseDown(true);\n  }; // When paste come, ignore next onChange\n\n\n  var pasteClearRef = React.useRef(false);\n\n  var triggerOnSearch = function triggerOnSearch(value) {\n    if (onSearch(value, true, compositionStatusRef.current) !== false) {\n      onToggleOpen(true);\n    }\n  };\n\n  var onCompositionStart = function onCompositionStart() {\n    compositionStatusRef.current = true;\n  };\n\n  var onCompositionEnd = function onCompositionEnd() {\n    compositionStatusRef.current = false;\n  };\n\n  var onInputChange = function onInputChange(_ref) {\n    var value = _ref.target.value;\n\n    if (pasteClearRef.current) {\n      pasteClearRef.current = false;\n      return;\n    }\n\n    triggerOnSearch(value);\n  };\n\n  var onInputPaste = function onInputPaste(e) {\n    // github.com/ant-design/ant-design/issues/24461\n    if (e.target.value) {\n      return;\n    }\n\n    var clipboardData = e.clipboardData;\n    var value = clipboardData.getData('text'); // Block next onChange\n\n    pasteClearRef.current = true;\n    setTimeout(function () {\n      pasteClearRef.current = false;\n    });\n    triggerOnSearch(value);\n  }; // ====================== Focus ======================\n  // Should focus input if click the selector\n\n\n  var onClick = function onClick(_ref2) {\n    var target = _ref2.target;\n\n    if (target !== inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    var inputMouseDown = getInputMouseDown();\n\n    if (event.target !== inputRef.current && !inputMouseDown) {\n      event.preventDefault();\n    }\n\n    if (mode !== 'combobox' && (!showSearch || !inputMouseDown) || !open) {\n      if (open) {\n        onSearch('', true, false);\n      }\n\n      onToggleOpen();\n    }\n  }; // ================= Inner Selector ==================\n\n\n  var sharedProps = {\n    inputRef: inputRef,\n    onInputKeyDown: onInternalInputKeyDown,\n    onInputMouseDown: onInternalInputMouseDown,\n    onInputChange: onInputChange,\n    onInputPaste: onInputPaste,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd\n  };\n  var selectNode = multiple ? React.createElement(MultipleSelector, Object.assign({}, props, sharedProps)) : React.createElement(SingleSelector, Object.assign({}, props, sharedProps));\n  return React.createElement(\"div\", {\n    ref: domRef,\n    className: \"\".concat(prefixCls, \"-selector\"),\n    onClick: onClick,\n    onMouseDown: onMouseDown\n  }, selectNode);\n};\n\nvar ForwardSelector = React.forwardRef(Selector);\nForwardSelector.displayName = 'Selector';\nexport default ForwardSelector;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/node_modules/rc-select/es/Selector/index.js"],"names":["_slicedToArray","React","KeyCode","MultipleSelector","SingleSelector","useLock","Selector","props","ref","inputRef","useRef","compositionStatusRef","prefixCls","multiple","open","mode","showSearch","onSearch","onToggleOpen","onInputKeyDown","domRef","useImperativeHandle","focus","current","blur","_useLock","_useLock2","getInputMouseDown","setInputMouseDown","onInternalInputKeyDown","event","which","UP","DOWN","preventDefault","SHIFT","TAB","BACKSPACE","ESC","includes","onInternalInputMouseDown","pasteClearRef","triggerOnSearch","value","onCompositionStart","onCompositionEnd","onInputChange","_ref","target","onInputPaste","e","clipboardData","getData","setTimeout","onClick","_ref2","onMouseDown","inputMouseDown","sharedProps","onInputMouseDown","selectNode","createElement","Object","assign","className","concat","ForwardSelector","forwardRef","displayName"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport MultipleSelector from './MultipleSelector';\nimport SingleSelector from './SingleSelector';\nimport useLock from '../hooks/useLock';\n\nvar Selector = function Selector(props, ref) {\n  var inputRef = React.useRef(null);\n  var compositionStatusRef = React.useRef(false);\n  var prefixCls = props.prefixCls,\n      multiple = props.multiple,\n      open = props.open,\n      mode = props.mode,\n      showSearch = props.showSearch,\n      onSearch = props.onSearch,\n      onToggleOpen = props.onToggleOpen,\n      onInputKeyDown = props.onInputKeyDown,\n      domRef = props.domRef; // ======================= Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  }); // ====================== Input ======================\n\n  var _useLock = useLock(0),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getInputMouseDown = _useLock2[0],\n      setInputMouseDown = _useLock2[1];\n\n  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n    var which = event.which;\n\n    if (which === KeyCode.UP || which === KeyCode.DOWN) {\n      event.preventDefault();\n    }\n\n    if (onInputKeyDown) {\n      onInputKeyDown(event);\n    }\n\n    if (![KeyCode.SHIFT, KeyCode.TAB, KeyCode.BACKSPACE, KeyCode.ESC].includes(which)) {\n      onToggleOpen(true);\n    }\n  };\n  /**\n   * We can not use `findDOMNode` sine it will get warning,\n   * have to use timer to check if is input element.\n   */\n\n\n  var onInternalInputMouseDown = function onInternalInputMouseDown() {\n    setInputMouseDown(true);\n  }; // When paste come, ignore next onChange\n\n\n  var pasteClearRef = React.useRef(false);\n\n  var triggerOnSearch = function triggerOnSearch(value) {\n    if (onSearch(value, true, compositionStatusRef.current) !== false) {\n      onToggleOpen(true);\n    }\n  };\n\n  var onCompositionStart = function onCompositionStart() {\n    compositionStatusRef.current = true;\n  };\n\n  var onCompositionEnd = function onCompositionEnd() {\n    compositionStatusRef.current = false;\n  };\n\n  var onInputChange = function onInputChange(_ref) {\n    var value = _ref.target.value;\n\n    if (pasteClearRef.current) {\n      pasteClearRef.current = false;\n      return;\n    }\n\n    triggerOnSearch(value);\n  };\n\n  var onInputPaste = function onInputPaste(e) {\n    // github.com/ant-design/ant-design/issues/24461\n    if (e.target.value) {\n      return;\n    }\n\n    var clipboardData = e.clipboardData;\n    var value = clipboardData.getData('text'); // Block next onChange\n\n    pasteClearRef.current = true;\n    setTimeout(function () {\n      pasteClearRef.current = false;\n    });\n    triggerOnSearch(value);\n  }; // ====================== Focus ======================\n  // Should focus input if click the selector\n\n\n  var onClick = function onClick(_ref2) {\n    var target = _ref2.target;\n\n    if (target !== inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    var inputMouseDown = getInputMouseDown();\n\n    if (event.target !== inputRef.current && !inputMouseDown) {\n      event.preventDefault();\n    }\n\n    if (mode !== 'combobox' && (!showSearch || !inputMouseDown) || !open) {\n      if (open) {\n        onSearch('', true, false);\n      }\n\n      onToggleOpen();\n    }\n  }; // ================= Inner Selector ==================\n\n\n  var sharedProps = {\n    inputRef: inputRef,\n    onInputKeyDown: onInternalInputKeyDown,\n    onInputMouseDown: onInternalInputMouseDown,\n    onInputChange: onInputChange,\n    onInputPaste: onInputPaste,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd\n  };\n  var selectNode = multiple ? React.createElement(MultipleSelector, Object.assign({}, props, sharedProps)) : React.createElement(SingleSelector, Object.assign({}, props, sharedProps));\n  return React.createElement(\"div\", {\n    ref: domRef,\n    className: \"\".concat(prefixCls, \"-selector\"),\n    onClick: onClick,\n    onMouseDown: onMouseDown\n  }, selectNode);\n};\n\nvar ForwardSelector = React.forwardRef(Selector);\nForwardSelector.displayName = 'Selector';\nexport default ForwardSelector;"]},"metadata":{},"sourceType":"module"}