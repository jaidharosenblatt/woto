{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/analytics/tables/admin-roster/RosterStudents.js\";\nimport React from \"react\";\nimport { Card, Row, Col, Table, Space, Button } from \"antd\";\nimport ExportCSVButton from \"../../../modals/buttons/ExportCSV\";\nimport AddStudentsButton from \"../../../modals/buttons/AddStudentsButton\";\nimport { createRosterColumns } from \"./createRosterColumns\";\nimport API from \"../../../../api/API\";\nimport EmptyState from \"./emptyState\";\nimport LeftRightRow from \"../../../util-components/leftrightrow/LeftRightRow\"; //Set up card with header, table, and export csv file\n\nclass RosterStudents extends React.Component {\n  constructor(props) {\n    console.log(props);\n    super(props);\n\n    this.captureRowSelection = async () => {\n      var _this$state$selectedR;\n\n      console.log(this.state.selectedRowsState);\n      const newStaffers = (_this$state$selectedR = this.state.selectedRowsState) === null || _this$state$selectedR === void 0 ? void 0 : _this$state$selectedR.map(row => row._id);\n\n      try {\n        for (const staffer of newStaffers) {\n          console.log(staffer);\n          const res = await API.promoteAssistant(this.props.course._id, staffer);\n          console.log(res);\n        }\n\n        this.props.loadData();\n      } catch (error) {\n        console.error(error);\n      }\n\n      console.log(newStaffers);\n    };\n\n    this.handleRowSelectionButton = enable => {\n      console.log(enable.currentTarget.value);\n      console.log(this.state.rowSelection);\n\n      if (this.state.buttonClick) {\n        this.setState({\n          rowSelection: this.rowSelection\n        });\n        this.setState({\n          buttonClick: false\n        });\n      } else {\n        this.setState({\n          rowSelection: undefined\n        });\n        this.setState({\n          buttonClick: true\n        });\n      } //this.setState({ rowSelection: enable.currentTarget.value ? {} : undefined })\n\n    };\n\n    this.rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, \"selectedRows: \", selectedRows);\n        this.setState({\n          selectedRowsState: selectedRows\n        });\n      },\n      getCheckboxProps: record => ({\n        disabled: record.name === \"Disabled User\",\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n    this.state = {\n      dataSource: this.props.tableData,\n      rowSelection: undefined,\n      buttonClick: true,\n      selectedRowsState: null\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.tableData !== state.dataSource) {\n      return {\n        dataSource: props.tableData\n      };\n    }\n\n    return null;\n  }\n  /*\n  handleRowSelectionChange = (enable) => {\n    console.log(enable);\n    //  console.log(enable.currentTarget.value);\n    console.log(this.state.rowSelection);\n    this.setState({ rowSelection: enable ? {} : undefined });\n     // this.setState({ rowSelection: enable.currentTarget.value ? {} : undefined });\n  };\n  */\n\n\n  renderExtra() {\n    if (this.state.buttonClick === false) {\n      return /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.captureRowSelection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, \"Promote Selected TA's\");\n    }\n  }\n\n  renderContent() {\n    const {\n      dataSource\n    } = this.state;\n    const buttonText = {\n      true: \"Promote to TAs\",\n      false: \"Cancel\"\n    }; //const {tableData, columns} = this.props;s\n\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: /*#__PURE__*/React.createElement(LeftRightRow, {\n        left: /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }, \"Students\"),\n        right: /*#__PURE__*/React.createElement(Space, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(AddStudentsButton, {\n          course_id: this.props.course._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }\n        }), dataSource.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          value: this.state.buttonClick,\n          onClick: this.handleRowSelectionButton,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 23\n          }\n        }, buttonText[this.state.buttonClick]), this.renderExtra(), /*#__PURE__*/React.createElement(ExportCSVButton, {\n          title: \"Export to CSV\",\n          data: this.props.tableData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, dataSource.length > 0 || this.props.loading ? /*#__PURE__*/React.createElement(Table, Object.assign({}, this.state, {\n      loading: this.props.loading,\n      style: {\n        height: \"300px\"\n      },\n      columns: createRosterColumns(this.props.handleDelete),\n      dataSource: dataSource,\n      pagination: {\n        pageSize: 10\n      },\n      scroll: {\n        x: 650\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(EmptyState, {\n      type: \"student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 12\n      }\n    }, this.renderContent());\n  }\n\n}\n\nexport default RosterStudents;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/analytics/tables/admin-roster/RosterStudents.js"],"names":["React","Card","Row","Col","Table","Space","Button","ExportCSVButton","AddStudentsButton","createRosterColumns","API","EmptyState","LeftRightRow","RosterStudents","Component","constructor","props","console","log","captureRowSelection","state","selectedRowsState","newStaffers","map","row","_id","staffer","res","promoteAssistant","course","loadData","error","handleRowSelectionButton","enable","currentTarget","value","rowSelection","buttonClick","setState","undefined","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","name","dataSource","tableData","getDerivedStateFromProps","renderExtra","renderContent","buttonText","true","false","length","loading","height","handleDelete","pageSize","x","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Row, Col, Table, Space, Button } from \"antd\";\nimport ExportCSVButton from \"../../../modals/buttons/ExportCSV\";\nimport AddStudentsButton from \"../../../modals/buttons/AddStudentsButton\";\nimport { createRosterColumns } from \"./createRosterColumns\";\nimport API from \"../../../../api/API\";\nimport EmptyState from \"./emptyState\";\nimport LeftRightRow from \"../../../util-components/leftrightrow/LeftRightRow\";\n//Set up card with header, table, and export csv file\n\nclass RosterStudents extends React.Component {\n  constructor(props) {\n    console.log(props);\n    super(props);\n\n    this.rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        console.log(\n          `selectedRowKeys: ${selectedRowKeys}`,\n          \"selectedRows: \",\n          selectedRows\n        );\n        this.setState({ selectedRowsState: selectedRows });\n      },\n      getCheckboxProps: (record) => ({\n        disabled: record.name === \"Disabled User\",\n        // Column configuration not to be checked\n        name: record.name,\n      }),\n    };\n\n    this.state = {\n      dataSource: this.props.tableData,\n      rowSelection: undefined,\n      buttonClick: true,\n      selectedRowsState: null,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.tableData !== state.dataSource) {\n      return {\n        dataSource: props.tableData,\n      };\n    }\n    return null;\n  }\n  /*\n  handleRowSelectionChange = (enable) => {\n    console.log(enable);\n    //  console.log(enable.currentTarget.value);\n    console.log(this.state.rowSelection);\n    this.setState({ rowSelection: enable ? {} : undefined });\n\n    // this.setState({ rowSelection: enable.currentTarget.value ? {} : undefined });\n  };\n  */\n  captureRowSelection = async () => {\n    console.log(this.state.selectedRowsState);\n    const newStaffers = this.state.selectedRowsState?.map((row) => row._id);\n    try {\n      for (const staffer of newStaffers) {\n        console.log(staffer);\n        const res = await API.promoteAssistant(this.props.course._id, staffer);\n        console.log(res);\n      }\n      this.props.loadData();\n    } catch (error) {\n      console.error(error);\n    }\n    console.log(newStaffers);\n  };\n\n  handleRowSelectionButton = (enable) => {\n    console.log(enable.currentTarget.value);\n    console.log(this.state.rowSelection);\n    if (this.state.buttonClick) {\n      this.setState({ rowSelection: this.rowSelection });\n      this.setState({ buttonClick: false });\n    } else {\n      this.setState({ rowSelection: undefined });\n      this.setState({ buttonClick: true });\n    }\n    //this.setState({ rowSelection: enable.currentTarget.value ? {} : undefined })\n  };\n\n  renderExtra() {\n    if (this.state.buttonClick === false) {\n      return (\n        <Button type=\"primary\" onClick={this.captureRowSelection}>\n          Promote Selected TA's\n        </Button>\n      );\n    }\n  }\n  renderContent() {\n    const { dataSource } = this.state;\n    const buttonText = { true: \"Promote to TAs\", false: \"Cancel\" };\n\n    //const {tableData, columns} = this.props;s\n    return (\n      <Col span={24}>\n        <Card\n          title={\n            <LeftRightRow\n              left={<h2>Students</h2>}\n              right={\n                <Space>\n                  <AddStudentsButton course_id={this.props.course._id} />\n                  {dataSource.length > 0 && (\n                    <>\n                      <Button\n                        value={this.state.buttonClick}\n                        onClick={this.handleRowSelectionButton}\n                      >\n                        {buttonText[this.state.buttonClick]}\n                      </Button>\n                      {this.renderExtra()}\n                      <ExportCSVButton\n                        title=\"Export to CSV\"\n                        data={this.props.tableData}\n                      />\n                    </>\n                  )}\n                </Space>\n              }\n            />\n          }\n        >\n          <Row>\n            <Col span={24}>\n              {dataSource.length > 0 || this.props.loading ? (\n                <Table\n                  {...this.state}\n                  loading={this.props.loading}\n                  style={{ height: \"300px\" }}\n                  columns={createRosterColumns(this.props.handleDelete)}\n                  dataSource={dataSource}\n                  pagination={{ pageSize: 10 }}\n                  scroll={{ x: 650 }}\n                />\n              ) : (\n                <EmptyState type=\"student\" />\n              )}\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    );\n  }\n  render() {\n    return <div className=\"table component\">{this.renderContent()}</div>;\n  }\n}\n\nexport default RosterStudents;\n"]},"metadata":{},"sourceType":"module"}