{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/ta/openjoin/TimeSelector.js\";\nimport React from \"react\";\nimport { Select, Form, Row, Col } from \"antd\";\nimport util from \"../../../util\";\nimport { ClockCircleOutlined } from \"@ant-design/icons\";\nconst {\n  Option\n} = Select;\n/**\n * @MatthewSclar Component used for a time selector\n * Used on OpenSessionPage\n *This component displays two Select form items with names start and ends\n *that contain options from the nearest 15 minute interval time till\n *the end of the day with 15 minute interval step.\n *\n *Ex. If current time = 1:37 PM\n *Select will have options starting at 1:30, 1:45, 2:00, 2:15... until 11:45 PM\n */\n\nconst TimeSelector = ({\n  startTime,\n  endTime\n}) => {\n  var upcomingtimes = [];\n  const fifteenMins = 1000 * 60 * 15;\n  var date = startTime && new Date(startTime) || new Date(); //or use any other date\n\n  var rounded = new Date(Math.floor(date.getTime() / fifteenMins) * fifteenMins);\n\n  for (let i = 0; i < 40; i++) {\n    const time = new Date(rounded.getTime() + i * fifteenMins);\n    upcomingtimes[time] = util.convertCreatedAt(time);\n  } // Create an option if there is a prexisting endtime\n\n\n  const endTimeDate = endTime && new Date(endTime);\n  const endTimeOption = /*#__PURE__*/React.createElement(Option, {\n    key: endTimeDate,\n    value: endTimeDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, upcomingtimes[endTimeDate]);\n  var options = [];\n  Object.keys(upcomingtimes).forEach(time => {\n    options.push( /*#__PURE__*/React.createElement(Option, {\n      key: time,\n      value: time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, upcomingtimes[time]));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-textbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ClockCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: 4,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      width: \"150px\"\n    },\n    initialValue: options[0].key,\n    name: \"startTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100%\"\n    },\n    showSearch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, options))), /*#__PURE__*/React.createElement(Col, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 20,\n      color: \"#D9D9D9\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"-\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      width: \"150px\"\n    },\n    initialValue: endTime ? endTimeOption.key : options[4].key,\n    name: \"endTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100%\"\n    },\n    showSearch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, options)))));\n};\n\nexport default TimeSelector;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/ta/openjoin/TimeSelector.js"],"names":["React","Select","Form","Row","Col","util","ClockCircleOutlined","Option","TimeSelector","startTime","endTime","upcomingtimes","fifteenMins","date","Date","rounded","Math","floor","getTime","i","time","convertCreatedAt","endTimeDate","endTimeOption","options","Object","keys","forEach","push","width","key","fontSize","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Select, Form, Row, Col } from \"antd\";\nimport util from \"../../../util\";\nimport { ClockCircleOutlined } from \"@ant-design/icons\";\nconst { Option } = Select;\n/**\n * @MatthewSclar Component used for a time selector\n * Used on OpenSessionPage\n *This component displays two Select form items with names start and ends\n *that contain options from the nearest 15 minute interval time till\n *the end of the day with 15 minute interval step.\n *\n *Ex. If current time = 1:37 PM\n *Select will have options starting at 1:30, 1:45, 2:00, 2:15... until 11:45 PM\n */\n\nconst TimeSelector = ({ startTime, endTime }) => {\n  var upcomingtimes = [];\n\n  const fifteenMins = 1000 * 60 * 15;\n  var date = (startTime && new Date(startTime)) || new Date(); //or use any other date\n\n  var rounded = new Date(\n    Math.floor(date.getTime() / fifteenMins) * fifteenMins\n  );\n\n  for (let i = 0; i < 40; i++) {\n    const time = new Date(rounded.getTime() + i * fifteenMins);\n    upcomingtimes[time] = util.convertCreatedAt(time);\n  }\n\n  // Create an option if there is a prexisting endtime\n  const endTimeDate = endTime && new Date(endTime);\n  const endTimeOption = (\n    <Option key={endTimeDate} value={endTimeDate}>\n      {upcomingtimes[endTimeDate]}\n    </Option>\n  );\n\n  var options = [];\n  Object.keys(upcomingtimes).forEach((time) => {\n    options.push(\n      <Option key={time} value={time}>\n        {upcomingtimes[time]}\n      </Option>\n    );\n  });\n\n  return (\n    <div className=\"icon-textbox\">\n      <ClockCircleOutlined />\n\n      <Row gutter={4} style={{ width: \"100%\" }}>\n        <Col>\n          <Form.Item\n            style={{ width: \"150px\" }}\n            initialValue={options[0].key}\n            name=\"startTime\"\n          >\n            <Select style={{ width: \"100%\" }} showSearch>\n              {options}\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col align=\"center\">\n          <p style={{ fontSize: 20, color: \"#D9D9D9\" }}>-</p>\n        </Col>\n\n        <Col>\n          <Form.Item\n            style={{ width: \"150px\" }}\n            initialValue={endTime ? endTimeOption.key : options[4].key}\n            name=\"endTime\"\n          >\n            <Select style={{ width: \"100%\" }} showSearch>\n              {options}\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default TimeSelector;\n"]},"metadata":{},"sourceType":"module"}