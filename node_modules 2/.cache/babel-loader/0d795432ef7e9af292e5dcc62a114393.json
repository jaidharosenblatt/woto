{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/ta/HelpStudents.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Space, Button } from \"antd\";\nimport SearchTable from \"../analytics/tables/questionTable/SearchTable\";\nimport { convertHelpData } from \"./util/convertHelpData\";\nimport TAInteractionInfo from \"../course/tainteraction/TAInteractionInfo\";\nimport LeftRightRow from \"../util-components/leftrightrow/LeftRightRow\";\nimport { connect } from \"react-redux\";\nimport { finishHelpingStudent } from \"../../redux/courses/actions/ta\";\nimport selectors from \"../../redux/selectors\";\nimport TitleStat from \"../analytics/sessions/TitleStat\";\nimport { SolutionOutlined } from \"@ant-design/icons\";\n\nconst HelpStudents = props => {\n  var _props$stats$helped;\n\n  const {\n    session,\n    questions,\n    course,\n    activeQuestion\n  } = props;\n  const [notHelpedData, setNotHelpedData] = useState([]);\n  const [helpedData, setHelpedData] = useState([]);\n  const [showAll, setShowAll] = useState(false);\n  useEffect(() => {\n    loadData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questions]);\n\n  const loadData = async () => {\n    const notHelped = questions === null || questions === void 0 ? void 0 : questions.filter(item => item.active && item.description);\n    setHelpedData(convertHelpData(props.stats.helped));\n    setNotHelpedData(convertHelpData(notHelped));\n  };\n\n  const endInteraction = async () => {\n    props.finishHelpingStudent();\n  };\n\n  return /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    style: {\n      width: \"100%\",\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, activeQuestion && /*#__PURE__*/React.createElement(TAInteractionInfo, {\n    course: course,\n    session: session,\n    question: activeQuestion,\n    endInteraction: endInteraction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LeftRightRow, {\n    left: /*#__PURE__*/React.createElement(TitleStat, {\n      icon: /*#__PURE__*/React.createElement(SolutionOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }),\n      title: \"Student Queue\",\n      color: \"#40A9FF\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }),\n    right: ((_props$stats$helped = props.stats.helped) === null || _props$stats$helped === void 0 ? void 0 : _props$stats$helped.length) > 0 && /*#__PURE__*/React.createElement(Button, {\n      onClick: () => setShowAll(!showAll),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, showAll ? \"Show Active Queue\" : \"Show Helped Students\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchTable, {\n    help: true,\n    data: showAll ? helpedData : notHelpedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    session: selectors.getSession(state),\n    course: selectors.getCourse(state),\n    stats: selectors.getStats(state),\n    activeQuestion: selectors.getActiveQuestion(state),\n    questions: selectors.getQuestions(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  finishHelpingStudent\n})(HelpStudents);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/ta/HelpStudents.js"],"names":["React","useState","useEffect","Space","Button","SearchTable","convertHelpData","TAInteractionInfo","LeftRightRow","connect","finishHelpingStudent","selectors","TitleStat","SolutionOutlined","HelpStudents","props","session","questions","course","activeQuestion","notHelpedData","setNotHelpedData","helpedData","setHelpedData","showAll","setShowAll","loadData","notHelped","filter","item","active","description","stats","helped","endInteraction","width","padding","length","mapStateToProps","state","getSession","getCourse","getStats","getActiveQuestion","getQuestions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Space, Button } from \"antd\";\nimport SearchTable from \"../analytics/tables/questionTable/SearchTable\";\nimport { convertHelpData } from \"./util/convertHelpData\";\nimport TAInteractionInfo from \"../course/tainteraction/TAInteractionInfo\";\nimport LeftRightRow from \"../util-components/leftrightrow/LeftRightRow\";\n\nimport { connect } from \"react-redux\";\nimport { finishHelpingStudent } from \"../../redux/courses/actions/ta\";\nimport selectors from \"../../redux/selectors\";\nimport TitleStat from \"../analytics/sessions/TitleStat\";\nimport { SolutionOutlined } from \"@ant-design/icons\";\n\nconst HelpStudents = (props) => {\n  const { session, questions, course, activeQuestion } = props;\n  const [notHelpedData, setNotHelpedData] = useState([]);\n  const [helpedData, setHelpedData] = useState([]);\n\n  const [showAll, setShowAll] = useState(false);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questions]);\n\n  const loadData = async () => {\n    const notHelped = questions?.filter(\n      (item) => item.active && item.description\n    );\n\n    setHelpedData(convertHelpData(props.stats.helped));\n    setNotHelpedData(convertHelpData(notHelped));\n  };\n\n  const endInteraction = async () => {\n    props.finishHelpingStudent();\n  };\n\n  return (\n    <Space direction=\"vertical\" style={{ width: \"100%\", padding: 8 }}>\n      {activeQuestion && (\n        <TAInteractionInfo\n          course={course}\n          session={session}\n          question={activeQuestion}\n          endInteraction={endInteraction}\n        />\n      )}\n      <LeftRightRow\n        left={\n          <TitleStat\n            icon={<SolutionOutlined />}\n            title=\"Student Queue\"\n            color=\"#40A9FF\"\n          />\n        }\n        right={\n          props.stats.helped?.length > 0 && (\n            <Button onClick={() => setShowAll(!showAll)}>\n              {showAll ? \"Show Active Queue\" : \"Show Helped Students\"}\n            </Button>\n          )\n        }\n      />\n      <SearchTable help data={showAll ? helpedData : notHelpedData} />\n    </Space>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    session: selectors.getSession(state),\n    course: selectors.getCourse(state),\n    stats: selectors.getStats(state),\n    activeQuestion: selectors.getActiveQuestion(state),\n    questions: selectors.getQuestions(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  finishHelpingStudent,\n})(HelpStudents);\n"]},"metadata":{},"sourceType":"module"}