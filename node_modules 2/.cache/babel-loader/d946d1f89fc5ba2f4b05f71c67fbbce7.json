{"ast":null,"code":"import client from \"../axiosConfig\";\nimport { setToken, setUserType } from \"../tokenService\";\n/**\n * Get the redirect url for Duke shibboleth for students\n * @returns {String} url\n */\n\nexport const getOauthRedirectUrlStudent = async () => {\n  const params = getDevParams();\n  let {\n    data\n  } = await client.get(\"/oauth/authorize/student\", {\n    params\n  });\n  return data;\n};\n/**\n * Get the redirect url for Duke shibboleth for instructors\n * @returns {String} url\n */\n\nexport const getOauthRedirectUrlInstructor = async () => {\n  const params = getDevParams();\n  let {\n    data\n  } = await client.get(\"/oauth/authorize/instructor\", {\n    params\n  });\n  return data;\n};\n/**\n * Login/signup a student\n * @param code from oauth callback\n * @returns {Student} student to login\n */\n\nexport const authenticateStudent = async code => {\n  const params = getDevParams();\n  let {\n    data\n  } = await client.post(\"/oauth/student\", {\n    code\n  }, {\n    params\n  });\n  setToken(data.token);\n  setUserType(\"student\");\n  return data.student;\n};\n/**\n * Login/signup a student\n * @param code from oauth callback\n * @returns {Instructor} instructor to login\n */\n\nexport const authenticateInstructor = async code => {\n  const params = getDevParams();\n  let {\n    data\n  } = await client.post(\"/oauth/instructor\", {\n    code\n  }, {\n    params\n  });\n  setToken(data.token);\n  setUserType(\"instructor\");\n  return data.instructor;\n};\n\nconst getDevParams = () => {\n  const dev = process.env.NODE_ENV === \"development\";\n  return {\n    dev\n  };\n};","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/api/endpoints/oauthEndpoints.js"],"names":["client","setToken","setUserType","getOauthRedirectUrlStudent","params","getDevParams","data","get","getOauthRedirectUrlInstructor","authenticateStudent","code","post","token","student","authenticateInstructor","instructor","dev","process","env","NODE_ENV"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,iBAAtC;AAEA;;;;;AAIA,OAAO,MAAMC,0BAA0B,GAAG,YAAY;AACpD,QAAMC,MAAM,GAAGC,YAAY,EAA3B;AACA,MAAI;AAAEC,IAAAA;AAAF,MAAW,MAAMN,MAAM,CAACO,GAAP,CAAW,0BAAX,EAAuC;AAAEH,IAAAA;AAAF,GAAvC,CAArB;AACA,SAAOE,IAAP;AACD,CAJM;AAMP;;;;;AAIA,OAAO,MAAME,6BAA6B,GAAG,YAAY;AACvD,QAAMJ,MAAM,GAAGC,YAAY,EAA3B;AACA,MAAI;AAAEC,IAAAA;AAAF,MAAW,MAAMN,MAAM,CAACO,GAAP,CAAW,6BAAX,EAA0C;AAAEH,IAAAA;AAAF,GAA1C,CAArB;AACA,SAAOE,IAAP;AACD,CAJM;AAMP;;;;;;AAKA,OAAO,MAAMG,mBAAmB,GAAG,MAAOC,IAAP,IAAgB;AACjD,QAAMN,MAAM,GAAGC,YAAY,EAA3B;AACA,MAAI;AAAEC,IAAAA;AAAF,MAAW,MAAMN,MAAM,CAACW,IAAP,CAAY,gBAAZ,EAA8B;AAAED,IAAAA;AAAF,GAA9B,EAAwC;AAAEN,IAAAA;AAAF,GAAxC,CAArB;AAEAH,EAAAA,QAAQ,CAACK,IAAI,CAACM,KAAN,CAAR;AACAV,EAAAA,WAAW,CAAC,SAAD,CAAX;AACA,SAAOI,IAAI,CAACO,OAAZ;AACD,CAPM;AASP;;;;;;AAKA,OAAO,MAAMC,sBAAsB,GAAG,MAAOJ,IAAP,IAAgB;AACpD,QAAMN,MAAM,GAAGC,YAAY,EAA3B;AACA,MAAI;AAAEC,IAAAA;AAAF,MAAW,MAAMN,MAAM,CAACW,IAAP,CAAY,mBAAZ,EAAiC;AAAED,IAAAA;AAAF,GAAjC,EAA2C;AAAEN,IAAAA;AAAF,GAA3C,CAArB;AAEAH,EAAAA,QAAQ,CAACK,IAAI,CAACM,KAAN,CAAR;AACAV,EAAAA,WAAW,CAAC,YAAD,CAAX;AACA,SAAOI,IAAI,CAACS,UAAZ;AACD,CAPM;;AASP,MAAMV,YAAY,GAAG,MAAM;AACzB,QAAMW,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAArC;AACA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACD,CAHD","sourcesContent":["import client from \"../axiosConfig\";\nimport { setToken, setUserType } from \"../tokenService\";\n\n/**\n * Get the redirect url for Duke shibboleth for students\n * @returns {String} url\n */\nexport const getOauthRedirectUrlStudent = async () => {\n  const params = getDevParams();\n  let { data } = await client.get(\"/oauth/authorize/student\", { params });\n  return data;\n};\n\n/**\n * Get the redirect url for Duke shibboleth for instructors\n * @returns {String} url\n */\nexport const getOauthRedirectUrlInstructor = async () => {\n  const params = getDevParams();\n  let { data } = await client.get(\"/oauth/authorize/instructor\", { params });\n  return data;\n};\n\n/**\n * Login/signup a student\n * @param code from oauth callback\n * @returns {Student} student to login\n */\nexport const authenticateStudent = async (code) => {\n  const params = getDevParams();\n  let { data } = await client.post(\"/oauth/student\", { code }, { params });\n\n  setToken(data.token);\n  setUserType(\"student\");\n  return data.student;\n};\n\n/**\n * Login/signup a student\n * @param code from oauth callback\n * @returns {Instructor} instructor to login\n */\nexport const authenticateInstructor = async (code) => {\n  const params = getDevParams();\n  let { data } = await client.post(\"/oauth/instructor\", { code }, { params });\n\n  setToken(data.token);\n  setUserType(\"instructor\");\n  return data.instructor;\n};\n\nconst getDevParams = () => {\n  const dev = process.env.NODE_ENV === \"development\";\n  return { dev };\n};\n"]},"metadata":{},"sourceType":"module"}