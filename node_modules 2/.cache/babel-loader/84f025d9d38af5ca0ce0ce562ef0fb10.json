{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/course/helpform/AdjustableQuestion.js\";\nimport React from \"react\";\nimport { Form, Button, Input, Select, Space, Row, Col } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport SubmitButton from \"../../form/SubmitButton\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\nimport ErrorSuccess from \"../../util-components/error-success/ErrorSuccess\";\nimport SelectWithAdd from \"../../form/SelectWithAdd\";\nconst {\n  Option\n} = Select;\n/**\n * @matthewsclar dynamically render a fields object into a form\n * @param {props} onFormSubmit handle form submit\n * @param {props} onSecondaryClick handle click of second button (optional)\n * @param {props} CTA button text; default is \"Submit Your Question\" (optional)\n * @param {props} secondaryCTA text for secondary button (optional)\n * @param {props} initialValues initial values to set to form (optional)\n * @param {props} editingTemplate array of fields to render (optional)\n * @param {props} buttons buttons to replace the single CTA (optional)\n * @param {props} edit whether or not to make form editable (optional)\n * @param {props} loading loading state (optional)\n * @param {props} openEditWindow open edit of window (optional)\n * @param {props} extraFields list of fields to go after the last field in questionForm (optional)\n * @param {props} onAddField handles click on the \"Add Field\" button\n * @param {props} resetForm handles resetting form to default\n * @param {props} hideSubmitButton\n */\n\nconst AdjustableQuestion = props => {\n  let fields = props.editingTemplate || props.questionTemplate;\n\n  const getOptions = options => options.map((option, i) => /*#__PURE__*/React.createElement(Option, {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, option));\n\n  const renderField = field => {\n    switch (field.type) {\n      case \"select\":\n        return /*#__PURE__*/React.createElement(SelectWithAdd, {\n          options: field.options,\n          placeholder: field.placeholder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        });\n\n      case \"select-fixed\":\n        return /*#__PURE__*/React.createElement(Select, {\n          placeholder: field.placeholder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        }, getOptions(field.options));\n\n      case \"tags\":\n        return /*#__PURE__*/React.createElement(Select, {\n          mode: \"tags\",\n          placeholder: field.placeholder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }, getOptions(field.options));\n\n      default:\n        return /*#__PURE__*/React.createElement(Input, {\n          placeholder: field.placeholder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    initialValues: props.initialValues,\n    onFinish: props.onFormSubmit,\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, fields.map((field, key) => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      key: key,\n      name: field.label.toLowerCase(),\n      label: /*#__PURE__*/React.createElement(Space, {\n        size: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, field.label, props.edit && /*#__PURE__*/React.createElement(EditOutlined, {\n        onClick: () => props.openEditWindow(field),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      })),\n      rules: [{\n        required: field.required,\n        message: `Please input a value for ${field.label.toLowerCase()}`\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, renderField(field));\n  }), props.extraFields, /*#__PURE__*/React.createElement(ErrorSuccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), props.secondaryCTA ? /*#__PURE__*/React.createElement(Row, {\n    gutter: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    loading: props.loading,\n    CTA: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: props.loading,\n    block: true,\n    onClick: props.onSecondaryClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, props.secondaryCTA))) : !props.hideSubmitButton && /*#__PURE__*/React.createElement(SubmitButton, {\n    loading: props.loading,\n    CTA: props.CTA ? props.CTA : \"Submit Your Question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }));\n};\n\nconst mapStateToProps = (state, prevProps) => {\n  return { ...prevProps,\n    questionTemplate: selectors.getQuestionTemplate(state)\n  };\n};\n\nexport default connect(mapStateToProps)(AdjustableQuestion);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/course/helpform/AdjustableQuestion.js"],"names":["React","Form","Button","Input","Select","Space","Row","Col","EditOutlined","SubmitButton","connect","selectors","ErrorSuccess","SelectWithAdd","Option","AdjustableQuestion","props","fields","editingTemplate","questionTemplate","getOptions","options","map","option","i","renderField","field","type","placeholder","initialValues","onFormSubmit","key","label","toLowerCase","edit","openEditWindow","required","message","extraFields","secondaryCTA","loading","onSecondaryClick","hideSubmitButton","CTA","mapStateToProps","state","prevProps","getQuestionTemplate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button, Input, Select, Space, Row, Col } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nimport SubmitButton from \"../../form/SubmitButton\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../../redux/selectors\";\nimport ErrorSuccess from \"../../util-components/error-success/ErrorSuccess\";\nimport SelectWithAdd from \"../../form/SelectWithAdd\";\n\nconst { Option } = Select;\n\n/**\n * @matthewsclar dynamically render a fields object into a form\n * @param {props} onFormSubmit handle form submit\n * @param {props} onSecondaryClick handle click of second button (optional)\n * @param {props} CTA button text; default is \"Submit Your Question\" (optional)\n * @param {props} secondaryCTA text for secondary button (optional)\n * @param {props} initialValues initial values to set to form (optional)\n * @param {props} editingTemplate array of fields to render (optional)\n * @param {props} buttons buttons to replace the single CTA (optional)\n * @param {props} edit whether or not to make form editable (optional)\n * @param {props} loading loading state (optional)\n * @param {props} openEditWindow open edit of window (optional)\n * @param {props} extraFields list of fields to go after the last field in questionForm (optional)\n * @param {props} onAddField handles click on the \"Add Field\" button\n * @param {props} resetForm handles resetting form to default\n * @param {props} hideSubmitButton\n */\nconst AdjustableQuestion = (props) => {\n  let fields = props.editingTemplate || props.questionTemplate;\n\n  const getOptions = (options) =>\n    options.map((option, i) => (\n      <Option key={option} value={option}>\n        {option}\n      </Option>\n    ));\n\n  const renderField = (field) => {\n    switch (field.type) {\n      case \"select\":\n        return (\n          <SelectWithAdd\n            options={field.options}\n            placeholder={field.placeholder}\n          />\n        );\n      case \"select-fixed\":\n        return (\n          <Select placeholder={field.placeholder}>\n            {getOptions(field.options)}\n          </Select>\n        );\n      case \"tags\":\n        return (\n          <Select mode=\"tags\" placeholder={field.placeholder}>\n            {getOptions(field.options)}\n          </Select>\n        );\n      default:\n        return <Input placeholder={field.placeholder} />;\n    }\n  };\n\n  return (\n    <Form\n      initialValues={props.initialValues}\n      onFinish={props.onFormSubmit}\n      layout=\"vertical\"\n    >\n      {fields.map((field, key) => {\n        return (\n          <Form.Item\n            key={key}\n            name={field.label.toLowerCase()}\n            label={\n              <Space size={2}>\n                {field.label}\n                {props.edit && (\n                  <EditOutlined onClick={() => props.openEditWindow(field)} />\n                )}\n              </Space>\n            }\n            rules={[\n              {\n                required: field.required,\n                message: `Please input a value for ${field.label.toLowerCase()}`,\n              },\n            ]}\n          >\n            {renderField(field)}\n          </Form.Item>\n        );\n      })}\n      {props.extraFields}\n\n      <ErrorSuccess />\n      {props.secondaryCTA ? (\n        <Row gutter={4}>\n          <Col span={12}>\n            <SubmitButton loading={props.loading} CTA=\"Submit\" />\n          </Col>\n          <Col span={12}>\n            <Button\n              loading={props.loading}\n              block\n              onClick={props.onSecondaryClick}\n            >\n              {props.secondaryCTA}\n            </Button>\n          </Col>\n        </Row>\n      ) : (\n        !props.hideSubmitButton && (\n          <SubmitButton\n            loading={props.loading}\n            CTA={props.CTA ? props.CTA : \"Submit Your Question\"}\n          />\n        )\n      )}\n    </Form>\n  );\n};\n\nconst mapStateToProps = (state, prevProps) => {\n  return {\n    ...prevProps,\n    questionTemplate: selectors.getQuestionTemplate(state),\n  };\n};\n\nexport default connect(mapStateToProps)(AdjustableQuestion);\n"]},"metadata":{},"sourceType":"module"}