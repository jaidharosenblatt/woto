{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/analytics/tables/questionTable/createColumns.js\";\nimport React from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport util from \"../../../../util\";\nimport { renderCommonItem } from \"../../../../util/getCommonValues\";\n/**\n * Render the columns needed for displaying questionTemplate data\n * This includes ta/instructor/student views for the Woto Rooms and the ta HelpStudents queue\n * @param {state} from help context\n * @param getColumnSearchProps makes col searchable\n * @param joinDiscussion callback for a student to join a discussion\n * @param n number of fields to render\n * @param help where or not this is called in a HelpStudents parent\n */\n\nexport function createColumns(activeDiscussion, activeQuestion, userID, inTable, getColumnSearchProps, joinDiscussion, helpStudent, help) {\n  var cols = [];\n  cols = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: 110,\n    ...getColumnSearchProps(\"name\")\n  }]; // Push submitted at if helping or last active if collab\n\n  if (help) {\n    cols.push({\n      title: \"Joined Queue\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      sorter: (a, b) => a.createdAt - b.createdAt,\n      width: 120,\n      render: lastActive => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, util.convertTimeAgo(lastActive));\n      }\n    });\n  } else {\n    cols.push({\n      title: \"Last Active\",\n      dataIndex: \"lastActive\",\n      key: \"lastActive\",\n      width: 120,\n      align: \"left\",\n      sorter: (a, b) => a.lastActive - b.lastActive,\n      render: lastActive => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, util.convertTimeAgo(lastActive));\n      }\n    }, {\n      title: \"Group Size\",\n      dataIndex: \"size\",\n      key: \"size\",\n      width: 120,\n      align: \"left\",\n      sorter: (a, b) => a.size - b.size,\n      render: size => {\n        if (size === 1) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, `${size} student`);\n        } else {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, `${size} students`);\n        }\n      }\n    });\n  }\n\n  inTable.forEach((item, i) => {\n    cols.push({\n      title: item.label,\n      dataIndex: item.label.toLowerCase(),\n      key: item.label.toLowerCase(),\n      align: \"left\",\n      ...getColumnSearchProps(item.label.toLowerCase()),\n      render: (item, row) => {\n        if (help) {\n          if (Array.isArray(item)) {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, item.join(\", \"));\n          } else if (!typeof Object) {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, item);\n          }\n        }\n\n        const highlightedValues = [];\n        return renderCommonItem(item, highlightedValues);\n      }\n    });\n  });\n\n  if (help) {\n    cols.push({\n      dataIndex: \"meetingURL\",\n      key: \"meetingURL\",\n      align: \"right\",\n      width: 150,\n      render: (url, row) => row.inQueue && /*#__PURE__*/React.createElement(Button, {\n        disabled: activeQuestion,\n        block: true,\n        type: !row.assistant && \"primary\",\n        onClick: () => helpStudent(row),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, \"Help\")\n    });\n  } else {\n    cols.push({\n      dataIndex: \"meetingURL\",\n      key: \"meetingURL\",\n      align: \"right\",\n      width: 100,\n      render: (meetingURL, row) => {\n        var _row$discussion$owner;\n\n        if (!activeDiscussion) {\n          return /*#__PURE__*/React.createElement(Button, {\n            block: true,\n            type: \"primary\",\n            onClick: () => joinDiscussion(row.discussion),\n            target: \"_blank\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }\n          }, \"Join Room\");\n        }\n\n        if (((_row$discussion$owner = row.discussion.owner) === null || _row$discussion$owner === void 0 ? void 0 : _row$discussion$owner._id) === userID) {\n          return /*#__PURE__*/React.createElement(Button, {\n            block: true,\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }\n          }, \"Your Room\");\n        }\n\n        if (activeDiscussion) {\n          return /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"You must leave your existing room\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            block: true,\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }\n          }, \"Join Room\"));\n        }\n\n        return /*#__PURE__*/React.createElement(Button, {\n          block: true,\n          type: \"primary\",\n          onClick: () => joinDiscussion(row.discussion),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }\n        }, \"Join Room\");\n      }\n    });\n  }\n\n  return cols;\n}","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/analytics/tables/questionTable/createColumns.js"],"names":["React","Button","Tooltip","util","renderCommonItem","createColumns","activeDiscussion","activeQuestion","userID","inTable","getColumnSearchProps","joinDiscussion","helpStudent","help","cols","title","dataIndex","key","width","push","sorter","a","b","createdAt","render","lastActive","convertTimeAgo","align","size","forEach","item","i","label","toLowerCase","row","Array","isArray","join","Object","highlightedValues","url","inQueue","assistant","meetingURL","discussion","owner","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport util from \"../../../../util\";\nimport { renderCommonItem } from \"../../../../util/getCommonValues\";\n\n/**\n * Render the columns needed for displaying questionTemplate data\n * This includes ta/instructor/student views for the Woto Rooms and the ta HelpStudents queue\n * @param {state} from help context\n * @param getColumnSearchProps makes col searchable\n * @param joinDiscussion callback for a student to join a discussion\n * @param n number of fields to render\n * @param help where or not this is called in a HelpStudents parent\n */\nexport function createColumns(\n  activeDiscussion,\n  activeQuestion,\n  userID,\n  inTable,\n  getColumnSearchProps,\n  joinDiscussion,\n  helpStudent,\n  help\n) {\n  var cols = [];\n\n  cols = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: 110,\n      ...getColumnSearchProps(\"name\"),\n    },\n  ];\n\n  // Push submitted at if helping or last active if collab\n  if (help) {\n    cols.push({\n      title: \"Joined Queue\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      sorter: (a, b) => a.createdAt - b.createdAt,\n      width: 120,\n      render: (lastActive) => {\n        return <>{util.convertTimeAgo(lastActive)}</>;\n      },\n    });\n  } else {\n    cols.push(\n      {\n        title: \"Last Active\",\n        dataIndex: \"lastActive\",\n        key: \"lastActive\",\n        width: 120,\n        align: \"left\",\n        sorter: (a, b) => a.lastActive - b.lastActive,\n        render: (lastActive) => {\n          return <>{util.convertTimeAgo(lastActive)}</>;\n        },\n      },\n      {\n        title: \"Group Size\",\n        dataIndex: \"size\",\n        key: \"size\",\n        width: 120,\n        align: \"left\",\n        sorter: (a, b) => a.size - b.size,\n        render: (size) => {\n          if (size === 1) {\n            return <>{`${size} student`}</>;\n          } else {\n            return <>{`${size} students`}</>;\n          }\n        },\n      }\n    );\n  }\n\n  inTable.forEach((item, i) => {\n    cols.push({\n      title: item.label,\n      dataIndex: item.label.toLowerCase(),\n      key: item.label.toLowerCase(),\n      align: \"left\",\n      ...getColumnSearchProps(item.label.toLowerCase()),\n      render: (item, row) => {\n        if (help) {\n          if (Array.isArray(item)) {\n            return <>{item.join(\", \")}</>;\n          } else if (!typeof Object) {\n            return <>{item}</>;\n          }\n        }\n        const highlightedValues = [];\n\n        return renderCommonItem(item, highlightedValues);\n      },\n    });\n  });\n\n  if (help) {\n    cols.push({\n      dataIndex: \"meetingURL\",\n      key: \"meetingURL\",\n      align: \"right\",\n      width: 150,\n      render: (url, row) =>\n        row.inQueue && (\n          <Button\n            disabled={activeQuestion}\n            block\n            type={!row.assistant && \"primary\"}\n            onClick={() => helpStudent(row)}\n          >\n            Help\n          </Button>\n        ),\n    });\n  } else {\n    cols.push({\n      dataIndex: \"meetingURL\",\n      key: \"meetingURL\",\n      align: \"right\",\n      width: 100,\n      render: (meetingURL, row) => {\n        if (!activeDiscussion) {\n          return (\n            <Button\n              block\n              type=\"primary\"\n              onClick={() => joinDiscussion(row.discussion)}\n              target=\"_blank\"\n            >\n              Join Room\n            </Button>\n          );\n        }\n        if (row.discussion.owner?._id === userID) {\n          return (\n            <Button block disabled>\n              Your Room\n            </Button>\n          );\n        }\n        if (activeDiscussion) {\n          return (\n            <Tooltip title=\"You must leave your existing room\">\n              <Button block disabled>\n                Join Room\n              </Button>\n            </Tooltip>\n          );\n        }\n        return (\n          <Button\n            block\n            type=\"primary\"\n            onClick={() => joinDiscussion(row.discussion)}\n          >\n            Join Room\n          </Button>\n        );\n      },\n    });\n  }\n\n  return cols;\n}\n"]},"metadata":{},"sourceType":"module"}