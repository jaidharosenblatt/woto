{"ast":null,"code":"/**\n * @function getOrList\n * @param {Array} value\n * @returns list with or between each item\n */\nexport function getOrList(value) {\n  if (!Array.isArray(value)) {\n    return value;\n  }\n\n  let s = \"\";\n  value.forEach((val, index) => {\n    if (index === value.length - 2) {\n      s += `${val} or `;\n    } else if (index === value.length - 1) {\n      s += val;\n    } else {\n      s += `${val}, `;\n    }\n  });\n  return s;\n}\n/**\n * @returns ordinal suffix version of inputted number\n * ex 1 => 1st\n * Found in SO https://stackoverflow.com/questions/13627308/add-st-nd-rd-and-th-ordinal-suffix-to-a-number\n * @param i number to input\n */\n\nfunction getOrdinalSuffix(i) {\n  var j = i % 10,\n      k = i % 100;\n\n  if (j === 1 && k !== 11) {\n    return i + \"st\";\n  }\n\n  if (j === 2 && k !== 12) {\n    return i + \"nd\";\n  }\n\n  if (j === 3 && k !== 13) {\n    return i + \"rd\";\n  }\n\n  return i + \"th\";\n}\n/**\n * Get title for a user\n * @param {String} gradYear\n * @returns {String} title of user for staffers\n */\n\n\nfunction getTitle(gradYear) {\n  switch (gradYear) {\n    case \"instructor\":\n      return \"Instructor\";\n\n    case \"Graduate Student\":\n      return \"Graduate Teaching Assistant\";\n\n    default:\n      return \"Undergraduate Teaching Assistant\";\n  }\n}\n\nexport default {\n  getOrdinalSuffix,\n  getOrList,\n  getTitle\n};","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/util/text.js"],"names":["getOrList","value","Array","isArray","s","forEach","val","index","length","getOrdinalSuffix","i","j","k","getTitle","gradYear"],"mappings":"AAAA;;;;;AAKA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACzB,WAAOA,KAAP;AACD;;AACD,MAAIG,CAAC,GAAG,EAAR;AACAH,EAAAA,KAAK,CAACI,OAAN,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,QAAIA,KAAK,KAAKN,KAAK,CAACO,MAAN,GAAe,CAA7B,EAAgC;AAC9BJ,MAAAA,CAAC,IAAK,GAAEE,GAAI,MAAZ;AACD,KAFD,MAEO,IAAIC,KAAK,KAAKN,KAAK,CAACO,MAAN,GAAe,CAA7B,EAAgC;AACrCJ,MAAAA,CAAC,IAAIE,GAAL;AACD,KAFM,MAEA;AACLF,MAAAA,CAAC,IAAK,GAAEE,GAAI,IAAZ;AACD;AACF,GARD;AASA,SAAOF,CAAP;AACD;AAED;;;;;;;AAMA,SAASK,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B,MAAIC,CAAC,GAAGD,CAAC,GAAG,EAAZ;AAAA,MACEE,CAAC,GAAGF,CAAC,GAAG,GADV;;AAEA,MAAIC,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,EAArB,EAAyB;AACvB,WAAOF,CAAC,GAAG,IAAX;AACD;;AACD,MAAIC,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,EAArB,EAAyB;AACvB,WAAOF,CAAC,GAAG,IAAX;AACD;;AACD,MAAIC,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,EAArB,EAAyB;AACvB,WAAOF,CAAC,GAAG,IAAX;AACD;;AACD,SAAOA,CAAC,GAAG,IAAX;AACD;AAED;;;;;;;AAKA,SAASG,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,UAAQA,QAAR;AACE,SAAK,YAAL;AACE,aAAO,YAAP;;AACF,SAAK,kBAAL;AACE,aAAO,6BAAP;;AACF;AACE,aAAO,kCAAP;AANJ;AAQD;;AAED,eAAe;AACbL,EAAAA,gBADa;AAEbT,EAAAA,SAFa;AAGba,EAAAA;AAHa,CAAf","sourcesContent":["/**\n * @function getOrList\n * @param {Array} value\n * @returns list with or between each item\n */\nexport function getOrList(value) {\n  if (!Array.isArray(value)) {\n    return value;\n  }\n  let s = \"\";\n  value.forEach((val, index) => {\n    if (index === value.length - 2) {\n      s += `${val} or `;\n    } else if (index === value.length - 1) {\n      s += val;\n    } else {\n      s += `${val}, `;\n    }\n  });\n  return s;\n}\n\n/**\n * @returns ordinal suffix version of inputted number\n * ex 1 => 1st\n * Found in SO https://stackoverflow.com/questions/13627308/add-st-nd-rd-and-th-ordinal-suffix-to-a-number\n * @param i number to input\n */\nfunction getOrdinalSuffix(i) {\n  var j = i % 10,\n    k = i % 100;\n  if (j === 1 && k !== 11) {\n    return i + \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return i + \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return i + \"rd\";\n  }\n  return i + \"th\";\n}\n\n/**\n * Get title for a user\n * @param {String} gradYear\n * @returns {String} title of user for staffers\n */\nfunction getTitle(gradYear) {\n  switch (gradYear) {\n    case \"instructor\":\n      return \"Instructor\";\n    case \"Graduate Student\":\n      return \"Graduate Teaching Assistant\";\n    default:\n      return \"Undergraduate Teaching Assistant\";\n  }\n}\n\nexport default {\n  getOrdinalSuffix,\n  getOrList,\n  getTitle,\n};\n"]},"metadata":{},"sourceType":"module"}