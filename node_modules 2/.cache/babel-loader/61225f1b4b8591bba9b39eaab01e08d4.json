{"ast":null,"code":"// Generated by CoffeeScript 1.10.0\nvar feedback, matching, scoring, time, time_estimates, zxcvbn;\nmatching = require('./matching');\nscoring = require('./scoring');\ntime_estimates = require('./time_estimates');\nfeedback = require('./feedback');\n\ntime = function () {\n  return new Date().getTime();\n};\n\nzxcvbn = function (password, user_inputs) {\n  var arg, attack_times, i, len, matches, prop, ref, result, sanitized_inputs, start, val;\n\n  if (user_inputs == null) {\n    user_inputs = [];\n  }\n\n  start = time();\n  sanitized_inputs = [];\n\n  for (i = 0, len = user_inputs.length; i < len; i++) {\n    arg = user_inputs[i];\n\n    if ((ref = typeof arg) === \"string\" || ref === \"number\" || ref === \"boolean\") {\n      sanitized_inputs.push(arg.toString().toLowerCase());\n    }\n  }\n\n  matching.set_user_input_dictionary(sanitized_inputs);\n  matches = matching.omnimatch(password);\n  result = scoring.most_guessable_match_sequence(password, matches);\n  result.calc_time = time() - start;\n  attack_times = time_estimates.estimate_attack_times(result.guesses);\n\n  for (prop in attack_times) {\n    val = attack_times[prop];\n    result[prop] = val;\n  }\n\n  result.feedback = feedback.get_feedback(result.score, result.sequence);\n  return result;\n};\n\nmodule.exports = zxcvbn;","map":{"version":3,"sources":["src/main.coffee"],"names":[],"mappings":";AAAA,IAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,IAAA,EAAA,cAAA,EAAA,MAAA;AAAA,QAAA,GAAW,OAAA,CAAA,YAAA,CAAX;AACA,OAAA,GAAU,OAAA,CAAA,WAAA,CAAV;AACA,cAAA,GAAiB,OAAA,CAAA,kBAAA,CAAjB;AACA,QAAA,GAAW,OAAA,CAAA,YAAA,CAAX;;AAEA,IAAA,GAAO,YAAA;SAAQ,IAAL,IAAK,EAAL,CAAA,OAAA,E;AAAH,CAAP;;AAEA,MAAA,GAAS,UAAA,QAAA,EAAA,WAAA,EAAA;AACP,MAAA,GAAA,EAAA,YAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,EAAA,MAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,GAAA;;;AADkB,IAAA,WAAA,GAAc,EAAd;;;AAClB,EAAA,KAAA,GAAQ,IAAA,EAAR;AAEA,EAAA,gBAAA,GAAmB,EAAnB;;AACA,OAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,WAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA;;;AACE,QAAA,CAAA,GAAA,GAAG,OAAA,GAAH,MAAG,QAAH,IAAG,GAAA,KAAA,QAAH,IAAG,GAAA,KAAH,SAAA,EAAA;AACE,MAAA,gBAAgB,CAAhB,IAAA,CAAsB,GAAG,CAAH,QAAA,GADxB,WACwB,EAAtB;;AAFJ;;AAGA,EAAA,QAAQ,CAAR,yBAAA,CAAA,gBAAA;AACA,EAAA,OAAA,GAAU,QAAQ,CAAR,SAAA,CAAA,QAAA,CAAV;AACA,EAAA,MAAA,GAAS,OAAO,CAAP,6BAAA,CAAA,QAAA,EAAA,OAAA,CAAT;AACA,EAAA,MAAM,CAAN,SAAA,GAAmB,IAAA,KAAS,KAA5B;AACA,EAAA,YAAA,GAAe,cAAc,CAAd,qBAAA,CAAqC,MAAM,CAA3C,OAAA,CAAf;;AACA,OAAA,IAAA,IAAA,YAAA,EAAA;;AACE,IAAA,MAAO,CAAP,IAAO,CAAP,GAAe,GAAf;AADF;;AAEA,EAAA,MAAM,CAAN,QAAA,GAAkB,QAAQ,CAAR,YAAA,CAAsB,MAAM,CAA5B,KAAA,EAAoC,MAAM,CAA1C,QAAA,CAAlB;SACA,M;AAfO,CAAT;;AAiBA,MAAM,CAAN,OAAA,GAAiB,MAAjB","sourceRoot":"..","sourcesContent":["// Generated by CoffeeScript 1.10.0\nvar feedback, matching, scoring, time, time_estimates, zxcvbn;\n\nmatching = require('./matching');\n\nscoring = require('./scoring');\n\ntime_estimates = require('./time_estimates');\n\nfeedback = require('./feedback');\n\ntime = function() {\n  return (new Date()).getTime();\n};\n\nzxcvbn = function(password, user_inputs) {\n  var arg, attack_times, i, len, matches, prop, ref, result, sanitized_inputs, start, val;\n  if (user_inputs == null) {\n    user_inputs = [];\n  }\n  start = time();\n  sanitized_inputs = [];\n  for (i = 0, len = user_inputs.length; i < len; i++) {\n    arg = user_inputs[i];\n    if ((ref = typeof arg) === \"string\" || ref === \"number\" || ref === \"boolean\") {\n      sanitized_inputs.push(arg.toString().toLowerCase());\n    }\n  }\n  matching.set_user_input_dictionary(sanitized_inputs);\n  matches = matching.omnimatch(password);\n  result = scoring.most_guessable_match_sequence(password, matches);\n  result.calc_time = time() - start;\n  attack_times = time_estimates.estimate_attack_times(result.guesses);\n  for (prop in attack_times) {\n    val = attack_times[prop];\n    result[prop] = val;\n  }\n  result.feedback = feedback.get_feedback(result.score, result.sequence);\n  return result;\n};\n\nmodule.exports = zxcvbn;\n\n//# sourceMappingURL=main.js.map\n"]},"metadata":{},"sourceType":"script"}