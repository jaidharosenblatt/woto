{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/form/DataSelect.js\";\nimport React from \"react\";\nimport { Form, Select } from \"antd\";\nconst {\n  Option\n} = Select;\n/**\n * @jaidharosenblatt Select field that allows user to use the select field with\n * an array of options (to be used in a form)\n * Refer to ant design Select field documentation for more details\n * @param {props} options the options for the form (values are same as what is displayed)\n * @param {props} name the value for the form\n * @param {props} label a vertical label for the field\n * @param {props} required whether or not this field is required\n * @param {props} message the error message for the field \"Please input your name\"\n * @param {props} name the value to be used in a form\n * @param {props} mode \"tags\" or \"multiple\" (default)\n * @param {props} placeholder placeholder in field\n * @param {props} handleChange callback function for field change\n */\n\nconst DataSelect = props => {\n  return /*#__PURE__*/React.createElement(Form.Item, {\n    name: props.name,\n    label: props.label,\n    rules: [{\n      required: props.required,\n      message: props.message\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    mode: props.mode,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: props.placeholder,\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, props.options && props.options.map(option => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }\n    }, option);\n  })));\n};\n\nexport default DataSelect;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/form/DataSelect.js"],"names":["React","Form","Select","Option","DataSelect","props","name","label","required","message","mode","width","placeholder","handleChange","options","map","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,MAAnB;AAEA;;;;;;;;;;;;;;;AAcA,MAAME,UAAU,GAAIC,KAAD,IAAW;AAC5B,sBACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAEA,KAAK,CAACC,IADd;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAlB;AAA4BC,MAAAA,OAAO,EAAEJ,KAAK,CAACI;AAA3C,KAAD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEJ,KAAK,CAACK,IADd;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,WAAW,EAAEN,KAAK,CAACO,WAHrB;AAIE,IAAA,QAAQ,EAAEP,KAAK,CAACQ,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGR,KAAK,CAACS,OAAN,IACCT,KAAK,CAACS,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AAC5B,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBA,MAAtB,CAAP;AACD,GAFD,CAPJ,CALF,CADF;AAmBD,CApBD;;AAsBA,eAAeZ,UAAf","sourcesContent":["import React from \"react\";\nimport { Form, Select } from \"antd\";\n\nconst { Option } = Select;\n\n/**\n * @jaidharosenblatt Select field that allows user to use the select field with\n * an array of options (to be used in a form)\n * Refer to ant design Select field documentation for more details\n * @param {props} options the options for the form (values are same as what is displayed)\n * @param {props} name the value for the form\n * @param {props} label a vertical label for the field\n * @param {props} required whether or not this field is required\n * @param {props} message the error message for the field \"Please input your name\"\n * @param {props} name the value to be used in a form\n * @param {props} mode \"tags\" or \"multiple\" (default)\n * @param {props} placeholder placeholder in field\n * @param {props} handleChange callback function for field change\n */\nconst DataSelect = (props) => {\n  return (\n    <Form.Item\n      name={props.name}\n      label={props.label}\n      rules={[{ required: props.required, message: props.message }]}\n    >\n      <Select\n        mode={props.mode}\n        style={{ width: \"100%\" }}\n        placeholder={props.placeholder}\n        onChange={props.handleChange}\n      >\n        {props.options &&\n          props.options.map((option) => {\n            return <Option key={option}>{option}</Option>;\n          })}\n      </Select>\n    </Form.Item>\n  );\n};\n\nexport default DataSelect;\n"]},"metadata":{},"sourceType":"module"}