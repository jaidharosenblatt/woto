{"ast":null,"code":"import { clearUserType, clearToken, setUserType, getUserType } from \"../../api/tokenService\";\nimport actionTypes from \"./actionTypes\"; // initialize with session stored values if needed\n\nconst initialState = {\n  user: {},\n  isAuthenticated: false,\n  userType: getUserType()\n};\n/**\n * @function authReducer\n * @param {Object} state - User state\n * @param {Object} action - action to be reduced\n * @returns {Object} - new state\n */\n\nexport default ((state = initialState, action) => {\n  const userType = getUserType();\n\n  switch (action.type) {\n    case actionTypes.LOGIN_USER:\n      setUserType(action.payload.userType);\n      return { ...state,\n        user: action.payload.user,\n        userType: action.payload.userType,\n        isAuthenticated: true\n      };\n\n    case actionTypes.LOAD_USER:\n      return { ...state,\n        user: action.payload,\n        userType,\n        isAuthenticated: true\n      };\n\n    case actionTypes.REGISTER_USER:\n      return { ...state,\n        user: action.payload.user,\n        userType: action.payload.userType,\n        isAuthenticated: true\n      };\n\n    case actionTypes.EDIT_USER:\n      return { ...state,\n        user: action.payload\n      };\n\n    case actionTypes.RESET:\n      // in case user isn't verified and can't \"log out\" on backend\n      clearToken();\n      clearUserType();\n      return initialState;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/redux/auth/authReducer.js"],"names":["clearUserType","clearToken","setUserType","getUserType","actionTypes","initialState","user","isAuthenticated","userType","state","action","type","LOGIN_USER","payload","LOAD_USER","REGISTER_USER","EDIT_USER","RESET"],"mappings":"AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,wBALP;AAMA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,QAAQ,EAAEL,WAAW;AAHF,CAArB;AAMA;;;;;;;AAMA,gBAAe,CAACM,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,QAAMF,QAAQ,GAAGL,WAAW,EAA5B;;AACA,UAAQO,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,UAAjB;AACEV,MAAAA,WAAW,CAACQ,MAAM,CAACG,OAAP,CAAeL,QAAhB,CAAX;AACA,aAAO,EACL,GAAGC,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACG,OAAP,CAAeP,IAFhB;AAGLE,QAAAA,QAAQ,EAAEE,MAAM,CAACG,OAAP,CAAeL,QAHpB;AAILD,QAAAA,eAAe,EAAE;AAJZ,OAAP;;AAMF,SAAKH,WAAW,CAACU,SAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACG,OAFR;AAGLL,QAAAA,QAHK;AAILD,QAAAA,eAAe,EAAE;AAJZ,OAAP;;AAOF,SAAKH,WAAW,CAACW,aAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACG,OAAP,CAAeP,IAFhB;AAGLE,QAAAA,QAAQ,EAAEE,MAAM,CAACG,OAAP,CAAeL,QAHpB;AAILD,QAAAA,eAAe,EAAE;AAJZ,OAAP;;AAMF,SAAKH,WAAW,CAACY,SAAjB;AACE,aAAO,EACL,GAAGP,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACG;AAFR,OAAP;;AAKF,SAAKT,WAAW,CAACa,KAAjB;AACE;AACAhB,MAAAA,UAAU;AACVD,MAAAA,aAAa;AACb,aAAOK,YAAP;;AACF;AACE,aAAOI,KAAP;AApCJ;AAsCD,CAxCD","sourcesContent":["import {\n  clearUserType,\n  clearToken,\n  setUserType,\n  getUserType,\n} from \"../../api/tokenService\";\nimport actionTypes from \"./actionTypes\";\n\n// initialize with session stored values if needed\nconst initialState = {\n  user: {},\n  isAuthenticated: false,\n  userType: getUserType(),\n};\n\n/**\n * @function authReducer\n * @param {Object} state - User state\n * @param {Object} action - action to be reduced\n * @returns {Object} - new state\n */\nexport default (state = initialState, action) => {\n  const userType = getUserType();\n  switch (action.type) {\n    case actionTypes.LOGIN_USER:\n      setUserType(action.payload.userType);\n      return {\n        ...state,\n        user: action.payload.user,\n        userType: action.payload.userType,\n        isAuthenticated: true,\n      };\n    case actionTypes.LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n        userType,\n        isAuthenticated: true,\n      };\n\n    case actionTypes.REGISTER_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        userType: action.payload.userType,\n        isAuthenticated: true,\n      };\n    case actionTypes.EDIT_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case actionTypes.RESET:\n      // in case user isn't verified and can't \"log out\" on backend\n      clearToken();\n      clearUserType();\n      return initialState;\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}