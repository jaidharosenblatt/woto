{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"./tokenService.js\";\nconst client = axios.create({\n  // baseURL:\n  //   process.env.NODE_ENV === \"development\"\n  //     ? \"http://localhost:5000\"\n  //     : \"https://woto.herokuapp.com/\",\n  baseURL: \"https://woto.herokuapp.com/\",\n  headers: {\n    \"Access-Control-Allow-Origin\": \"https://woto.herokuapp.com/\"\n  }\n}); // Add authentication token to each request\n\nconst requestHandler = request => {\n  if (getToken() !== null) {\n    request.headers[\"Authorization\"] = `${getToken()}`;\n  }\n\n  return request;\n};\n/**\n * Reject requests with errors\n * @param {Object} error\n */\n\n\nconst errorHandler = error => {\n  var _error$response, _error$response$data;\n\n  console.log({ ...error\n  }); // Check if there is a message returned with this error\n\n  if (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) {\n    var _error$response2, _error$response2$data;\n\n    return Promise.reject(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message);\n  }\n\n  return Promise.reject(\"Something went wrong with our servers\");\n};\n\nclient.interceptors.request.use(request => requestHandler(request));\nclient.interceptors.response.use(response => response, error => errorHandler(error));\nexport default client;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/api/axiosConfig.js"],"names":["axios","getToken","client","create","baseURL","headers","requestHandler","request","errorHandler","error","console","log","response","data","message","Promise","reject","interceptors","use"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,MAAMC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1B;AACA;AACA;AACA;AACAC,EAAAA,OAAO,EAAE,6BALiB;AAM1BC,EAAAA,OAAO,EAAE;AAAE,mCAA+B;AAAjC;AANiB,CAAb,CAAf,C,CASA;;AACA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClC,MAAIN,QAAQ,OAAO,IAAnB,EAAyB;AACvBM,IAAAA,OAAO,CAACF,OAAR,CAAgB,eAAhB,IAAoC,GAAEJ,QAAQ,EAAG,EAAjD;AACD;;AACD,SAAOM,OAAP;AACD,CALD;AAOA;;;;;;AAIA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAE,GAAGF;AAAL,GAAZ,EAD8B,CAG9B;;AACA,MAAIA,KAAJ,aAAIA,KAAJ,0CAAIA,KAAK,CAAEG,QAAX,4EAAI,gBAAiBC,IAArB,yDAAI,qBAAuBC,OAA3B,EAAoC;AAAA;;AAClC,WAAOC,OAAO,CAACC,MAAR,CAAeP,KAAf,aAAeA,KAAf,2CAAeA,KAAK,CAAEG,QAAtB,8EAAe,iBAAiBC,IAAhC,0DAAe,sBAAuBC,OAAtC,CAAP;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAe,uCAAf,CAAP;AACD,CARD;;AAUAd,MAAM,CAACe,YAAP,CAAoBV,OAApB,CAA4BW,GAA5B,CAAiCX,OAAD,IAAaD,cAAc,CAACC,OAAD,CAA3D;AACAL,MAAM,CAACe,YAAP,CAAoBL,QAApB,CAA6BM,GAA7B,CACGN,QAAD,IAAcA,QADhB,EAEGH,KAAD,IAAWD,YAAY,CAACC,KAAD,CAFzB;AAIA,eAAeP,MAAf","sourcesContent":["import axios from \"axios\";\nimport { getToken } from \"./tokenService.js\";\n\nconst client = axios.create({\n  // baseURL:\n  //   process.env.NODE_ENV === \"development\"\n  //     ? \"http://localhost:5000\"\n  //     : \"https://woto.herokuapp.com/\",\n  baseURL: \"https://woto.herokuapp.com/\",\n  headers: { \"Access-Control-Allow-Origin\": \"https://woto.herokuapp.com/\" },\n});\n\n// Add authentication token to each request\nconst requestHandler = (request) => {\n  if (getToken() !== null) {\n    request.headers[\"Authorization\"] = `${getToken()}`;\n  }\n  return request;\n};\n\n/**\n * Reject requests with errors\n * @param {Object} error\n */\nconst errorHandler = (error) => {\n  console.log({ ...error });\n\n  // Check if there is a message returned with this error\n  if (error?.response?.data?.message) {\n    return Promise.reject(error?.response?.data?.message);\n  }\n  return Promise.reject(\"Something went wrong with our servers\");\n};\n\nclient.interceptors.request.use((request) => requestHandler(request));\nclient.interceptors.response.use(\n  (response) => response,\n  (error) => errorHandler(error)\n);\nexport default client;\n"]},"metadata":{},"sourceType":"module"}