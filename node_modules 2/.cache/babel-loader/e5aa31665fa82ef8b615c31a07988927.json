{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/course/teaching-staff/TeachingStaffRow.js\";\nimport React from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./TeachingStaff.css\";\nimport Staffer from \"./Staffer\";\n/**\n * Render a staffers array into a row with N cols\n * @param {Array} staffers from a session\n * @param {Integer} numCols number of columns in desired row\n */\n\nconst TeachingStaffRow = ({\n  staffers,\n  defaultColumns = 2\n} = {}) => {\n  if (!staffers || staffers[0] == null) {\n    return null;\n  } // add more columns with more staffers\n\n\n  const numCols = staffers.length > 2 ? 4 : defaultColumns; // Initialize numCols\n\n  let cols = [];\n\n  for (let i = 0; i < numCols; i++) {\n    cols.push([]);\n  } // Split into numCols\n\n\n  staffers.forEach((staffer, i) => {\n    const jsx = /*#__PURE__*/React.createElement(Staffer, {\n      key: i,\n      staffer: staffer,\n      i: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    });\n    cols[i % numCols].push(jsx);\n  });\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"teaching-staff-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, cols.map((col, i) => {\n    if (col.length === 0) return null;\n    return /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      md: 24 / numCols,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, col);\n  }));\n};\n\nexport default TeachingStaffRow;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/course/teaching-staff/TeachingStaffRow.js"],"names":["React","Row","Col","Staffer","TeachingStaffRow","staffers","defaultColumns","numCols","length","cols","i","push","forEach","staffer","jsx","map","col"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AAEA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;;;;;AAKA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,cAAc,GAAG;AAA7B,IAAmC,EAApC,KAA2C;AAClE,MAAI,CAACD,QAAD,IAAaA,QAAQ,CAAC,CAAD,CAAR,IAAe,IAAhC,EAAsC;AACpC,WAAO,IAAP;AACD,GAHiE,CAKlE;;;AACA,QAAME,OAAO,GAAGF,QAAQ,CAACG,MAAT,GAAkB,CAAlB,GAAsB,CAAtB,GAA0BF,cAA1C,CANkE,CAQlE;;AACA,MAAIG,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAApB,EAA6BG,CAAC,EAA9B,EAAkC;AAChCD,IAAAA,IAAI,CAACE,IAAL,CAAU,EAAV;AACD,GAZiE,CAalE;;;AACAN,EAAAA,QAAQ,CAACO,OAAT,CAAiB,CAACC,OAAD,EAAUH,CAAV,KAAgB;AAC/B,UAAMI,GAAG,gBAAG,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEJ,CAAd;AAAiB,MAAA,OAAO,EAAEG,OAA1B;AAAmC,MAAA,CAAC,EAAEH,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;AACAD,IAAAA,IAAI,CAACC,CAAC,GAAGH,OAAL,CAAJ,CAAkBI,IAAlB,CAAuBG,GAAvB;AACD,GAHD;AAKA,sBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,GAAL,CAAS,CAACC,GAAD,EAAMN,CAAN,KAAY;AACpB,QAAIM,GAAG,CAACR,MAAJ,KAAe,CAAnB,EAAsB,OAAO,IAAP;AACtB,wBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,KAAKD,OAAtB;AAA+B,MAAA,GAAG,EAAEG,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,GADH,CADF;AAKD,GAPA,CADH,CADF;AAYD,CA/BD;;AAiCA,eAAeZ,gBAAf","sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nimport \"./TeachingStaff.css\";\nimport Staffer from \"./Staffer\";\n\n/**\n * Render a staffers array into a row with N cols\n * @param {Array} staffers from a session\n * @param {Integer} numCols number of columns in desired row\n */\nconst TeachingStaffRow = ({ staffers, defaultColumns = 2 } = {}) => {\n  if (!staffers || staffers[0] == null) {\n    return null;\n  }\n\n  // add more columns with more staffers\n  const numCols = staffers.length > 2 ? 4 : defaultColumns;\n\n  // Initialize numCols\n  let cols = [];\n  for (let i = 0; i < numCols; i++) {\n    cols.push([]);\n  }\n  // Split into numCols\n  staffers.forEach((staffer, i) => {\n    const jsx = <Staffer key={i} staffer={staffer} i={i} />;\n    cols[i % numCols].push(jsx);\n  });\n\n  return (\n    <Row className=\"teaching-staff-row\">\n      {cols.map((col, i) => {\n        if (col.length === 0) return null;\n        return (\n          <Col xs={24} md={24 / numCols} key={i}>\n            {col}\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\n\nexport default TeachingStaffRow;\n"]},"metadata":{},"sourceType":"module"}