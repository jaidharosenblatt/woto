{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/student/Help.js\";\nimport React from \"react\";\nimport JoinQueue from \"./JoinQueue\";\nimport ActiveSession from \"./ActiveSession\";\nimport NoActiveSession from \"./NoActiveSession\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../redux/selectors\";\nimport NavBarCentered from \"../util-components/centeredpage/NavBarCentered\";\nimport PageCard from \"../util-components/centeredpage/PageCard\";\n/**\n * @jaidharosenblatt Wrapper page for the student help process for both Woto rooms\n * and for submitting a question for a TA queue. Uses state variables to hold the current\n * stage of the problem and passes down as props to all of the pages. Decided to use\n * hooks instead of context for readability\n *\n * @param {course} code course code to display on various help pages\n * @param {course} activeSession the key of the active session if it exists\n */\n\nconst Help = props => {\n  const {\n    session,\n    activeQuestion\n  } = props;\n\n  if (!session) {\n    return /*#__PURE__*/React.createElement(PageCard, {\n      navbar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NoActiveSession, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(NavBarCentered, {\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, activeQuestion ? /*#__PURE__*/React.createElement(ActiveSession, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(JoinQueue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 45\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    session: selectors.getSession(state),\n    activeQuestion: selectors.getActiveQuestion(state)\n  };\n};\n\nexport default connect(mapStateToProps)(Help);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/student/Help.js"],"names":["React","JoinQueue","ActiveSession","NoActiveSession","connect","selectors","NavBarCentered","PageCard","Help","props","session","activeQuestion","mapStateToProps","state","getSession","getActiveQuestion"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,QAAP,MAAqB,0CAArB;AAEA;;;;;;;;;;AASA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA8BF,KAApC;;AAEA,MAAI,CAACC,OAAL,EAAc;AACZ,wBACE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AACD,sBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,cAAc,gBAAG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAuB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxC,CADF;AAKD,CAfD;;AAiBA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,OAAO,EAAEL,SAAS,CAACS,UAAV,CAAqBD,KAArB,CADJ;AAELF,IAAAA,cAAc,EAAEN,SAAS,CAACU,iBAAV,CAA4BF,KAA5B;AAFX,GAAP;AAID,CALD;;AAOA,eAAeT,OAAO,CAACQ,eAAD,CAAP,CAAyBJ,IAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport JoinQueue from \"./JoinQueue\";\n\nimport ActiveSession from \"./ActiveSession\";\nimport NoActiveSession from \"./NoActiveSession\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../redux/selectors\";\nimport NavBarCentered from \"../util-components/centeredpage/NavBarCentered\";\nimport PageCard from \"../util-components/centeredpage/PageCard\";\n\n/**\n * @jaidharosenblatt Wrapper page for the student help process for both Woto rooms\n * and for submitting a question for a TA queue. Uses state variables to hold the current\n * stage of the problem and passes down as props to all of the pages. Decided to use\n * hooks instead of context for readability\n *\n * @param {course} code course code to display on various help pages\n * @param {course} activeSession the key of the active session if it exists\n */\nconst Help = (props) => {\n  const { session, activeQuestion } = props;\n\n  if (!session) {\n    return (\n      <PageCard navbar>\n        <NoActiveSession />\n      </PageCard>\n    );\n  }\n  return (\n    <NavBarCentered navbar>\n      {activeQuestion ? <ActiveSession /> : <JoinQueue />}\n    </NavBarCentered>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    session: selectors.getSession(state),\n    activeQuestion: selectors.getActiveQuestion(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Help);\n"]},"metadata":{},"sourceType":"module"}