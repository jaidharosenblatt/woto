{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/course/collapsedquestion/attributeIconMap.js\";\nimport React from \"react\";\nimport { FileOutlined, FormOutlined, OrderedListOutlined, QuestionCircleOutlined, TagsOutlined, EditOutlined, VideoCameraOutlined } from \"@ant-design/icons\";\nconst attributeIconMap = {\n  assignment: {\n    label: \"Assignment\",\n    icon: /*#__PURE__*/React.createElement(FileOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 44\n      }\n    })\n  },\n  problem: {\n    label: \"Problem\",\n    icon: /*#__PURE__*/React.createElement(FormOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 38\n      }\n    })\n  },\n  stage: {\n    label: \"Stage\",\n    icon: /*#__PURE__*/React.createElement(OrderedListOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 34\n      }\n    })\n  },\n  question: {\n    label: \"Question\",\n    icon: /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 40\n      }\n    })\n  },\n  concepts: {\n    label: \"Concepts\",\n    icon: /*#__PURE__*/React.createElement(TagsOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 40\n      }\n    })\n  },\n  details: {\n    label: \"Details\",\n    icon: /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 38\n      }\n    })\n  },\n  meetingURL: {\n    label: \"Room URL\",\n    icon: /*#__PURE__*/React.createElement(VideoCameraOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 42\n      }\n    })\n  }\n};\n/*Return icon if in keys otherwise return FileOutlined, as not to have random icons\n * for fields be generated everytime a page is reset.\n */\n\nconst getIcon = attribute => {\n  if (attribute in attributeIconMap) {\n    return attributeIconMap[attribute];\n  } else {\n    return {\n      label: attribute,\n      icon: /*#__PURE__*/React.createElement(FileOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 38\n        }\n      })\n    };\n  }\n};\n\nexport default getIcon;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/course/collapsedquestion/attributeIconMap.js"],"names":["React","FileOutlined","FormOutlined","OrderedListOutlined","QuestionCircleOutlined","TagsOutlined","EditOutlined","VideoCameraOutlined","attributeIconMap","assignment","label","icon","problem","stage","question","concepts","details","meetingURL","getIcon","attribute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,mBAHF,EAIEC,sBAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,mBAPF,QAQO,mBARP;AAUA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7B,GADW;AAEvBC,EAAAA,OAAO,EAAE;AAAEF,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B,GAFc;AAGvBE,EAAAA,KAAK,EAAE;AAAEH,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,eAAE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB,GAHgB;AAIvBG,EAAAA,QAAQ,EAAE;AAAEJ,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,eAAE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B,GAJa;AAKvBI,EAAAA,QAAQ,EAAE;AAAEL,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B,GALa;AAMvBK,EAAAA,OAAO,EAAE;AAAEN,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B,GANc;AAOvBM,EAAAA,UAAU,EAAE;AAAEP,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,eAAE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B;AAPW,CAAzB;AAUA;;;;AAGA,MAAMO,OAAO,GAAIC,SAAD,IAAe;AAC7B,MAAIA,SAAS,IAAIX,gBAAjB,EAAmC;AACjC,WAAOA,gBAAgB,CAACW,SAAD,CAAvB;AACD,GAFD,MAEO;AACL,WAAO;AAAET,MAAAA,KAAK,EAAES,SAAT;AAAoBR,MAAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B,KAAP;AACD;AACF,CAND;;AAQA,eAAeO,OAAf","sourcesContent":["import React from \"react\";\nimport {\n  FileOutlined,\n  FormOutlined,\n  OrderedListOutlined,\n  QuestionCircleOutlined,\n  TagsOutlined,\n  EditOutlined,\n  VideoCameraOutlined,\n} from \"@ant-design/icons\";\n\nconst attributeIconMap = {\n  assignment: { label: \"Assignment\", icon: <FileOutlined /> },\n  problem: { label: \"Problem\", icon: <FormOutlined /> },\n  stage: { label: \"Stage\", icon: <OrderedListOutlined /> },\n  question: { label: \"Question\", icon: <QuestionCircleOutlined /> },\n  concepts: { label: \"Concepts\", icon: <TagsOutlined /> },\n  details: { label: \"Details\", icon: <EditOutlined /> },\n  meetingURL: { label: \"Room URL\", icon: <VideoCameraOutlined /> },\n};\n\n/*Return icon if in keys otherwise return FileOutlined, as not to have random icons\n * for fields be generated everytime a page is reset.\n */\nconst getIcon = (attribute) => {\n  if (attribute in attributeIconMap) {\n    return attributeIconMap[attribute];\n  } else {\n    return { label: attribute, icon: <FileOutlined /> };\n  }\n};\n\nexport default getIcon;\n"]},"metadata":{},"sourceType":"module"}