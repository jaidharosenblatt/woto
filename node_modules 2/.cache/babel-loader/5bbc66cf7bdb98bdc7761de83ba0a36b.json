{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/student/ActiveSession.js\";\nimport React from \"react\";\nimport { Col, Card, Row, Space, Alert, Tooltip } from \"antd\";\nimport Announcement from \"../course/announcement/Announcement\";\nimport AdjustableQuestion from \"../course/helpform/AdjustableQuestion\";\nimport BeingHelped from \"./BeingHelped\";\nimport QueueStatus from \"./QueueStatus\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../redux/selectors\";\nimport { submitQuestion } from \"../../redux/courses/actions/student\";\nimport YourQuestion from \"../wotos/discussioncard/YourQuestion\";\nimport util from \"../../util\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n/**\n * @jaidharosenblatt Page that allows users to work together in a help room\n * Takes in and can modify a question\n */\n\nconst ActiveSession = props => {\n  var _session$announcement;\n\n  const {\n    courseID,\n    session,\n    loading,\n    activeQuestion,\n    stats,\n    help,\n    questions\n  } = props;\n  const wotoPrompt = util.getWotoPrompt(activeQuestion.description, stats.valueMap, questions.length);\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, session === null || session === void 0 ? void 0 : (_session$announcement = session.announcements) === null || _session$announcement === void 0 ? void 0 : _session$announcement.map((item, key) => {\n    return /*#__PURE__*/React.createElement(Announcement, {\n      key: key,\n      announcement: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }\n    });\n  }))), help ? /*#__PURE__*/React.createElement(BeingHelped, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(QueueStatus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }), !(activeQuestion === null || activeQuestion === void 0 ? void 0 : activeQuestion.description) && /*#__PURE__*/React.createElement(Alert, {\n    alert: true,\n    type: \"warning\",\n    message: \"You will not be seen by a TA until you submit your question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), wotoPrompt && (activeQuestion === null || activeQuestion === void 0 ? void 0 : activeQuestion.description) && !(activeQuestion === null || activeQuestion === void 0 ? void 0 : activeQuestion.assistant) && /*#__PURE__*/React.createElement(Alert, {\n    alert: true,\n    type: \"info\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => history.push(`/courses/${courseID}/woto`),\n    message: /*#__PURE__*/React.createElement(React.Fragment, null, `${wotoPrompt}. Try working with them in a Woto Room  `, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"A video room for you to collaborate with peers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), activeQuestion.description && /*#__PURE__*/React.createElement(YourQuestion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 38\n    }\n  }), !(activeQuestion === null || activeQuestion === void 0 ? void 0 : activeQuestion.description) && /*#__PURE__*/React.createElement(Card, {\n    title: /*#__PURE__*/React.createElement(Space, {\n      direction: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"What's Your Question?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Please describe what you need help from a TA with\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AdjustableQuestion, {\n    loading: loading,\n    onFormSubmit: description => props.submitQuestion(description),\n    CTA: \"Submit Your Question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    session: selectors.getSession(state),\n    loading: selectors.getLoading(state),\n    stats: selectors.getStats(state),\n    questions: selectors.getQuestions(state),\n    courseID: selectors.getCourseID(state),\n    activeQuestion: selectors.getActiveQuestion(state),\n    help: selectors.getHelp(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  submitQuestion\n})(ActiveSession);","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/student/ActiveSession.js"],"names":["React","Col","Card","Row","Space","Alert","Tooltip","Announcement","AdjustableQuestion","BeingHelped","QueueStatus","connect","selectors","submitQuestion","YourQuestion","util","QuestionCircleOutlined","useHistory","ActiveSession","props","courseID","session","loading","activeQuestion","stats","help","questions","wotoPrompt","getWotoPrompt","description","valueMap","length","history","announcements","map","item","key","assistant","cursor","push","mapStateToProps","state","getSession","getLoading","getStats","getQuestions","getCourseID","getActiveQuestion","getHelp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Col, Card, Row, Space, Alert, Tooltip } from \"antd\";\nimport Announcement from \"../course/announcement/Announcement\";\nimport AdjustableQuestion from \"../course/helpform/AdjustableQuestion\";\nimport BeingHelped from \"./BeingHelped\";\nimport QueueStatus from \"./QueueStatus\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../../redux/selectors\";\nimport { submitQuestion } from \"../../redux/courses/actions/student\";\nimport YourQuestion from \"../wotos/discussioncard/YourQuestion\";\nimport util from \"../../util\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n\n/**\n * @jaidharosenblatt Page that allows users to work together in a help room\n * Takes in and can modify a question\n */\nconst ActiveSession = (props) => {\n  const {\n    courseID,\n    session,\n    loading,\n    activeQuestion,\n    stats,\n    help,\n    questions,\n  } = props;\n  const wotoPrompt = util.getWotoPrompt(\n    activeQuestion.description,\n    stats.valueMap,\n    questions.length\n  );\n\n  const history = useHistory();\n\n  return (\n    <Col span={24}>\n      <Row align=\"center\">\n        <Col span={24}>\n          {session?.announcements?.map((item, key) => {\n            return <Announcement key={key} announcement={item} />;\n          })}\n        </Col>\n      </Row>\n\n      {help ? <BeingHelped /> : <QueueStatus />}\n\n      {!activeQuestion?.description && (\n        <Alert\n          alert\n          type=\"warning\"\n          message={\n            \"You will not be seen by a TA until you submit your question\"\n          }\n        />\n      )}\n\n      {wotoPrompt && activeQuestion?.description && !activeQuestion?.assistant && (\n        <Alert\n          alert\n          type=\"info\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => history.push(`/courses/${courseID}/woto`)}\n          message={\n            <>\n              {`${wotoPrompt}. Try working with them in a Woto Room  `}\n              <Tooltip title=\"A video room for you to collaborate with peers\">\n                <QuestionCircleOutlined />\n              </Tooltip>\n            </>\n          }\n        />\n      )}\n      {/* If an assistant is helping them */}\n\n      {activeQuestion.description && <YourQuestion />}\n      {!activeQuestion?.description && (\n        <Card\n          title={\n            <Space direction=\"vertical\">\n              <h2>What's Your Question?</h2>\n              <p>Please describe what you need help from a TA with</p>\n            </Space>\n          }\n        >\n          <AdjustableQuestion\n            loading={loading}\n            onFormSubmit={(description) => props.submitQuestion(description)}\n            CTA=\"Submit Your Question\"\n          />\n        </Card>\n      )}\n    </Col>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    session: selectors.getSession(state),\n    loading: selectors.getLoading(state),\n    stats: selectors.getStats(state),\n    questions: selectors.getQuestions(state),\n    courseID: selectors.getCourseID(state),\n    activeQuestion: selectors.getActiveQuestion(state),\n    help: selectors.getHelp(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  submitQuestion,\n})(ActiveSession);\n"]},"metadata":{},"sourceType":"module"}