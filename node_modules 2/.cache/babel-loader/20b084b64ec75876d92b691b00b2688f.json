{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.listRef = React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragNodesKeys: getDragNodesKeys(eventKey, keyEntities)\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragNodesKeys = _this$state2.dragNodesKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n      if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: convertNodePropsToEventData(node.props),\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var dragNodesKeys = _this.state.dragNodesKeys;\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        return;\n      } // Update drag position\n\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state3 = _this.state,\n          _this$state3$dragNode = _this$state3.dragNodesKeys,\n          dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n          dropPosition = _this$state3.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props2 = node.props,\n          eventKey = _node$props2.eventKey,\n          pos = _node$props2.pos;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false\n        });\n      }\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state4 = _this.state,\n          keyEntities = _this$state4.keyEntities,\n          oriCheckedKeys = _this$state4.checkedKeys,\n          oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state5 = _this.state,\n                currentLoadedKeys = _this$state5.loadedKeys,\n                currentLoadingKeys = _this$state5.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state6 = _this.state,\n          expandedKeys = _this$state6.expandedKeys,\n          selectedKeys = _this$state6.selectedKeys,\n          loadedKeys = _this$state6.loadedKeys,\n          loadingKeys = _this$state6.loadingKeys,\n          checkedKeys = _this$state6.checkedKeys,\n          halfCheckedKeys = _this$state6.halfCheckedKeys,\n          dragOverNodeKey = _this$state6.dragOverNodeKey,\n          dropPosition = _this$state6.dropPosition,\n          keyEntities = _this$state6.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }; // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    }; // =========================== Keyboard ===========================\n\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state7 = _this.state,\n          activeKey = _this$state7.activeKey,\n          flattenNodes = _this$state7.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state8 = _this.state,\n          flattenNodes = _this$state8.flattenNodes,\n          activeKey = _this$state8.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state9 = _this.state,\n          activeKey = _this$state9.activeKey,\n          expandedKeys = _this$state9.expandedKeys,\n          checkedKeys = _this$state9.checkedKeys;\n      var _this$props5 = _this.props,\n          onKeyDown = _this$props5.onKeyDown,\n          checkable = _this$props5.checkable,\n          selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state10 = this.state,\n          focused = _this$state10.focused,\n          flattenNodes = _this$state10.flattenNodes,\n          keyEntities = _this$state10.keyEntities,\n          dragging = _this$state10.dragging,\n          activeKey = _this$state10.activeKey;\n      var _this$props6 = this.props,\n          prefixCls = _this$props6.prefixCls,\n          className = _this$props6.className,\n          style = _this$props6.style,\n          showLine = _this$props6.showLine,\n          focusable = _this$props6.focusable,\n          _this$props6$tabIndex = _this$props6.tabIndex,\n          tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n          selectable = _this$props6.selectable,\n          showIcon = _this$props6.showIcon,\n          icon = _this$props6.icon,\n          switcherIcon = _this$props6.switcherIcon,\n          draggable = _this$props6.draggable,\n          checkable = _this$props6.checkable,\n          checkStrictly = _this$props6.checkStrictly,\n          disabled = _this$props6.disabled,\n          motion = _this$props6.motion,\n          loadData = _this$props6.loadData,\n          filterTreeNode = _this$props6.filterTreeNode,\n          height = _this$props6.height,\n          itemHeight = _this$props6.itemHeight,\n          virtual = _this$props6.virtual;\n      var domProps = getDataAndAria(this.props);\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, React.createElement(NodeList, Object.assign({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\nTree.TreeNode = TreeNode;\nexport default Tree;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/node_modules/rc-tree/es/Tree.js"],"names":["_defineProperty","_toConsumableArray","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","React","KeyCode","warning","classNames","TreeContext","getDataAndAria","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","Tree","_React$Component","_super","_this","state","keyEntities","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragging","dragNodesKeys","dragOverNodeKey","dropPosition","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","dragNode","newExpandedKeys","setState","setExpandedKeys","onNodeDragEnter","_this$state2","onDragEnter","_node$props","pos","indexOf","setTimeout","delayedDragEnterLogic","clearTimeout","window","entity","children","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","cleanDragState","onNodeDrop","_this$state3","_this$state3$dragNode","onDrop","_node$props2","posArr","dropResult","slice","Number","dropToGap","onNodeClick","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","setUncontrolledState","nativeEvent","onNodeCheck","checked","_this$state4","oriCheckedKeys","oriHalfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","concat","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","Array","from","checkedNodesPositions","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props3","loadData","onLoad","promise","then","_this$state5","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","getTreeNodeRequiredProps","_this$state6","onNodeExpand","_this$props4","onExpand","expanded","index","targetExpanded","loadPromise","newFlattenTreeData","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","getActiveItem","_this$state7","find","_ref2","data","offsetActiveKey","offset","_this$state8","findIndex","_ref3","item","onKeyDown","_this$state9","_this$props5","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","active","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","undefined","forceState","needSync","allPassed","newState","name","scroll","current","value","render","_classNames","_this$state10","_this$props6","prefixCls","className","style","showLine","focusable","_this$props6$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","domProps","createElement","Provider","assign","ref","getDerivedStateFromProps","prevState","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.listRef = React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragNodesKeys: getDragNodesKeys(eventKey, keyEntities)\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragNodesKeys = _this$state2.dragNodesKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n      if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: convertNodePropsToEventData(node.props),\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var dragNodesKeys = _this.state.dragNodesKeys;\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        return;\n      } // Update drag position\n\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state3 = _this.state,\n          _this$state3$dragNode = _this$state3.dragNodesKeys,\n          dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n          dropPosition = _this$state3.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props2 = node.props,\n          eventKey = _node$props2.eventKey,\n          pos = _node$props2.pos;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false\n        });\n      }\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state4 = _this.state,\n          keyEntities = _this$state4.keyEntities,\n          oriCheckedKeys = _this$state4.checkedKeys,\n          oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state5 = _this.state,\n                currentLoadedKeys = _this$state5.loadedKeys,\n                currentLoadingKeys = _this$state5.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state6 = _this.state,\n          expandedKeys = _this$state6.expandedKeys,\n          selectedKeys = _this$state6.selectedKeys,\n          loadedKeys = _this$state6.loadedKeys,\n          loadingKeys = _this$state6.loadingKeys,\n          checkedKeys = _this$state6.checkedKeys,\n          halfCheckedKeys = _this$state6.halfCheckedKeys,\n          dragOverNodeKey = _this$state6.dragOverNodeKey,\n          dropPosition = _this$state6.dropPosition,\n          keyEntities = _this$state6.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }; // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    }; // =========================== Keyboard ===========================\n\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state7 = _this.state,\n          activeKey = _this$state7.activeKey,\n          flattenNodes = _this$state7.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state8 = _this.state,\n          flattenNodes = _this$state8.flattenNodes,\n          activeKey = _this$state8.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state9 = _this.state,\n          activeKey = _this$state9.activeKey,\n          expandedKeys = _this$state9.expandedKeys,\n          checkedKeys = _this$state9.checkedKeys;\n      var _this$props5 = _this.props,\n          onKeyDown = _this$props5.onKeyDown,\n          checkable = _this$props5.checkable,\n          selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state10 = this.state,\n          focused = _this$state10.focused,\n          flattenNodes = _this$state10.flattenNodes,\n          keyEntities = _this$state10.keyEntities,\n          dragging = _this$state10.dragging,\n          activeKey = _this$state10.activeKey;\n      var _this$props6 = this.props,\n          prefixCls = _this$props6.prefixCls,\n          className = _this$props6.className,\n          style = _this$props6.style,\n          showLine = _this$props6.showLine,\n          focusable = _this$props6.focusable,\n          _this$props6$tabIndex = _this$props6.tabIndex,\n          tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n          selectable = _this$props6.selectable,\n          showIcon = _this$props6.showIcon,\n          icon = _this$props6.icon,\n          switcherIcon = _this$props6.switcherIcon,\n          draggable = _this$props6.draggable,\n          checkable = _this$props6.checkable,\n          checkStrictly = _this$props6.checkStrictly,\n          disabled = _this$props6.disabled,\n          motion = _this$props6.motion,\n          loadData = _this$props6.loadData,\n          filterTreeNode = _this$props6.filterTreeNode,\n          height = _this$props6.height,\n          itemHeight = _this$props6.itemHeight,\n          virtual = _this$props6.virtual;\n      var domProps = getDataAndAria(this.props);\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, React.createElement(NodeList, Object.assign({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\nTree.TreeNode = TreeNode;\nexport default Tree;"]},"metadata":{},"sourceType":"module"}