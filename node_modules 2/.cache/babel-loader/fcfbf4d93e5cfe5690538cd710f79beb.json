{"ast":null,"code":"var _jsxFileName = \"/Users/jasmineharris/Desktop/Elite/woto/src/components/course/collapsedquestion/CollapsedQuestion.js\";\nimport React from \"react\";\nimport { Row, Space } from \"antd\";\nimport attributeIconMap from \"./attributeIconMap\";\nimport \"./CollapsedQuestion.css\";\nimport { renderCommonItem } from \"../../../util/getCommonValues\";\n/**\n * Renders a vertical list of icontags based on const attributeIconMap\n * @param details question submission to map through\n * @param highlightKeys field keys to highlight blue\n * @param words (optional) switch to using field names instead of icons\n */\n\nconst CollapsedQuestion = ({\n  details,\n  highlightKeys,\n  words\n}) => {\n  if (!details) {\n    return null;\n  }\n\n  const IconTag = ({\n    attribute,\n    value\n  }) => {\n    if (Array.isArray(value)) {\n      value = value.join(\", \");\n    }\n\n    if (typeof value === \"object\") {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      align: \"baseline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        textTransform: \"capitalize\",\n        color: \"#262626\",\n        whiteSpace: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, attributeIconMap(attribute).icon, words && ` ${attributeIconMap(attribute).label}:`), renderCommonItem(value, highlightKeys)));\n  };\n\n  const blockedKeys = [\"collaborate\", \"roomName\"];\n  const questionKeys = Object.keys(details);\n  const questionKeysFiltered = questionKeys.filter(key => details[key] !== undefined && !blockedKeys.includes(key));\n  return /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, questionKeysFiltered.map(key => {\n    return /*#__PURE__*/React.createElement(IconTag, {\n      key: key,\n      attribute: key,\n      value: details[key],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default CollapsedQuestion;","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/components/course/collapsedquestion/CollapsedQuestion.js"],"names":["React","Row","Space","attributeIconMap","renderCommonItem","CollapsedQuestion","details","highlightKeys","words","IconTag","attribute","value","Array","isArray","join","textTransform","color","whiteSpace","icon","label","blockedKeys","questionKeys","Object","keys","questionKeysFiltered","filter","key","undefined","includes","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,MAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,yBAAP;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA;;;;;;;AAMA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAD,KAAuC;AAC/D,MAAI,CAACF,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,QAAMG,OAAO,GAAG,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAD,KAA0B;AACxC,QAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxBA,MAAAA,KAAK,GAAGA,KAAK,CAACG,IAAN,CAAW,IAAX,CAAR;AACD;;AAED,QAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAO,IAAP;AACD;;AAED,wBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AACLI,QAAAA,aAAa,EAAE,YADV;AAELC,QAAAA,KAAK,EAAE,SAFF;AAGLC,QAAAA,UAAU,EAAE;AAHP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGd,gBAAgB,CAACO,SAAD,CAAhB,CAA4BQ,IAP/B,EAQGV,KAAK,IAAK,IAAGL,gBAAgB,CAACO,SAAD,CAAhB,CAA4BS,KAAM,GARlD,CADF,EAYGf,gBAAgB,CAACO,KAAD,EAAQJ,aAAR,CAZnB,CADF,CADF;AAkBD,GA3BD;;AA6BA,QAAMa,WAAW,GAAG,CAAC,aAAD,EAAgB,UAAhB,CAApB;AACA,QAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYjB,OAAZ,CAArB;AACA,QAAMkB,oBAAoB,GAAGH,YAAY,CAACI,MAAb,CAC1BC,GAAD,IAASpB,OAAO,CAACoB,GAAD,CAAP,KAAiBC,SAAjB,IAA8B,CAACP,WAAW,CAACQ,QAAZ,CAAqBF,GAArB,CADb,CAA7B;AAIA,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,oBAAoB,CAACK,GAArB,CAA0BH,GAAD,IAAS;AACjC,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,GAAd;AAAmB,MAAA,SAAS,EAAEA,GAA9B;AAAmC,MAAA,KAAK,EAAEpB,OAAO,CAACoB,GAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF;AAOD,CA9CD;;AA+CA,eAAerB,iBAAf","sourcesContent":["import React from \"react\";\nimport { Row, Space } from \"antd\";\nimport attributeIconMap from \"./attributeIconMap\";\nimport \"./CollapsedQuestion.css\";\nimport { renderCommonItem } from \"../../../util/getCommonValues\";\n/**\n * Renders a vertical list of icontags based on const attributeIconMap\n * @param details question submission to map through\n * @param highlightKeys field keys to highlight blue\n * @param words (optional) switch to using field names instead of icons\n */\nconst CollapsedQuestion = ({ details, highlightKeys, words }) => {\n  if (!details) {\n    return null;\n  }\n  const IconTag = ({ attribute, value }) => {\n    if (Array.isArray(value)) {\n      value = value.join(\", \");\n    }\n\n    if (typeof value === \"object\") {\n      return null;\n    }\n\n    return (\n      <Row>\n        <Space align=\"baseline\">\n          <strong\n            style={{\n              textTransform: \"capitalize\",\n              color: \"#262626\",\n              whiteSpace: \"nowrap\",\n            }}\n          >\n            {attributeIconMap(attribute).icon}\n            {words && ` ${attributeIconMap(attribute).label}:`}\n          </strong>\n\n          {renderCommonItem(value, highlightKeys)}\n        </Space>\n      </Row>\n    );\n  };\n\n  const blockedKeys = [\"collaborate\", \"roomName\"];\n  const questionKeys = Object.keys(details);\n  const questionKeysFiltered = questionKeys.filter(\n    (key) => details[key] !== undefined && !blockedKeys.includes(key)\n  );\n\n  return (\n    <Space direction=\"vertical\" align=\"left\">\n      {questionKeysFiltered.map((key) => {\n        return <IconTag key={key} attribute={key} value={details[key]} />;\n      })}\n    </Space>\n  );\n};\nexport default CollapsedQuestion;\n"]},"metadata":{},"sourceType":"module"}