{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window; // antd mobile breakpoints\n\n  const md = width > 768;\n  const sm = width > 576;\n  return {\n    width,\n    height,\n    sm,\n    md\n  };\n}\n/**\n * Get the width and height of the video port\n */\n\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowDimensions;\n}","map":{"version":3,"sources":["/Users/jasmineharris/Desktop/Elite/woto/src/hooks/useWindowDimensions.js"],"names":["useState","useEffect","getWindowDimensions","innerWidth","width","innerHeight","height","window","md","sm","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,mBAAT,GAA+B;AAC7B,QAAM;AAAEC,IAAAA,UAAU,EAAEC,KAAd;AAAqBC,IAAAA,WAAW,EAAEC;AAAlC,MAA6CC,MAAnD,CAD6B,CAE7B;;AACA,QAAMC,EAAE,GAAGJ,KAAK,GAAG,GAAnB;AACA,QAAMK,EAAE,GAAGL,KAAK,GAAG,GAAnB;AAEA,SAAO;AACLA,IAAAA,KADK;AAELE,IAAAA,MAFK;AAGLG,IAAAA,EAHK;AAILD,IAAAA;AAJK,GAAP;AAMD;AAED;;;;;AAGA,eAAe,SAASE,mBAAT,GAA+B;AAC5C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CACtDE,mBAAmB,EADmC,CAAxD;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASY,YAAT,GAAwB;AACtBD,MAAAA,mBAAmB,CAACV,mBAAmB,EAApB,CAAnB;AACD;;AAEDK,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  // antd mobile breakpoints\n  const md = width > 768;\n  const sm = width > 576;\n\n  return {\n    width,\n    height,\n    sm,\n    md,\n  };\n}\n\n/**\n * Get the width and height of the video port\n */\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}